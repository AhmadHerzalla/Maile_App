{
    "sourceFile": "lib/core/services/user_controller.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1694686366840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694686372307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n       }\r\n     }\r\n     return Future.error('not found');\r\n   }\r\n-  Future<MailsModel> getMails() async {\r\n+  Future<MailsModel> getUsder() async {\r\n   final ApiBaseHelper helper = ApiBaseHelper();\r\n   final String token = await getToken();\r\n   final response = await helper.get(\r\n     '/mails',\r\n"
                },
                {
                    "date": 1694686378980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n       }\r\n     }\r\n     return Future.error('not found');\r\n   }\r\n-  Future<MailsModel> getUsder() async {\r\n+  Future<User> getUsder() async {\r\n   final ApiBaseHelper helper = ApiBaseHelper();\r\n   final String token = await getToken();\r\n   final response = await helper.get(\r\n     '/mails',\r\n"
                },
                {
                    "date": 1694686386009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n       }\r\n     }\r\n     return Future.error('not found');\r\n   }\r\n-  Future<User> getUsder() async {\r\n+  Future<User> getUser() async {\r\n   final ApiBaseHelper helper = ApiBaseHelper();\r\n   final String token = await getToken();\r\n   final response = await helper.get(\r\n     '/mails',\r\n"
                },
                {
                    "date": 1694686393468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import 'dart:convert';\r\n+\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+\r\n+class UserController {\r\n+  Future<User> getLocalUser() async {\r\n+    SharedPrefsController _prefs = SharedPrefsController();\r\n+    bool hasKey = await _prefs.containsKey('user');\r\n+    if (hasKey) {\r\n+      dynamic userData = await _prefs.getData('user');\r\n+      if (userData != null) {\r\n+        User user = User.fromJson(json.decode(userData));\r\n+        return user;\r\n+      }\r\n+    }\r\n+    return Future.error('not found');\r\n+  }\r\n+  Future<User> getUser() async {\r\n+  final ApiBaseHelper helper = ApiBaseHelper();\r\n+  final String token = await getToken();\r\n+  final response = await helper.get(\r\n+    '/mails',\r\n+    {'Authorization': 'Bearer $token'},\r\n+  );\r\n+\r\n+  return User.fromJson(response[1]);\r\n+}\r\n+}\r\n"
                },
                {
                    "date": 1694686402641,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'dart:convert';\r\n \r\n+import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:final_projectt/models/user_model.dart';\r\n \r\n class UserController {\r\n@@ -26,33 +27,4 @@\n \r\n   return User.fromJson(response[1]);\r\n }\r\n }\r\n-import 'dart:convert';\r\n-\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-\r\n-class UserController {\r\n-  Future<User> getLocalUser() async {\r\n-    SharedPrefsController _prefs = SharedPrefsController();\r\n-    bool hasKey = await _prefs.containsKey('user');\r\n-    if (hasKey) {\r\n-      dynamic userData = await _prefs.getData('user');\r\n-      if (userData != null) {\r\n-        User user = User.fromJson(json.decode(userData));\r\n-        return user;\r\n-      }\r\n-    }\r\n-    return Future.error('not found');\r\n-  }\r\n-  Future<User> getUser() async {\r\n-  final ApiBaseHelper helper = ApiBaseHelper();\r\n-  final String token = await getToken();\r\n-  final response = await helper.get(\r\n-    '/mails',\r\n-    {'Authorization': 'Bearer $token'},\r\n-  );\r\n-\r\n-  return MailsModel.fromJson(response[1]);\r\n-}\r\n-}\r\n"
                },
                {
                    "date": 1694686457491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'dart:convert';\r\n \r\n import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/core/helpers/token_helper.dart';\r\n import 'package:final_projectt/models/user_model.dart';\r\n \r\n class UserController {\r\n   Future<User> getLocalUser() async {\r\n"
                },
                {
                    "date": 1694686469254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n   Future<User> getUser() async {\r\n   final ApiBaseHelper helper = ApiBaseHelper();\r\n   final String token = await getToken();\r\n   final response = await helper.get(\r\n-    '/mails',\r\n+    '/user',\r\n     {'Authorization': 'Bearer $token'},\r\n   );\r\n \r\n   return User.fromJson(response[1]);\r\n"
                },
                {
                    "date": 1694688281310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,26 +6,27 @@\n import 'package:final_projectt/models/user_model.dart';\r\n \r\n class UserController {\r\n   Future<User> getLocalUser() async {\r\n-    SharedPrefsController _prefs = SharedPrefsController();\r\n-    bool hasKey = await _prefs.containsKey('user');\r\n+    SharedPrefsController prefs = SharedPrefsController();\r\n+    bool hasKey = await prefs.containsKey('user');\r\n     if (hasKey) {\r\n-      dynamic userData = await _prefs.getData('user');\r\n+      dynamic userData = await prefs.getData('user');\r\n       if (userData != null) {\r\n         User user = User.fromJson(json.decode(userData));\r\n         return user;\r\n       }\r\n     }\r\n     return Future.error('not found');\r\n   }\r\n+\r\n   Future<User> getUser() async {\r\n-  final ApiBaseHelper helper = ApiBaseHelper();\r\n-  final String token = await getToken();\r\n-  final response = await helper.get(\r\n-    '/user',\r\n-    {'Authorization': 'Bearer $token'},\r\n-  );\r\n-\r\n-  return User.fromJson(response[1]);\r\n+    final ApiBaseHelper helper = ApiBaseHelper();\r\n+    final String token = await getToken();\r\n+    final response = await helper.get(\r\n+      '/user',\r\n+      {'Authorization': 'Bearer $token'},\r\n+    );\r\n+    \r\n+    return User.fromJson(response[1]);\r\n+  }\r\n }\r\n-}\r\n"
                },
                {
                    "date": 1694690865476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+import 'dart:convert';\r\n+\r\n+import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/core/helpers/token_helper.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+\r\n+class UserController {\r\n+  Future<User> getLocalUser() async {\r\n+    SharedPrefsController prefs = SharedPrefsController();\r\n+    bool hasKey = await prefs.containsKey('user');\r\n+    if (hasKey) {\r\n+      dynamic userData = await prefs.getData('user');\r\n+      if (userData != null) {\r\n+        User user = User.fromJson(json.decode(userData));\r\n+        return user;\r\n+      }\r\n+    }\r\n+    return Future.error('not found');\r\n+  }\r\n+\r\n+  Static Future<User> getUser() async {\r\n+    final ApiBaseHelper helper = ApiBaseHelper();\r\n+    final String token = await getToken();\r\n+    final response = await helper.get(\r\n+      '/user',\r\n+      {'Authorization': 'Bearer $token'},\r\n+    );\r\n+    print(User.fromJson(response[1]));\r\n+    return User.fromJson(response[1]);\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694691745040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     }\r\n     return Future.error('not found');\r\n   }\r\n \r\n-  Static Future<User> getUser() async {\r\n+  static Future<User> getUser() async {\r\n     final ApiBaseHelper helper = ApiBaseHelper();\r\n     final String token = await getToken();\r\n     final response = await helper.get(\r\n       '/user',\r\n@@ -28,37 +28,17 @@\n     );\r\n     print(User.fromJson(response[1]));\r\n     return User.fromJson(response[1]);\r\n   }\r\n-}\r\n-import 'dart:convert';\r\n-\r\n-import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/core/helpers/token_helper.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-\r\n-class UserController {\r\n-  Future<User> getLocalUser() async {\r\n-    SharedPrefsController prefs = SharedPrefsController();\r\n-    bool hasKey = await prefs.containsKey('user');\r\n-    if (hasKey) {\r\n-      dynamic userData = await prefs.getData('user');\r\n-      if (userData != null) {\r\n-        User user = User.fromJson(json.decode(userData));\r\n-        return user;\r\n-      }\r\n-    }\r\n-    return Future.error('not found');\r\n+  Future<List<CategoryElement>> getCatego() async {\r\n+  final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n+  User user = userFromJson(prefs.getString('user')!);\r\n+  final response = await http.get(Uri.parse(categoUrl),\r\n+      headers: {'Authorization': 'Bearer ${user.token}'});\r\n+  if (response.statusCode == 200) {\r\n+    final data = jsonDecode(response.body)['categories'] as List<dynamic>;\r\n+    return data.map((e) => CategoryElement.fromJson(e)).toList();\r\n   }\r\n \r\n-  Future<User> getUser() async {\r\n-    final ApiBaseHelper helper = ApiBaseHelper();\r\n-    final String token = await getToken();\r\n-    final response = await helper.get(\r\n-      '/user',\r\n-      {'Authorization': 'Bearer $token'},\r\n-    );\r\n-    \r\n-    return User.fromJson(response[1]);\r\n-  }\r\n+  return Future.error('Error while fetching categories data');\r\n }\r\n+}\r\n"
                },
                {
                    "date": 1694691752386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n     );\r\n     print(User.fromJson(response[1]));\r\n     return User.fromJson(response[1]);\r\n   }\r\n-  Future<List<CategoryElement>> getCatego() async {\r\n+  static Future<List<CategoryElement>> getUser() async {\r\n   final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n   User user = userFromJson(prefs.getString('user')!);\r\n   final response = await http.get(Uri.parse(categoUrl),\r\n       headers: {'Authorization': 'Bearer ${user.token}'});\r\n"
                },
                {
                    "date": 1694691763745,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import 'dart:convert';\r\n+\r\n+import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/core/helpers/token_helper.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+\r\n+class UserController {\r\n+  Future<User> getLocalUser() async {\r\n+    SharedPrefsController prefs = SharedPrefsController();\r\n+    bool hasKey = await prefs.containsKey('user');\r\n+    if (hasKey) {\r\n+      dynamic userData = await prefs.getData('user');\r\n+      if (userData != null) {\r\n+        User user = User.fromJson(json.decode(userData));\r\n+        return user;\r\n+      }\r\n+    }\r\n+    return Future.error('not found');\r\n+  }\r\n+\r\n+  // static Future<User> getUser() async {\r\n+  //   final ApiBaseHelper helper = ApiBaseHelper();\r\n+  //   final String token = await getToken();\r\n+  //   final response = await helper.get(\r\n+  //     '/user',\r\n+  //     {'Authorization': 'Bearer $token'},\r\n+  //   );\r\n+  //   print(User.fromJson(response[1]));\r\n+  //   return User.fromJson(response[1]);\r\n+  // }\r\n+  static Future<User> getUser() async {\r\n+  final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n+  User user = userFromJson(prefs.getString('user')!);\r\n+  final response = await http.get(Uri.parse(categoUrl),\r\n+      headers: {'Authorization': 'Bearer ${user.token}'});\r\n+  if (response.statusCode == 200) {\r\n+    final data = jsonDecode(response.body)['categories'] as List<dynamic>;\r\n+    return data.map((e) => CategoryElement.fromJson(e)).toList();\r\n+  }\r\n+\r\n+  return Future.error('Error while fetching categories data');\r\n+}\r\n+}\r\n"
                },
                {
                    "date": 1694691773372,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,11 @@\n \r\n import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:final_projectt/core/helpers/token_helper.dart';\r\n+import 'package:final_projectt/core/util/constants/end_points.dart';\r\n import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:shared_preferences/shared_preferences.dart';\r\n \r\n class UserController {\r\n   Future<User> getLocalUser() async {\r\n     SharedPrefsController prefs = SharedPrefsController();\r\n@@ -41,48 +43,4 @@\n \r\n   return Future.error('Error while fetching categories data');\r\n }\r\n }\r\n-import 'dart:convert';\r\n-\r\n-import 'package:final_projectt/core/helpers/api_base_helper.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/core/helpers/token_helper.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-\r\n-class UserController {\r\n-  Future<User> getLocalUser() async {\r\n-    SharedPrefsController prefs = SharedPrefsController();\r\n-    bool hasKey = await prefs.containsKey('user');\r\n-    if (hasKey) {\r\n-      dynamic userData = await prefs.getData('user');\r\n-      if (userData != null) {\r\n-        User user = User.fromJson(json.decode(userData));\r\n-        return user;\r\n-      }\r\n-    }\r\n-    return Future.error('not found');\r\n-  }\r\n-\r\n-  static Future<User> getUser() async {\r\n-    final ApiBaseHelper helper = ApiBaseHelper();\r\n-    final String token = await getToken();\r\n-    final response = await helper.get(\r\n-      '/user',\r\n-      {'Authorization': 'Bearer $token'},\r\n-    );\r\n-    print(User.fromJson(response[1]));\r\n-    return User.fromJson(response[1]);\r\n-  }\r\n-  static Future<List<CategoryElement>> getUser() async {\r\n-  final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n-  User user = userFromJson(prefs.getString('user')!);\r\n-  final response = await http.get(Uri.parse(categoUrl),\r\n-      headers: {'Authorization': 'Bearer ${user.token}'});\r\n-  if (response.statusCode == 200) {\r\n-    final data = jsonDecode(response.body)['categories'] as List<dynamic>;\r\n-    return data.map((e) => CategoryElement.fromJson(e)).toList();\r\n-  }\r\n-\r\n-  return Future.error('Error while fetching categories data');\r\n-}\r\n-}\r\n"
                },
                {
                    "date": 1694691779918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   // }\r\n   static Future<User> getUser() async {\r\n   final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n   User user = userFromJson(prefs.getString('user')!);\r\n-  final response = await http.get(Uri.parse(categoUrl),\r\n+  final response = await http.get(Uri.parse(m),\r\n       headers: {'Authorization': 'Bearer ${user.token}'});\r\n   if (response.statusCode == 200) {\r\n     final data = jsonDecode(response.body)['categories'] as List<dynamic>;\r\n     return data.map((e) => CategoryElement.fromJson(e)).toList();\r\n"
                },
                {
                    "date": 1694691788845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n   // }\r\n   static Future<User> getUser() async {\r\n   final SharedPreferences prefs = await SharedPreferences.getInstance();\r\n   User user = userFromJson(prefs.getString('user')!);\r\n-  final response = await http.get(Uri.parse(baseUrl),\r\n+  final response = await http.get(Uri.parse(baseUrl'),\r\n       headers: {'Authorization': 'Bearer ${user.token}'});\r\n   if (response.statusCode == 200) {\r\n     final data = jsonDecode(response.body)['categories'] as List<dynamic>;\r\n     return data.map((e) => CategoryElement.fromJson(e)).toList();\r\n"
                },
                {
                    "date": 1694691849637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,7 +42,7 @@\n       print(data);\r\n       return data;\r\n     }\r\n \r\n-    return Future.error('Error while fetching categories data');\r\n+    return Future.error('Error while fetching user data');\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1694686366840,
            "name": "Commit-0",
            "content": "import 'dart:convert';\r\n\r\nimport 'package:final_projectt/core/helpers/shared_prefs.dart';\r\nimport 'package:final_projectt/models/user_model.dart';\r\n\r\nclass UserController {\r\n  Future<User> getLocalUser() async {\r\n    SharedPrefsController _prefs = SharedPrefsController();\r\n    bool hasKey = await _prefs.containsKey('user');\r\n    if (hasKey) {\r\n      dynamic userData = await _prefs.getData('user');\r\n      if (userData != null) {\r\n        User user = User.fromJson(json.decode(userData));\r\n        return user;\r\n      }\r\n    }\r\n    return Future.error('not found');\r\n  }\r\n  Future<MailsModel> getMails() async {\r\n  final ApiBaseHelper helper = ApiBaseHelper();\r\n  final String token = await getToken();\r\n  final response = await helper.get(\r\n    '/mails',\r\n    {'Authorization': 'Bearer $token'},\r\n  );\r\n\r\n  return MailsModel.fromJson(response[1]);\r\n}\r\n}\r\n"
        }
    ]
}