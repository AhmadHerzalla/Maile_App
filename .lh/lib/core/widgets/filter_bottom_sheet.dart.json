{
    "sourceFile": "lib/core/widgets/filter_bottom_sheet.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1695387588399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1695387588399,
            "name": "Commit-0",
            "content": "import 'package:easy_localization/easy_localization.dart';\r\nimport 'package:final_projectt/Screens/search_screen.dart';\r\nimport 'package:final_projectt/core/services/status_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/custom_expansion.dart';\r\nimport 'package:final_projectt/models/status_model.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass FilterBottomSheet extends StatefulWidget {\r\n  final String? textSearch;\r\n  const FilterBottomSheet({super.key, this.textSearch});\r\n\r\n  @override\r\n  State<FilterBottomSheet> createState() => _FilterBottomSheetState();\r\n}\r\n\r\nclass _FilterBottomSheetState extends State<FilterBottomSheet> {\r\n  int? selectedIndexStatus;\r\n  late Future<StatusesesModel> statuses;\r\n  DateTime? dateStart;\r\n  DateTime? dateEnd;\r\n\r\n  @override\r\n  void initState() {\r\n    statuses = StatusController().fetchStatuse();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Container(\r\n      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n      height: MediaQuery.of(context).size.height * 0.95,\r\n      color: const Color(0xffF7F6FF),\r\n      child: SingleChildScrollView(\r\n        physics: const BouncingScrollPhysics(),\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.start,\r\n          crossAxisAlignment: CrossAxisAlignment.start,\r\n          children: [\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n              children: [\r\n                TextButton(\r\n                  child: Text(\"Cancel\".tr(),\r\n                      style: const TextStyle(\r\n                          color: Color(0xff6589FF), fontSize: 18)),\r\n                  onPressed: () {\r\n                    Navigator.pushReplacement(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                            builder: (context) => const SearchScreen()));\r\n                  },\r\n                ),\r\n                Text(\"Filter\".tr(),\r\n                    style: const TextStyle(\r\n                        color: Color(0xff272727), fontSize: 18)),\r\n                TextButton(\r\n                  child: Text(\"Done\".tr(),\r\n                      style: const TextStyle(\r\n                          color: Color(0xff6589FF), fontSize: 18)),\r\n                  onPressed: () {\r\n                    Navigator.pushReplacement(\r\n                        context,\r\n                        MaterialPageRoute(\r\n                            builder: (context) => SearchScreen(\r\n                                text: widget.textSearch,\r\n                                statuId: selectedIndexStatus != null\r\n                                    ? selectedIndexStatus! + 1\r\n                                    : null,\r\n                                startDate: dateStart,\r\n                                endDate: dateEnd)));\r\n                  },\r\n                ),\r\n              ],\r\n            ),\r\n            Padding(\r\n              padding: const EdgeInsets.only(left: 16.0, right: 16, top: 24),\r\n              child: TextButton(\r\n                  onPressed: () {\r\n                    setState(() {\r\n                      selectedIndexStatus = null;\r\n                    });\r\n                  },\r\n                  child: Text(\"Clear\".tr(),\r\n                      style: const TextStyle(\r\n                          color: Color(0xff6589FF), fontSize: 18))),\r\n            ),\r\n            FutureBuilder(\r\n              future: statuses,\r\n              builder: (context, snapshot) {\r\n                if (snapshot.hasData) {\r\n                  return Container(\r\n                    decoration: BoxDecoration(\r\n                        color: const Color(0xffFFFFFF),\r\n                        borderRadius: BorderRadius.circular(32)),\r\n                    width: 378,\r\n                    child: Column(\r\n                      children: [\r\n                        ListView.builder(\r\n                          shrinkWrap: true,\r\n                          padding: EdgeInsets.zero,\r\n                          physics: const NeverScrollableScrollPhysics(),\r\n                          itemBuilder: (context, index) {\r\n                            String hexColor =\r\n                                snapshot.data!.statuses![index].color!;\r\n\r\n                            return ListTile(\r\n                              onTap: () {\r\n                                setState(() {\r\n                                  selectedIndexStatus = index;\r\n                                });\r\n                              },\r\n                              title: Column(\r\n                                mainAxisAlignment: MainAxisAlignment.start,\r\n                                crossAxisAlignment: CrossAxisAlignment.start,\r\n                                children: [\r\n                                  Row(\r\n                                    children: [\r\n                                      Container(\r\n                                        margin:\r\n                                            const EdgeInsetsDirectional.only(\r\n                                                end: 12),\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        decoration: BoxDecoration(\r\n                                          borderRadius:\r\n                                              BorderRadius.circular(10),\r\n                                          color: Color(int.parse(hexColor)),\r\n                                        ),\r\n                                      ),\r\n                                      Text(\r\n                                        \"${snapshot.data!.statuses![index].name!}\"\r\n                                            .tr(),\r\n                                        style: const TextStyle(fontSize: 20),\r\n                                      ),\r\n                                      const Spacer(),\r\n                                      selectedIndexStatus == index\r\n                                          ? Icon(\r\n                                              Icons.check,\r\n                                              color: primaryColor,\r\n                                            )\r\n                                          : const SizedBox(),\r\n                                      const SizedBox(\r\n                                        width: 15,\r\n                                      )\r\n                                    ],\r\n                                  ),\r\n                                  Container(\r\n                                    margin: const EdgeInsets.only(top: 10),\r\n                                    width: MediaQuery.sizeOf(context).width,\r\n                                    height: 1,\r\n                                    color:\r\n                                        snapshot.data!.statuses!.length - 1 ==\r\n                                                index\r\n                                            ? Colors.transparent\r\n                                            : Colors.grey.shade300,\r\n                                  )\r\n                                ],\r\n                              ),\r\n                            );\r\n                          },\r\n                          itemCount: 4,\r\n                        )\r\n                      ],\r\n                    ),\r\n                  );\r\n                }\r\n                if (snapshot.hasError) {\r\n                  return Text(snapshot.error.toString());\r\n                }\r\n                return Center(\r\n                  child: SpinKitPulse(\r\n                          duration: Duration(milliseconds: 1000),\r\n                          color: Colors.grey,\r\n                          size: 40,\r\n                        ),\r\n                );\r\n              },\r\n            ),\r\n            CustomExpansion(\r\n              dateText: dateStart,\r\n              titleOfDate: \"Start Date\".tr(),\r\n              children: <Widget>[\r\n                CalendarDatePicker(\r\n                  currentDate: DateTime.now(),\r\n                  initialDate: dateStart != null ? dateStart! : DateTime.now(),\r\n                  firstDate: DateTime(1900, 1, 1),\r\n                  lastDate: DateTime(2100, 1, 1),\r\n                  onDateChanged: (DateTime newdate) {\r\n                    setState(() {\r\n                      dateStart = newdate;\r\n                    });\r\n                  },\r\n                ),\r\n              ],\r\n            ),\r\n            CustomExpansion(\r\n              dateText: dateEnd,\r\n              titleOfDate: \"End Date\".tr(),\r\n              children: <Widget>[\r\n                CalendarDatePicker(\r\n                  currentDate: DateTime.now(),\r\n                  initialDate: dateEnd != null ? dateEnd! : DateTime.now(),\r\n                  firstDate: DateTime(1900, 1, 1),\r\n                  lastDate: DateTime(2100, 1, 1),\r\n                  onDateChanged: (DateTime newdate) {\r\n                    setState(() {\r\n                      dateEnd = newdate;\r\n                    });\r\n                  },\r\n                ),\r\n              ],\r\n            )\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}