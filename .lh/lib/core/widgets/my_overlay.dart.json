{
    "sourceFile": "lib/core/widgets/my_overlay.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1694863724167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694864019456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,9 +88,9 @@\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n                   hideOverlay();\r\n-                  \r\n+\r\n                 },\r\n                 child: Row(\r\n                   children: [\r\n                     const Icon(\r\n@@ -173,7 +173,6 @@\n       ),\r\n     );\r\n   });\r\n \r\n-  // Inserting the OverlayEntry into the Overlay\r\n   overlayState.insert(overlayEntry);\r\n }\r\n"
                },
                {
                    "date": 1694864027027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,34 +114,11 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n-                  // try {\r\n-                  //   logout(\r\n-                  //     context,\r\n-                  //   ).then((response) async {\r\n-                  //     SharedPrefsController prefs = SharedPrefsController();\r\n-                  //     await prefs.deleteData('user');\r\n-                  //     hideOverlay();\r\n-                  //     // ignore: use_build_context_synchronously\r\n-                  //     Navigator.pushReplacement(context, MaterialPageRoute(\r\n-                  //       builder: (context) {\r\n-                  //         return const LoginScreen();\r\n-                  //       },\r\n-                  //     ));\r\n-                  //   }).catchError((err) async {\r\n-                  //     final errorMessagae = (err.message)['message'].toString();\r\n-                  //     showAlert(context,\r\n-                  //         message: errorMessagae,\r\n-                  //         color: Colors.redAccent,\r\n-                  //         width: 300);\r\n-                  //   });\r\n-                  // } catch (e) {\r\n-                  //  SharedPrefsController prefs = SharedPrefsController();\r\n-                  //  prefs.deleteData('user');\r\n                   deletShar();\r\n                   hideOverlay();\r\n-                  // ignore: use_build_context_synchronously\r\n+\r\n                   Navigator.pushReplacement(context, MaterialPageRoute(\r\n                     builder: (context) {\r\n                       return const SplashScreen();\r\n                     },\r\n"
                },
                {
                    "date": 1694864034736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,8 @@\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/login_screen.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-//import 'package:final_projectt/core/services/logout_controller.dart';\r\n-//import 'package:final_projectt/core/widgets/show_alert.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n \r\n"
                },
                {
                    "date": 1694865490026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n-//import 'dart:convert';\r\n import 'package:easy_localization/easy_localization.dart';\r\n-import 'package:final_projectt/Screens/login_screen.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n@@ -86,9 +84,9 @@\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n                   hideOverlay();\r\n-\r\n+                  // line x : \r\n                 },\r\n                 child: Row(\r\n                   children: [\r\n                     const Icon(\r\n"
                },
                {
                    "date": 1694866149882,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n                   hideOverlay();\r\n-                  // line x : \r\n+                  \r\n                 },\r\n                 child: Row(\r\n                   children: [\r\n                     const Icon(\r\n"
                },
                {
                    "date": 1694866157774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,13 +80,15 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n+\r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n+                        rtlProvider.toggleRTL();\r\n                   hideOverlay();\r\n-                  \r\n+\r\n                 },\r\n                 child: Row(\r\n                   children: [\r\n                     const Icon(\r\n"
                },
                {
                    "date": 1694866200230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n-\r\n+late RTLProvider rtlProvider;\r\n void hideOverlay() {\r\n   overlayEntry.remove();\r\n }\r\n \r\n"
                },
                {
                    "date": 1694866212512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,20 @@\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/providers/rtl_provider.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n late RTLProvider rtlProvider;\r\n void hideOverlay() {\r\n   overlayEntry.remove();\r\n }\r\n-\r\n+@override\r\n+  void didChangeDependencies() {\r\n+    super.didChangeDependencies();\r\n+    rtlProvider = Provider.of<RTLProvider>(context);\r\n+  }\r\n void deletShar() async {\r\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n"
                },
                {
                    "date": 1694866219094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,15 @@\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/providers/rtl_provider.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n-late RTLProvider rtlProvider;\r\n+\r\n void hideOverlay() {\r\n   overlayEntry.remove();\r\n }\r\n-@override\r\n-  void didChangeDependencies() {\r\n-    super.didChangeDependencies();\r\n-    rtlProvider = Provider.of<RTLProvider>(context);\r\n-  }\r\n+\r\n void deletShar() async {\r\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n"
                },
                {
                    "date": 1694866244076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n \r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n-                        rtlProvider.toggleRTL();\r\n+                         \r\n                   hideOverlay();\r\n \r\n                 },\r\n                 child: Row(\r\n"
                },
                {
                    "date": 1694866409777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+import 'package:easy_localization/easy_localization.dart';\r\n+import 'package:final_projectt/Screens/splash_screen.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:flutter/material.dart';\r\n+\r\n+late OverlayEntry overlayEntry;\r\n+\r\n+void hideOverlay() {\r\n+  overlayEntry.remove();\r\n+}\r\n+\r\n+void deletShar() async {\r\n+  SharedPrefsController prefs = SharedPrefsController();\r\n+  await prefs.deleteData('user');\r\n+}\r\n+\r\n+void showOverlay(BuildContext context, String name, String role, String image, Call) {\r\n+  OverlayState overlayState = Overlay.of(context);\r\n+  overlayEntry = OverlayEntry(builder: (context) {\r\n+    return Positioned(\r\n+      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n+      top: 50,\r\n+      child: AnimatedContainer(\r\n+        decoration: BoxDecoration(\r\n+          color: Colors.white,\r\n+          borderRadius: BorderRadiusDirectional.circular(16),\r\n+        ),\r\n+        width: 230,\r\n+        height: 350,\r\n+        duration: const Duration(milliseconds: 500),\r\n+        child: Column(\r\n+          mainAxisSize: MainAxisSize.min,\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          children: [\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.end,\r\n+              children: [\r\n+                TextButton(\r\n+                  onPressed: () {\r\n+                    hideOverlay();\r\n+                  },\r\n+                  child: const Icon(\r\n+                    Icons.arrow_forward_ios,\r\n+                    color: Colors.grey,\r\n+                  ),\r\n+                )\r\n+              ],\r\n+            ),\r\n+            Container(\r\n+              padding: const EdgeInsets.all(4),\r\n+              margin: const EdgeInsets.only(bottom: 8),\r\n+              decoration: BoxDecoration(\r\n+                border: Border.all(\r\n+                  color: const Color.fromARGB(255, 223, 130, 123),\r\n+                ),\r\n+                borderRadius: BorderRadius.circular(100),\r\n+              ),\r\n+              child: CircleAvatar(\r\n+                backgroundImage:\r\n+                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n+                radius: 60,\r\n+              ),\r\n+            ),\r\n+            Text(\r\n+              name,\r\n+              style: const TextStyle(\r\n+                  color: Colors.black,\r\n+                  fontSize: 14,\r\n+                  decoration: TextDecoration.none),\r\n+            ),\r\n+            const SizedBox(\r\n+              height: 12,\r\n+            ),\r\n+            Text(role,\r\n+                style: const TextStyle(\r\n+                    color: Colors.grey,\r\n+                    fontSize: 14,\r\n+                    decoration: TextDecoration.none)),\r\n+            const Divider(),\r\n+            Padding(\r\n+              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+              child: TextButton(\r\n+                onPressed: () {\r\n+\r\n+                  context.locale.toString() == \"en\"\r\n+                      ? context.setLocale(const Locale('ar'))\r\n+                      : context.setLocale(const Locale('en'));\r\n+                         \r\n+                  hideOverlay();\r\n+\r\n+                },\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(\r\n+                      Icons.language,\r\n+                      color: Colors.grey,\r\n+                    ),\r\n+                    const SizedBox(\r\n+                      width: 16,\r\n+                    ),\r\n+                    Text(\r\n+                      'Language'.tr(),\r\n+                      style: const TextStyle(\r\n+                          color: Colors.grey,\r\n+                          fontSize: 14,\r\n+                          decoration: TextDecoration.none),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+            ),\r\n+            Padding(\r\n+              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+              child: TextButton(\r\n+                onPressed: () {\r\n+                  deletShar();\r\n+                  hideOverlay();\r\n+\r\n+                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n+                    builder: (context) {\r\n+                      return const SplashScreen();\r\n+                    },\r\n+                  ));\r\n+                  //  }\r\n+                },\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(\r\n+                      Icons.login_outlined,\r\n+                      color: Colors.grey,\r\n+                    ),\r\n+                    const SizedBox(\r\n+                      width: 16,\r\n+                    ),\r\n+                    Text(\r\n+                      'Logout'.tr(),\r\n+                      style: const TextStyle(\r\n+                          color: Colors.grey,\r\n+                          fontSize: 14,\r\n+                          decoration: TextDecoration.none),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  });\r\n+\r\n+  overlayState.insert(overlayEntry);\r\n+}\r\n"
                },
                {
                    "date": 1694866415030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n \r\n-void showOverlay(BuildContext context, String name, String role, String image, Call) {\r\n+void showOverlay(BuildContext context, String name, String role, String image, Callback) {\r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n     return Positioned(\r\n       left: context.locale.toString() == 'ar' ? 16 : 148,\r\n@@ -150,157 +150,4 @@\n   });\r\n \r\n   overlayState.insert(overlayEntry);\r\n }\r\n-import 'package:easy_localization/easy_localization.dart';\r\n-import 'package:final_projectt/Screens/splash_screen.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:flutter/material.dart';\r\n-\r\n-late OverlayEntry overlayEntry;\r\n-\r\n-void hideOverlay() {\r\n-  overlayEntry.remove();\r\n-}\r\n-\r\n-void deletShar() async {\r\n-  SharedPrefsController prefs = SharedPrefsController();\r\n-  await prefs.deleteData('user');\r\n-}\r\n-\r\n-void showOverlay(BuildContext context, String name, String role, String image) {\r\n-  OverlayState overlayState = Overlay.of(context);\r\n-  overlayEntry = OverlayEntry(builder: (context) {\r\n-    return Positioned(\r\n-      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n-      top: 50,\r\n-      child: AnimatedContainer(\r\n-        decoration: BoxDecoration(\r\n-          color: Colors.white,\r\n-          borderRadius: BorderRadiusDirectional.circular(16),\r\n-        ),\r\n-        width: 230,\r\n-        height: 350,\r\n-        duration: const Duration(milliseconds: 500),\r\n-        child: Column(\r\n-          mainAxisSize: MainAxisSize.min,\r\n-          crossAxisAlignment: CrossAxisAlignment.center,\r\n-          children: [\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.end,\r\n-              children: [\r\n-                TextButton(\r\n-                  onPressed: () {\r\n-                    hideOverlay();\r\n-                  },\r\n-                  child: const Icon(\r\n-                    Icons.arrow_forward_ios,\r\n-                    color: Colors.grey,\r\n-                  ),\r\n-                )\r\n-              ],\r\n-            ),\r\n-            Container(\r\n-              padding: const EdgeInsets.all(4),\r\n-              margin: const EdgeInsets.only(bottom: 8),\r\n-              decoration: BoxDecoration(\r\n-                border: Border.all(\r\n-                  color: const Color.fromARGB(255, 223, 130, 123),\r\n-                ),\r\n-                borderRadius: BorderRadius.circular(100),\r\n-              ),\r\n-              child: CircleAvatar(\r\n-                backgroundImage:\r\n-                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n-                radius: 60,\r\n-              ),\r\n-            ),\r\n-            Text(\r\n-              name,\r\n-              style: const TextStyle(\r\n-                  color: Colors.black,\r\n-                  fontSize: 14,\r\n-                  decoration: TextDecoration.none),\r\n-            ),\r\n-            const SizedBox(\r\n-              height: 12,\r\n-            ),\r\n-            Text(role,\r\n-                style: const TextStyle(\r\n-                    color: Colors.grey,\r\n-                    fontSize: 14,\r\n-                    decoration: TextDecoration.none)),\r\n-            const Divider(),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-\r\n-                  context.locale.toString() == \"en\"\r\n-                      ? context.setLocale(const Locale('ar'))\r\n-                      : context.setLocale(const Locale('en'));\r\n-                         \r\n-                  hideOverlay();\r\n-\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.language,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Language'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-              ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-                  deletShar();\r\n-                  hideOverlay();\r\n-\r\n-                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n-                    builder: (context) {\r\n-                      return const SplashScreen();\r\n-                    },\r\n-                  ));\r\n-                  //  }\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.login_outlined,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Logout'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-              ),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  });\r\n-\r\n-  overlayState.insert(overlayEntry);\r\n-}\r\n"
                },
                {
                    "date": 1694866423481,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n \r\n-void showOverlay(BuildContext context, String name, String role, String image, Callback) {\r\n+void showOverlay(BuildContext context, String name, String role, String image, dynamic function) {\r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n     return Positioned(\r\n       left: context.locale.toString() == 'ar' ? 16 : 148,\r\n"
                },
                {
                    "date": 1694866526702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n-\r\n+                  updateRTL(true);\r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n                          \r\n"
                },
                {
                    "date": 1694866542562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n-                  updateRTL(true);\r\n+                  function(true);\r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n                          \r\n"
                },
                {
                    "date": 1694866586706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n \r\n-void showOverlay(BuildContext context, String name, String role, String image, dynamic function) {\r\n+void showOverlay(BuildContext context, String name, String role, String image,\r\n+    dynamic function) {\r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n     return Positioned(\r\n       left: context.locale.toString() == 'ar' ? 16 : 148,\r\n@@ -80,15 +81,14 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n-                  function(true);\r\n+                  function(false);\r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n-                         \r\n+\r\n                   hideOverlay();\r\n-\r\n                 },\r\n                 child: Row(\r\n                   children: [\r\n                     const Icon(\r\n"
                },
                {
                    "date": 1694866616482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n             Padding(\r\n               padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n               child: TextButton(\r\n                 onPressed: () {\r\n-                  function(false);\r\n+                \r\n                   context.locale.toString() == \"en\"\r\n                       ? context.setLocale(const Locale('ar'))\r\n                       : context.setLocale(const Locale('en'));\r\n \r\n"
                },
                {
                    "date": 1694866623780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n   await prefs.deleteData('user');\r\n }\r\n \r\n void showOverlay(BuildContext context, String name, String role, String image,\r\n-    dynamic function) {\r\n+     ) {\r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n     return Positioned(\r\n       left: context.locale.toString() == 'ar' ? 16 : 148,\r\n"
                },
                {
                    "date": 1694867813496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,155 @@\n+import 'package:easy_localization/easy_localization.dart';\r\n+import 'package:final_projectt/Screens/splash_screen.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:flutter/material.dart';\r\n+\r\n+late OverlayEntry overlayEntry;\r\n+\r\n+void hideOverlay() {\r\n+  overlayEntry.remove();\r\n+}\r\n+\r\n+void deletShar() async {\r\n+  SharedPrefsController prefs = SharedPrefsController();\r\n+  await prefs.deleteData('user');\r\n+}\r\n+ void setRtlOpening() {\r\n+    Provider.of<RtlOpeningProvider>(context, listen: false).setRtlOpening(true);\r\n+  }\r\n+void showOverlay(BuildContext context, String name, String role, String image,\r\n+     ) {\r\n+  OverlayState overlayState = Overlay.of(context);\r\n+  overlayEntry = OverlayEntry(builder: (context) {\r\n+    return Positioned(\r\n+      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n+      top: 50,\r\n+      child: AnimatedContainer(\r\n+        decoration: BoxDecoration(\r\n+          color: Colors.white,\r\n+          borderRadius: BorderRadiusDirectional.circular(16),\r\n+        ),\r\n+        width: 230,\r\n+        height: 350,\r\n+        duration: const Duration(milliseconds: 500),\r\n+        child: Column(\r\n+          mainAxisSize: MainAxisSize.min,\r\n+          crossAxisAlignment: CrossAxisAlignment.center,\r\n+          children: [\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.end,\r\n+              children: [\r\n+                TextButton(\r\n+                  onPressed: () {\r\n+                    hideOverlay();\r\n+                  },\r\n+                  child: const Icon(\r\n+                    Icons.arrow_forward_ios,\r\n+                    color: Colors.grey,\r\n+                  ),\r\n+                )\r\n+              ],\r\n+            ),\r\n+            Container(\r\n+              padding: const EdgeInsets.all(4),\r\n+              margin: const EdgeInsets.only(bottom: 8),\r\n+              decoration: BoxDecoration(\r\n+                border: Border.all(\r\n+                  color: const Color.fromARGB(255, 223, 130, 123),\r\n+                ),\r\n+                borderRadius: BorderRadius.circular(100),\r\n+              ),\r\n+              child: CircleAvatar(\r\n+                backgroundImage:\r\n+                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n+                radius: 60,\r\n+              ),\r\n+            ),\r\n+            Text(\r\n+              name,\r\n+              style: const TextStyle(\r\n+                  color: Colors.black,\r\n+                  fontSize: 14,\r\n+                  decoration: TextDecoration.none),\r\n+            ),\r\n+            const SizedBox(\r\n+              height: 12,\r\n+            ),\r\n+            Text(role,\r\n+                style: const TextStyle(\r\n+                    color: Colors.grey,\r\n+                    fontSize: 14,\r\n+                    decoration: TextDecoration.none)),\r\n+            const Divider(),\r\n+            Padding(\r\n+              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+              child: TextButton(\r\n+                onPressed: () {\r\n+                \r\n+                  context.locale.toString() == \"en\"\r\n+                      ? context.setLocale(const Locale('ar'))\r\n+                      : context.setLocale(const Locale('en'));\r\n+\r\n+                  hideOverlay();\r\n+                },\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(\r\n+                      Icons.language,\r\n+                      color: Colors.grey,\r\n+                    ),\r\n+                    const SizedBox(\r\n+                      width: 16,\r\n+                    ),\r\n+                    Text(\r\n+                      'Language'.tr(),\r\n+                      style: const TextStyle(\r\n+                          color: Colors.grey,\r\n+                          fontSize: 14,\r\n+                          decoration: TextDecoration.none),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+            ),\r\n+            Padding(\r\n+              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+              child: TextButton(\r\n+                onPressed: () {\r\n+                  deletShar();\r\n+                  hideOverlay();\r\n+\r\n+                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n+                    builder: (context) {\r\n+                      return const SplashScreen();\r\n+                    },\r\n+                  ));\r\n+                  //  }\r\n+                },\r\n+                child: Row(\r\n+                  children: [\r\n+                    const Icon(\r\n+                      Icons.login_outlined,\r\n+                      color: Colors.grey,\r\n+                    ),\r\n+                    const SizedBox(\r\n+                      width: 16,\r\n+                    ),\r\n+                    Text(\r\n+                      'Logout'.tr(),\r\n+                      style: const TextStyle(\r\n+                          color: Colors.grey,\r\n+                          fontSize: 14,\r\n+                          decoration: TextDecoration.none),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  });\r\n+\r\n+  overlayState.insert(overlayEntry);\r\n+}\r\n"
                },
                {
                    "date": 1694867821649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:provider/provider.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n \r\n void hideOverlay() {\r\n@@ -152,157 +153,4 @@\n   });\r\n \r\n   overlayState.insert(overlayEntry);\r\n }\r\n-import 'package:easy_localization/easy_localization.dart';\r\n-import 'package:final_projectt/Screens/splash_screen.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:flutter/material.dart';\r\n-\r\n-late OverlayEntry overlayEntry;\r\n-\r\n-void hideOverlay() {\r\n-  overlayEntry.remove();\r\n-}\r\n-\r\n-void deletShar() async {\r\n-  SharedPrefsController prefs = SharedPrefsController();\r\n-  await prefs.deleteData('user');\r\n-}\r\n-\r\n-void showOverlay(BuildContext context, String name, String role, String image,\r\n-     ) {\r\n-  OverlayState overlayState = Overlay.of(context);\r\n-  overlayEntry = OverlayEntry(builder: (context) {\r\n-    return Positioned(\r\n-      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n-      top: 50,\r\n-      child: AnimatedContainer(\r\n-        decoration: BoxDecoration(\r\n-          color: Colors.white,\r\n-          borderRadius: BorderRadiusDirectional.circular(16),\r\n-        ),\r\n-        width: 230,\r\n-        height: 350,\r\n-        duration: const Duration(milliseconds: 500),\r\n-        child: Column(\r\n-          mainAxisSize: MainAxisSize.min,\r\n-          crossAxisAlignment: CrossAxisAlignment.center,\r\n-          children: [\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.end,\r\n-              children: [\r\n-                TextButton(\r\n-                  onPressed: () {\r\n-                    hideOverlay();\r\n-                  },\r\n-                  child: const Icon(\r\n-                    Icons.arrow_forward_ios,\r\n-                    color: Colors.grey,\r\n-                  ),\r\n-                )\r\n-              ],\r\n-            ),\r\n-            Container(\r\n-              padding: const EdgeInsets.all(4),\r\n-              margin: const EdgeInsets.only(bottom: 8),\r\n-              decoration: BoxDecoration(\r\n-                border: Border.all(\r\n-                  color: const Color.fromARGB(255, 223, 130, 123),\r\n-                ),\r\n-                borderRadius: BorderRadius.circular(100),\r\n-              ),\r\n-              child: CircleAvatar(\r\n-                backgroundImage:\r\n-                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n-                radius: 60,\r\n-              ),\r\n-            ),\r\n-            Text(\r\n-              name,\r\n-              style: const TextStyle(\r\n-                  color: Colors.black,\r\n-                  fontSize: 14,\r\n-                  decoration: TextDecoration.none),\r\n-            ),\r\n-            const SizedBox(\r\n-              height: 12,\r\n-            ),\r\n-            Text(role,\r\n-                style: const TextStyle(\r\n-                    color: Colors.grey,\r\n-                    fontSize: 14,\r\n-                    decoration: TextDecoration.none)),\r\n-            const Divider(),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-                \r\n-                  context.locale.toString() == \"en\"\r\n-                      ? context.setLocale(const Locale('ar'))\r\n-                      : context.setLocale(const Locale('en'));\r\n-\r\n-                  hideOverlay();\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.language,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Language'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-              ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-                  deletShar();\r\n-                  hideOverlay();\r\n-\r\n-                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n-                    builder: (context) {\r\n-                      return const SplashScreen();\r\n-                    },\r\n-                  ));\r\n-                  //  }\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.login_outlined,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Logout'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-              ),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  });\r\n-\r\n-  overlayState.insert(overlayEntry);\r\n-}\r\n"
                },
                {
                    "date": 1694867833912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/splash_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/providers/rtl_provider.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n late OverlayEntry overlayEntry;\r\n@@ -13,11 +14,9 @@\n void deletShar() async {\r\n   SharedPrefsController prefs = SharedPrefsController();\r\n   await prefs.deleteData('user');\r\n }\r\n- void setRtlOpening() {\r\n-    Provider.of<RtlOpeningProvider>(context, listen: false).setRtlOpening(true);\r\n-  }\r\n+ \r\n void showOverlay(BuildContext context, String name, String role, String image,\r\n      ) {\r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n"
                },
                {
                    "date": 1694867844386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n }\r\n  \r\n void showOverlay(BuildContext context, String name, String role, String image,\r\n      ) {\r\n+      \r\n   OverlayState overlayState = Overlay.of(context);\r\n   overlayEntry = OverlayEntry(builder: (context) {\r\n     return Positioned(\r\n       left: context.locale.toString() == 'ar' ? 16 : 148,\r\n"
                },
                {
                    "date": 1694867965956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,153 +4,172 @@\n import 'package:final_projectt/providers/rtl_provider.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n-late OverlayEntry overlayEntry;\r\n+class CustomOverlay extends StatefulWidget {\r\n+  final String name;\r\n+  final String role;\r\n+  final String image;\r\n \r\n-void hideOverlay() {\r\n-  overlayEntry.remove();\r\n+  const CustomOverlay({\r\n+    required this.name,\r\n+    required this.role,\r\n+    required this.image,\r\n+    Key? key,\r\n+  }) : super(key: key);\r\n+\r\n+  @override\r\n+  _CustomOverlayState createState() => _CustomOverlayState();\r\n }\r\n \r\n-void deletShar() async {\r\n-  SharedPrefsController prefs = SharedPrefsController();\r\n-  await prefs.deleteData('user');\r\n-}\r\n- \r\n-void showOverlay(BuildContext context, String name, String role, String image,\r\n-     ) {\r\n-      \r\n-  OverlayState overlayState = Overlay.of(context);\r\n-  overlayEntry = OverlayEntry(builder: (context) {\r\n-    return Positioned(\r\n-      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n-      top: 50,\r\n-      child: AnimatedContainer(\r\n-        decoration: BoxDecoration(\r\n-          color: Colors.white,\r\n-          borderRadius: BorderRadiusDirectional.circular(16),\r\n-        ),\r\n-        width: 230,\r\n-        height: 350,\r\n-        duration: const Duration(milliseconds: 500),\r\n-        child: Column(\r\n-          mainAxisSize: MainAxisSize.min,\r\n-          crossAxisAlignment: CrossAxisAlignment.center,\r\n-          children: [\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.end,\r\n-              children: [\r\n-                TextButton(\r\n-                  onPressed: () {\r\n-                    hideOverlay();\r\n-                  },\r\n-                  child: const Icon(\r\n-                    Icons.arrow_forward_ios,\r\n-                    color: Colors.grey,\r\n+class _CustomOverlayState extends State<CustomOverlay> {\r\n+  late OverlayEntry overlayEntry;\r\n+\r\n+  void hideOverlay() {\r\n+    overlayEntry.remove();\r\n+  }\r\n+\r\n+  void deletShar() async {\r\n+    SharedPrefsController prefs = SharedPrefsController();\r\n+    await prefs.deleteData('user');\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    OverlayState overlayState = Overlay.of(context);\r\n+\r\n+    overlayEntry = OverlayEntry(builder: (context) {\r\n+      return Positioned(\r\n+        left: context.locale.toString() == 'ar' ? 16 : 148,\r\n+        top: 50,\r\n+        child: AnimatedContainer(\r\n+          decoration: BoxDecoration(\r\n+            color: Colors.white,\r\n+            borderRadius: BorderRadiusDirectional.circular(16),\r\n+          ),\r\n+          width: 230,\r\n+          height: 350,\r\n+          duration: const Duration(milliseconds: 500),\r\n+          child: Column(\r\n+            mainAxisSize: MainAxisSize.min,\r\n+            crossAxisAlignment: CrossAxisAlignment.center,\r\n+            children: [\r\n+              Row(\r\n+                mainAxisAlignment: MainAxisAlignment.end,\r\n+                children: [\r\n+                  TextButton(\r\n+                    onPressed: () {\r\n+                      hideOverlay();\r\n+                    },\r\n+                    child: const Icon(\r\n+                      Icons.arrow_forward_ios,\r\n+                      color: Colors.grey,\r\n+                    ),\r\n+                  )\r\n+                ],\r\n+              ),\r\n+              Container(\r\n+                padding: const EdgeInsets.all(4),\r\n+                margin: const EdgeInsets.only(bottom: 8),\r\n+                decoration: BoxDecoration(\r\n+                  border: Border.all(\r\n+                    color: const Color.fromARGB(255, 223, 130, 123),\r\n                   ),\r\n-                )\r\n-              ],\r\n-            ),\r\n-            Container(\r\n-              padding: const EdgeInsets.all(4),\r\n-              margin: const EdgeInsets.only(bottom: 8),\r\n-              decoration: BoxDecoration(\r\n-                border: Border.all(\r\n-                  color: const Color.fromARGB(255, 223, 130, 123),\r\n+                  borderRadius: BorderRadius.circular(100),\r\n                 ),\r\n-                borderRadius: BorderRadius.circular(100),\r\n+                child: CircleAvatar(\r\n+                  backgroundImage:\r\n+                      NetworkImage(\"https://palmail.gsgtt.tech/storage/${widget.image}\"),\r\n+                  radius: 60,\r\n+                ),\r\n               ),\r\n-              child: CircleAvatar(\r\n-                backgroundImage:\r\n-                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n-                radius: 60,\r\n+              Text(\r\n+                widget.name,\r\n+                style: const TextStyle(\r\n+                    color: Colors.black,\r\n+                    fontSize: 14,\r\n+                    decoration: TextDecoration.none),\r\n               ),\r\n-            ),\r\n-            Text(\r\n-              name,\r\n-              style: const TextStyle(\r\n-                  color: Colors.black,\r\n-                  fontSize: 14,\r\n-                  decoration: TextDecoration.none),\r\n-            ),\r\n-            const SizedBox(\r\n-              height: 12,\r\n-            ),\r\n-            Text(role,\r\n+              const SizedBox(\r\n+                height: 12,\r\n+              ),\r\n+              Text(\r\n+                widget.role,\r\n                 style: const TextStyle(\r\n                     color: Colors.grey,\r\n                     fontSize: 14,\r\n-                    decoration: TextDecoration.none)),\r\n-            const Divider(),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-                \r\n-                  context.locale.toString() == \"en\"\r\n-                      ? context.setLocale(const Locale('ar'))\r\n-                      : context.setLocale(const Locale('en'));\r\n-\r\n-                  hideOverlay();\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.language,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Language'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n+                    decoration: TextDecoration.none),\r\n+              ),\r\n+              const Divider(),\r\n+              Padding(\r\n+                padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+                child: TextButton(\r\n+                  onPressed: () {\r\n+                    context.locale.toString() == \"en\"\r\n+                        ? context.setLocale(const Locale('ar'))\r\n+                        : context.setLocale(const Locale('en'));\r\n+                    hideOverlay();\r\n+                  },\r\n+                  child: Row(\r\n+                    children: [\r\n+                      const Icon(\r\n+                        Icons.language,\r\n+                        color: Colors.grey,\r\n+                      ),\r\n+                      const SizedBox(\r\n+                        width: 16,\r\n+                      ),\r\n+                      Text(\r\n+                        'Language'.tr(),\r\n+                        style: const TextStyle(\r\n+                            color: Colors.grey,\r\n+                            fontSize: 14,\r\n+                            decoration: TextDecoration.none),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n                 ),\r\n               ),\r\n-            ),\r\n-            Padding(\r\n-              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n-              child: TextButton(\r\n-                onPressed: () {\r\n-                  deletShar();\r\n-                  hideOverlay();\r\n+              Padding(\r\n+                padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n+                child: TextButton(\r\n+                  onPressed: () {\r\n+                    deletShar();\r\n+                    hideOverlay();\r\n \r\n-                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n-                    builder: (context) {\r\n-                      return const SplashScreen();\r\n-                    },\r\n-                  ));\r\n-                  //  }\r\n-                },\r\n-                child: Row(\r\n-                  children: [\r\n-                    const Icon(\r\n-                      Icons.login_outlined,\r\n-                      color: Colors.grey,\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 16,\r\n-                    ),\r\n-                    Text(\r\n-                      'Logout'.tr(),\r\n-                      style: const TextStyle(\r\n-                          color: Colors.grey,\r\n-                          fontSize: 14,\r\n-                          decoration: TextDecoration.none),\r\n-                    ),\r\n-                  ],\r\n+                    Navigator.pushReplacement(context, MaterialPageRoute(\r\n+                      builder: (context) {\r\n+                        return const SplashScreen();\r\n+                      },\r\n+                    ));\r\n+                  },\r\n+                  child: Row(\r\n+                    children: [\r\n+                      const Icon(\r\n+                        Icons.login_outlined,\r\n+                        color: Colors.grey,\r\n+                      ),\r\n+                      const SizedBox(\r\n+                        width: 16,\r\n+                      ),\r\n+                      Text(\r\n+                        'Logout'.tr(),\r\n+                        style: const TextStyle(\r\n+                            color: Colors.grey,\r\n+                            fontSize: 14,\r\n+                            decoration: TextDecoration.none),\r\n+                      ),\r\n+                    ],\r\n+                  ),\r\n                 ),\r\n               ),\r\n-            ),\r\n-          ],\r\n+            ],\r\n+          ),\r\n         ),\r\n-      ),\r\n-    );\r\n-  });\r\n+      );\r\n+    });\r\n \r\n-  overlayState.insert(overlayEntry);\r\n+    overlayState.insert(overlayEntry);\r\n+\r\n+    return Container(); // Return an empty container as we don't need any UI here\r\n+  }\r\n }\r\n"
                },
                {
                    "date": 1694867971925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -169,7 +169,7 @@\n     });\r\n \r\n     overlayState.insert(overlayEntry);\r\n \r\n-    return Container(); // Return an empty container as we don't need any UI here\r\n+    return SizedBox.(); // Return an empty container as we don't need any UI here\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1694868001808,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,11 @@\n }\r\n \r\n class _CustomOverlayState extends State<CustomOverlay> {\r\n   late OverlayEntry overlayEntry;\r\n-\r\n+void setRtlOpening() {\r\n+    Provider.of<RtlOpeningProvider>(context, listen: false).setRtlOpening(true);\r\n+  }\r\n   void hideOverlay() {\r\n     overlayEntry.remove();\r\n   }\r\n \r\n@@ -76,10 +78,10 @@\n                   ),\r\n                   borderRadius: BorderRadius.circular(100),\r\n                 ),\r\n                 child: CircleAvatar(\r\n-                  backgroundImage:\r\n-                      NetworkImage(\"https://palmail.gsgtt.tech/storage/${widget.image}\"),\r\n+                  backgroundImage: NetworkImage(\r\n+                      \"https://palmail.gsgtt.tech/storage/${widget.image}\"),\r\n                   radius: 60,\r\n                 ),\r\n               ),\r\n               Text(\r\n@@ -169,7 +171,8 @@\n     });\r\n \r\n     overlayState.insert(overlayEntry);\r\n \r\n-    return SizedBox.(); // Return an empty container as we don't need any UI here\r\n+    return const SizedBox\r\n+        .shrink(); // Return an empty container as we don't need any UI here\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1694868018979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n                   onPressed: () {\r\n                     context.locale.toString() == \"en\"\r\n                         ? context.setLocale(const Locale('ar'))\r\n                         : context.setLocale(const Locale('en'));\r\n-                        setRtlOpening\r\n+                        setRtlOpening()\r\n                     hideOverlay();\r\n                   },\r\n                   child: Row(\r\n                     children: [\r\n"
                },
                {
                    "date": 1694868156024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,7 +173,8 @@\n     });\r\n \r\n     overlayState.insert(overlayEntry);\r\n \r\n-      // Return an empty container as we don't need any UI here\r\n+    return const SizedBox\r\n+        .shrink(); // Return an empty container as we don't need any UI here\r\n   }\r\n }\r\n"
                }
            ],
            "date": 1694863724167,
            "name": "Commit-0",
            "content": "//import 'dart:convert';\r\nimport 'package:easy_localization/easy_localization.dart';\r\nimport 'package:final_projectt/Screens/login_screen.dart';\r\nimport 'package:final_projectt/Screens/splash_screen.dart';\r\nimport 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n//import 'package:final_projectt/core/services/logout_controller.dart';\r\n//import 'package:final_projectt/core/widgets/show_alert.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nlate OverlayEntry overlayEntry;\r\n\r\nvoid hideOverlay() {\r\n  overlayEntry.remove();\r\n}\r\n\r\nvoid deletShar() async {\r\n  SharedPrefsController prefs = SharedPrefsController();\r\n  await prefs.deleteData('user');\r\n}\r\n\r\nvoid showOverlay(BuildContext context, String name, String role, String image) {\r\n  OverlayState overlayState = Overlay.of(context);\r\n  overlayEntry = OverlayEntry(builder: (context) {\r\n    return Positioned(\r\n      left: context.locale.toString() == 'ar' ? 16 : 148,\r\n      top: 50,\r\n      child: AnimatedContainer(\r\n        decoration: BoxDecoration(\r\n          color: Colors.white,\r\n          borderRadius: BorderRadiusDirectional.circular(16),\r\n        ),\r\n        width: 230,\r\n        height: 350,\r\n        duration: const Duration(milliseconds: 500),\r\n        child: Column(\r\n          mainAxisSize: MainAxisSize.min,\r\n          crossAxisAlignment: CrossAxisAlignment.center,\r\n          children: [\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.end,\r\n              children: [\r\n                TextButton(\r\n                  onPressed: () {\r\n                    hideOverlay();\r\n                  },\r\n                  child: const Icon(\r\n                    Icons.arrow_forward_ios,\r\n                    color: Colors.grey,\r\n                  ),\r\n                )\r\n              ],\r\n            ),\r\n            Container(\r\n              padding: const EdgeInsets.all(4),\r\n              margin: const EdgeInsets.only(bottom: 8),\r\n              decoration: BoxDecoration(\r\n                border: Border.all(\r\n                  color: const Color.fromARGB(255, 223, 130, 123),\r\n                ),\r\n                borderRadius: BorderRadius.circular(100),\r\n              ),\r\n              child: CircleAvatar(\r\n                backgroundImage:\r\n                    NetworkImage(\"https://palmail.gsgtt.tech/storage/$image\"),\r\n                radius: 60,\r\n              ),\r\n            ),\r\n            Text(\r\n              name,\r\n              style: const TextStyle(\r\n                  color: Colors.black,\r\n                  fontSize: 14,\r\n                  decoration: TextDecoration.none),\r\n            ),\r\n            const SizedBox(\r\n              height: 12,\r\n            ),\r\n            Text(role,\r\n                style: const TextStyle(\r\n                    color: Colors.grey,\r\n                    fontSize: 14,\r\n                    decoration: TextDecoration.none)),\r\n            const Divider(),\r\n            Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n              child: TextButton(\r\n                onPressed: () {\r\n                  context.locale.toString() == \"en\"\r\n                      ? context.setLocale(const Locale('ar'))\r\n                      : context.setLocale(const Locale('en'));\r\n                  hideOverlay();\r\n                  \r\n                },\r\n                child: Row(\r\n                  children: [\r\n                    const Icon(\r\n                      Icons.language,\r\n                      color: Colors.grey,\r\n                    ),\r\n                    const SizedBox(\r\n                      width: 16,\r\n                    ),\r\n                    Text(\r\n                      'Language'.tr(),\r\n                      style: const TextStyle(\r\n                          color: Colors.grey,\r\n                          fontSize: 14,\r\n                          decoration: TextDecoration.none),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n            Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 16.0),\r\n              child: TextButton(\r\n                onPressed: () {\r\n                  // try {\r\n                  //   logout(\r\n                  //     context,\r\n                  //   ).then((response) async {\r\n                  //     SharedPrefsController prefs = SharedPrefsController();\r\n                  //     await prefs.deleteData('user');\r\n                  //     hideOverlay();\r\n                  //     // ignore: use_build_context_synchronously\r\n                  //     Navigator.pushReplacement(context, MaterialPageRoute(\r\n                  //       builder: (context) {\r\n                  //         return const LoginScreen();\r\n                  //       },\r\n                  //     ));\r\n                  //   }).catchError((err) async {\r\n                  //     final errorMessagae = (err.message)['message'].toString();\r\n                  //     showAlert(context,\r\n                  //         message: errorMessagae,\r\n                  //         color: Colors.redAccent,\r\n                  //         width: 300);\r\n                  //   });\r\n                  // } catch (e) {\r\n                  //  SharedPrefsController prefs = SharedPrefsController();\r\n                  //  prefs.deleteData('user');\r\n                  deletShar();\r\n                  hideOverlay();\r\n                  // ignore: use_build_context_synchronously\r\n                  Navigator.pushReplacement(context, MaterialPageRoute(\r\n                    builder: (context) {\r\n                      return const SplashScreen();\r\n                    },\r\n                  ));\r\n                  //  }\r\n                },\r\n                child: Row(\r\n                  children: [\r\n                    const Icon(\r\n                      Icons.login_outlined,\r\n                      color: Colors.grey,\r\n                    ),\r\n                    const SizedBox(\r\n                      width: 16,\r\n                    ),\r\n                    Text(\r\n                      'Logout'.tr(),\r\n                      style: const TextStyle(\r\n                          color: Colors.grey,\r\n                          fontSize: 14,\r\n                          decoration: TextDecoration.none),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  });\r\n\r\n  // Inserting the OverlayEntry into the Overlay\r\n  overlayState.insert(overlayEntry);\r\n}\r\n"
        }
    ]
}