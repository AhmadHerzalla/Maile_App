{
    "sourceFile": "lib/core/widgets/new_inbox_button_sheet.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1694853719205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694853731788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -426,9 +426,9 @@\n                                       return StatefulBuilder(builder:\r\n                                           (BuildContext context,\r\n                                               StateSetter setState) {\r\n                                         return TagsBottomSheet(\r\n-                                          \r\n+                                          givenTagsFromOutSide: this.selectedTags!,\r\n                                         );\r\n                                       });\r\n                                     });\r\n                             setState(() {\r\n"
                },
                {
                    "date": 1694853741279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -430,13 +430,9 @@\n                                           givenTagsFromOutSide: this.selectedTags!,\r\n                                         );\r\n                                       });\r\n                                     });\r\n-                            setState(() {\r\n-                              if (selectedTags != null) {\r\n-                                this.selectedTags = selectedTags;\r\n-                              }\r\n-                            });\r\n+                            \r\n                           },\r\n                           child: CustomWhiteBox(\r\n                             width: 378,\r\n                             height: 56,\r\n"
                },
                {
                    "date": 1694853748606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -428,9 +428,9 @@\n                                               StateSetter setState) {\r\n                                         return TagsBottomSheet(\r\n                                           givenTagsFromOutSide: this.selectedTags!,\r\n                                         );\r\n-                                      }).th;\r\n+                                      });\r\n                                     });\r\n                             \r\n                           },\r\n                           child: CustomWhiteBox(\r\n"
                },
                {
                    "date": 1694853765607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,867 @@\n+import 'dart:io';\r\n+\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/services/mail_controller.dart';\r\n+import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n+import 'package:final_projectt/core/services/user_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n+import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/custom_box.dart';\r\n+import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n+import 'package:final_projectt/core/widgets/date_picker.dart';\r\n+import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n+import 'package:final_projectt/models/catego_model.dart';\r\n+import 'package:final_projectt/models/sender_model.dart';\r\n+import 'package:final_projectt/models/status_model.dart';\r\n+import 'package:final_projectt/models/tags_model.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:provider/provider.dart';\r\n+\r\n+class NewInboxBottomSheet extends StatefulWidget {\r\n+  @override\r\n+  State<NewInboxBottomSheet> createState() => _NewInboxBottomSheetState();\r\n+}\r\n+\r\n+class _NewInboxBottomSheetState extends State<NewInboxBottomSheet> {\r\n+  TextEditingController senderNameCont = TextEditingController();\r\n+  TextEditingController senderMobileCont = TextEditingController();\r\n+  TextEditingController mailTitleCont = TextEditingController();\r\n+  TextEditingController mailDescriptionCont = TextEditingController();\r\n+  TextEditingController archiveNumber = TextEditingController();\r\n+\r\n+  SingleSender? selectedSender;\r\n+  List<TagElement>? selectedTags = [];\r\n+\r\n+  TextEditingController decisionCont = TextEditingController();\r\n+  TextEditingController activityTextFieldController = TextEditingController();\r\n+  late UserModel user;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  late String category = 'Other';\r\n+\r\n+  bool isValidationShown = false;\r\n+  late StatusMod selectedStatus = StatusMod(\r\n+      id: 1,\r\n+      name: 'Inbox',\r\n+      color: '0xfffa3a57',\r\n+      createdAt: DateTime.now().toString(),\r\n+      updatedAt: DateTime.now().toString(),\r\n+      mailsCount: '');\r\n+\r\n+  getUser() async {\r\n+    user = await UserController().getLocalUser();\r\n+  }\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    getUser();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: SizedBox(\r\n+        height: MediaQuery.of(context).size.height - 55,\r\n+        child: Column(\r\n+          children: [\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(10.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: [\r\n+                  TextButton(\r\n+                    style: TextButton.styleFrom(\r\n+                        padding: EdgeInsets.zero,\r\n+                        minimumSize: Size(50, 30),\r\n+                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n+                        alignment: Alignment.centerLeft),\r\n+                    onPressed: () => Navigator.pop(context),\r\n+                    child: const Text(\r\n+                      'Cancel',\r\n+                      style: TextStyle(fontSize: 20),\r\n+                    ),\r\n+                  ),\r\n+                  const Text(\r\n+                    'New Inbox',\r\n+                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n+                  ),\r\n+                  TextButton(\r\n+                    onPressed: () async {\r\n+                      if (_formKey.currentState!.validate()) {\r\n+                        // showDialog(\r\n+                        //   barrierDismissible: false,\r\n+                        //   context: context,\r\n+                        //   builder: (context) {\r\n+                        //     return Align(\r\n+                        //       alignment: Alignment.center,\r\n+                        //       child: AlertDialog(\r\n+                        //           backgroundColor: Colors.transparent,\r\n+                        //           titlePadding: EdgeInsets.zero,\r\n+                        //           title:\r\n+                        //               Image.asset('images/loading-icon.gif')),\r\n+                        //     );\r\n+                        //   },\r\n+                        // );\r\n+\r\n+                        final createMailResponse = await newInbox(\r\n+                          statusId: '${selectedStatus.id}',\r\n+                          decision: decisionCont.text,\r\n+                          senderId: '${selectedSender!.id}',\r\n+                          finalDecision: decisionCont.text,\r\n+                          activities: Provider.of<NewInboxProvider>(context,\r\n+                                  listen: false)\r\n+                              .activites,\r\n+                          tags: selectedTags!.map((tag) => tag.id).toList(),\r\n+                          subject: mailTitleCont.text,\r\n+                          description: mailDescriptionCont.text,\r\n+                          archiveNumber: Provider.of<NewInboxProvider>(context,\r\n+                                  listen: false)\r\n+                              .archiveNumber,\r\n+                          archiveDate: Provider.of<NewInboxProvider>(context,\r\n+                                  listen: false)\r\n+                              .date\r\n+                              .toString(),\r\n+                        );\r\n+                        uploadImages(context, createMailResponse.mail!.id!);\r\n+                        showAlert(context,\r\n+                            message: 'Mail Created Successfully',\r\n+                            color: primaryColor.withOpacity(0.8),\r\n+                            width: 230);\r\n+\r\n+                        selectedTags = [];\r\n+                        getMails();\r\n+                        final updateData = Provider.of<StatuseProvider>(context,\r\n+                            listen: false);\r\n+                        updateData.updatestutas();\r\n+\r\n+                        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+                          builder: (context) {\r\n+                            return MainPage();\r\n+                          },\r\n+                        ));\r\n+                      } else {\r\n+                        setState(() {\r\n+                          isValidationShown = true;\r\n+                        });\r\n+                      }\r\n+                    },\r\n+                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Expanded(\r\n+              child: ListView(\r\n+                physics: BouncingScrollPhysics(),\r\n+                children: [\r\n+                  Form(\r\n+                    key: _formKey,\r\n+                    child: Column(\r\n+                      mainAxisAlignment: MainAxisAlignment.center,\r\n+                      crossAxisAlignment: CrossAxisAlignment.center,\r\n+                      children: [\r\n+                        AnimatedContainer(\r\n+                          duration: Duration(milliseconds: 300),\r\n+                          width: 400,\r\n+                          height: senderNameCont.text.isEmpty\r\n+                              ? (!isValidationShown ? 140 : 155)\r\n+                              : 220,\r\n+                          child: CustomWhiteBox(\r\n+                            width: 400,\r\n+                            height: 230,\r\n+                            child: SingleChildScrollView(\r\n+                              child: Column(\r\n+                                children: [\r\n+                                  CustomTextField(\r\n+                                    controller: senderNameCont,\r\n+                                    validationMessage:\r\n+                                        \"Please enter a sender name\",\r\n+                                    hintText: \"Sender\",\r\n+                                    hintTextColor: Colors.grey,\r\n+                                    isPrefixIcon: true,\r\n+                                    isSuffixIcon: true,\r\n+                                    isUnderlinedBorderEnabled: true,\r\n+                                    prefixIcon: Icon(\r\n+                                      Icons.person_3_outlined,\r\n+                                      size: 23,\r\n+                                    ),\r\n+                                    suffixIcon: IconButton(\r\n+                                      onPressed: () async {\r\n+                                        selectedSender = null;\r\n+                                        selectedSender =\r\n+                                            await showModalBottomSheet<\r\n+                                                SingleSender>(\r\n+                                          clipBehavior: Clip.hardEdge,\r\n+                                          isScrollControlled: true,\r\n+                                          context: context,\r\n+                                          shape: const RoundedRectangleBorder(\r\n+                                            borderRadius: BorderRadius.vertical(\r\n+                                              top: Radius.circular(15.0),\r\n+                                            ),\r\n+                                          ),\r\n+                                          builder: (BuildContext context) {\r\n+                                            return SendersBottomSheet();\r\n+                                          },\r\n+                                        );\r\n+                                        setState(() {\r\n+                                          if (selectedSender != null) {\r\n+                                            senderNameCont.text =\r\n+                                                selectedSender!.name!;\r\n+                                            senderMobileCont.text =\r\n+                                                selectedSender!.mobile!;\r\n+                                          }\r\n+                                        });\r\n+                                      },\r\n+                                      icon: Icon(\r\n+                                        Icons.info_outline,\r\n+                                        color: Color(0xff6589FF),\r\n+                                        size: 27,\r\n+                                      ),\r\n+                                    ),\r\n+                                  ),\r\n+                                  senderNameCont.text.isEmpty\r\n+                                      ? SizedBox()\r\n+                                      : CustomTextField(\r\n+                                          controller: senderMobileCont,\r\n+                                          validationMessage:\r\n+                                              \"Please enter a mobile number\",\r\n+                                          hintText: \"Mobile\",\r\n+                                          hintTextColor: Colors.grey,\r\n+                                          isPrefixIcon: true,\r\n+                                          isSuffixIcon: false,\r\n+                                          isUnderlinedBorderEnabled: true,\r\n+                                          prefixIcon: Icon(\r\n+                                            Icons.phone_android_rounded,\r\n+                                            size: 23,\r\n+                                          ),\r\n+                                        ),\r\n+                                  GestureDetector(\r\n+                                    onTap: () async {\r\n+                                      final selectedCategory =\r\n+                                          await showModalBottomSheet<\r\n+                                              CategoryElement>(\r\n+                                        clipBehavior: Clip.hardEdge,\r\n+                                        isScrollControlled: true,\r\n+                                        context: context,\r\n+                                        shape: const RoundedRectangleBorder(\r\n+                                          borderRadius: BorderRadius.vertical(\r\n+                                            top: Radius.circular(15.0),\r\n+                                          ),\r\n+                                        ),\r\n+                                        builder: (BuildContext context) {\r\n+                                          return categoriesBottomSheet();\r\n+                                        },\r\n+                                      );\r\n+                                      setState(() {\r\n+                                        if (selectedCategory != null) {\r\n+                                          category = selectedCategory.name!;\r\n+                                        }\r\n+                                      });\r\n+                                    },\r\n+                                    child: Padding(\r\n+                                      padding: EdgeInsetsDirectional.only(\r\n+                                        start: 30.0,\r\n+                                        end: 20.0,\r\n+                                        top: 20,\r\n+                                      ),\r\n+                                      child: Row(\r\n+                                        mainAxisAlignment:\r\n+                                            MainAxisAlignment.spaceBetween,\r\n+                                        children: [\r\n+                                          Text(\r\n+                                            'Category',\r\n+                                            style: TextStyle(\r\n+                                                color: Colors.black,\r\n+                                                fontFamily: 'Iphone',\r\n+                                                fontSize: 20),\r\n+                                          ),\r\n+                                          Row(\r\n+                                            children: [\r\n+                                              Text(\r\n+                                                '$category',\r\n+                                                style: TextStyle(\r\n+                                                  color: Colors.grey,\r\n+                                                  fontSize: 20,\r\n+                                                ),\r\n+                                              ),\r\n+                                              Icon(\r\n+                                                Icons.arrow_forward_ios_rounded,\r\n+                                                color: Colors.grey,\r\n+                                                size: 22,\r\n+                                              ),\r\n+                                            ],\r\n+                                          ),\r\n+                                        ],\r\n+                                      ),\r\n+                                    ),\r\n+                                  )\r\n+                                ],\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                        AnimatedContainer(\r\n+                          duration: Duration(milliseconds: 300),\r\n+                          width: 400,\r\n+                          height: isValidationShown ? 155 : 135,\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 155,\r\n+                            child: SingleChildScrollView(\r\n+                              child: Column(\r\n+                                children: [\r\n+                                  CustomTextField(\r\n+                                    controller: mailTitleCont,\r\n+                                    validationMessage:\r\n+                                        \"Please enter a title of mail\",\r\n+                                    hintText: \"Title of mail\",\r\n+                                    hintTextColor: Colors.grey,\r\n+                                    isPrefixIcon: false,\r\n+                                    isSuffixIcon: false,\r\n+                                    isUnderlinedBorderEnabled: true,\r\n+                                  ),\r\n+                                  Padding(\r\n+                                    padding: const EdgeInsetsDirectional.only(\r\n+                                        start: 10.0, end: 10.0),\r\n+                                    child: TextFormField(\r\n+                                      controller: mailDescriptionCont,\r\n+                                      decoration: const InputDecoration(\r\n+                                        contentPadding: EdgeInsets.symmetric(\r\n+                                            vertical: 20, horizontal: 35),\r\n+                                        border: InputBorder.none,\r\n+                                        hintText: 'Description',\r\n+                                        hintStyle: TextStyle(\r\n+                                          color: Colors.grey,\r\n+                                          fontFamily: 'Iphone',\r\n+                                          fontSize: 19,\r\n+                                          fontWeight: FontWeight.w500,\r\n+                                        ),\r\n+                                      ),\r\n+                                    ),\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                        AnimatedContainer(\r\n+                          height: Provider.of<NewInboxProvider>(context)\r\n+                                  .isDatePickerOpened\r\n+                              ? 515.0\r\n+                              : (isValidationShown ? 165 : 130),\r\n+                          duration: Duration(milliseconds: 300),\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 480,\r\n+                            child: SingleChildScrollView(\r\n+                                physics: NeverScrollableScrollPhysics(),\r\n+                                child: Column(\r\n+                                  children: [\r\n+                                    CustomDatePicker(),\r\n+                                    Padding(\r\n+                                      padding: const EdgeInsetsDirectional.only(\r\n+                                          start: 10.0, end: 10.0),\r\n+                                      child: TextFormField(\r\n+                                        onChanged: (value) {\r\n+                                          Provider.of<NewInboxProvider>(context,\r\n+                                                  listen: false)\r\n+                                              .setArchiveNumber(value);\r\n+                                        },\r\n+                                        controller: archiveNumber,\r\n+                                        validator: (value) {\r\n+                                          if (value == null || value.isEmpty) {\r\n+                                            return \"Please enter an archive number\";\r\n+                                          }\r\n+                                          return null;\r\n+                                        },\r\n+                                        decoration: const InputDecoration(\r\n+                                            contentPadding:\r\n+                                                EdgeInsets.symmetric(\r\n+                                                    vertical: 20,\r\n+                                                    horizontal: 35),\r\n+                                            border: InputBorder.none,\r\n+                                            prefixIcon: Icon(\r\n+                                              Icons.folder_zip_outlined,\r\n+                                              color: Colors.blueGrey,\r\n+                                              size: 23,\r\n+                                            ),\r\n+                                            hintText: \"Archive number\",\r\n+                                            hintStyle: TextStyle(\r\n+                                              color: Colors.black,\r\n+                                              fontFamily: 'Iphone',\r\n+                                              fontSize: 19,\r\n+                                              fontWeight: FontWeight.w500,\r\n+                                            ),\r\n+                                            errorBorder: UnderlineInputBorder(\r\n+                                                borderSide: BorderSide(\r\n+                                              color: Colors.redAccent,\r\n+                                            ))),\r\n+                                      ),\r\n+                                    ),\r\n+                                  ],\r\n+                                )),\r\n+                          ),\r\n+                        ),\r\n+                        GestureDetector(\r\n+                          onTap: () async {\r\n+                            final selectedTags =\r\n+                                await showModalBottomSheet<List<TagElement>>(\r\n+                                    clipBehavior: Clip.hardEdge,\r\n+                                    isScrollControlled: true,\r\n+                                    context: context,\r\n+                                    shape: const RoundedRectangleBorder(\r\n+                                        borderRadius: BorderRadius.vertical(\r\n+                                      top: Radius.circular(15.0),\r\n+                                    )),\r\n+                                    builder: (BuildContext context) {\r\n+                                      return StatefulBuilder(builder:\r\n+                                          (BuildContext context,\r\n+                                              StateSetter setState) {\r\n+                                        return TagsBottomSheet(\r\n+                                          givenTagsFromOutSide: this.selectedTags!,\r\n+                                        );\r\n+                                      });\r\n+                                    }).then((value) {\r\n+                                      setState(() {\r\n+                                        this.\r\n+                                      });\r\n+                                    });\r\n+                            \r\n+                          },\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 56,\r\n+                            child: const Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 20.0,\r\n+                                end: 20.0,\r\n+                              ),\r\n+                              child: Row(\r\n+                                mainAxisAlignment:\r\n+                                    MainAxisAlignment.spaceBetween,\r\n+                                children: [\r\n+                                  Row(\r\n+                                    children: [\r\n+                                      Icon(\r\n+                                        Icons.tag,\r\n+                                        size: 23,\r\n+                                      ),\r\n+                                      SizedBox(\r\n+                                        width: 12,\r\n+                                      ),\r\n+                                      Text(\r\n+                                        'Tags',\r\n+                                        style: TextStyle(\r\n+                                            color: Colors.black,\r\n+                                            fontFamily: 'Iphone',\r\n+                                            fontSize: 20),\r\n+                                      ),\r\n+                                    ],\r\n+                                  ),\r\n+                                  Icon(\r\n+                                    Icons.arrow_forward_ios_rounded,\r\n+                                    color: Colors.grey,\r\n+                                    size: 22,\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                        GestureDetector(\r\n+                          onTap: () async {\r\n+                            final selectedStatus =\r\n+                                await showModalBottomSheet<StatusMod>(\r\n+                              clipBehavior: Clip.hardEdge,\r\n+                              isScrollControlled: true,\r\n+                              context: context,\r\n+                              shape: const RoundedRectangleBorder(\r\n+                                borderRadius: BorderRadius.vertical(\r\n+                                  top: Radius.circular(15.0),\r\n+                                ),\r\n+                              ),\r\n+                              builder: (BuildContext context) {\r\n+                                return StatusesBottomSheet(\r\n+                                  status: this.selectedStatus,\r\n+                                );\r\n+                              },\r\n+                            );\r\n+                            setState(() {\r\n+                              if (selectedStatus != null) {\r\n+                                this.selectedStatus = selectedStatus;\r\n+                              }\r\n+                            });\r\n+                          },\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 56,\r\n+                            child: Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 20.0,\r\n+                                end: 20.0,\r\n+                              ),\r\n+                              child: Row(\r\n+                                mainAxisAlignment:\r\n+                                    MainAxisAlignment.spaceBetween,\r\n+                                children: [\r\n+                                  Row(\r\n+                                    children: [\r\n+                                      SizedBox(\r\n+                                        width: 25,\r\n+                                        height: 25,\r\n+                                        child: Image.asset(\r\n+                                          'images/Tag.png',\r\n+                                          color: Colors.grey,\r\n+                                        ),\r\n+                                      ),\r\n+                                      SizedBox(\r\n+                                        width: 15,\r\n+                                      ),\r\n+                                      SizedBox(\r\n+                                        width: 250,\r\n+                                        height: 32,\r\n+                                        child: ListView.separated(\r\n+                                          scrollDirection: Axis.horizontal,\r\n+                                          itemBuilder: (context, index) {\r\n+                                            final statusText =\r\n+                                                selectedStatus.name;\r\n+                                            final textLength =\r\n+                                                statusText!.length;\r\n+                                            final statusWidth =\r\n+                                                40.0 + (textLength * 7.0);\r\n+                                            return Container(\r\n+                                              alignment: Alignment.center,\r\n+                                              width: statusWidth,\r\n+                                              decoration: BoxDecoration(\r\n+                                                color: Color(int.parse(\r\n+                                                    selectedStatus.color!)),\r\n+                                                borderRadius:\r\n+                                                    BorderRadius.circular(30),\r\n+                                              ),\r\n+                                              child: Text(\r\n+                                                '${selectedStatus.name}',\r\n+                                                style: TextStyle(\r\n+                                                    fontSize: 18,\r\n+                                                    color: Colors.white),\r\n+                                              ),\r\n+                                            );\r\n+                                          },\r\n+                                          itemCount: 1,\r\n+                                          separatorBuilder: (context, index) {\r\n+                                            return SizedBox(\r\n+                                              width: 10,\r\n+                                            );\r\n+                                          },\r\n+                                        ),\r\n+                                      )\r\n+                                    ],\r\n+                                  ),\r\n+                                  Icon(\r\n+                                    Icons.arrow_forward_ios_rounded,\r\n+                                    color: Colors.grey,\r\n+                                    size: 22,\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                        CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 110,\r\n+                          child: Column(\r\n+                            crossAxisAlignment: CrossAxisAlignment.start,\r\n+                            children: [\r\n+                              const Padding(\r\n+                                padding: EdgeInsetsDirectional.only(\r\n+                                  start: 25.0,\r\n+                                  end: 20.0,\r\n+                                  top: 20.0,\r\n+                                ),\r\n+                                child: Text(\r\n+                                  'Descision',\r\n+                                  style: TextStyle(\r\n+                                    fontSize: 20,\r\n+                                    color: Colors.black,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                              Padding(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n+                                    start: 10.0, end: 10.0),\r\n+                                child: TextFormField(\r\n+                                  onChanged: (value) {\r\n+                                    Provider.of<NewInboxProvider>(context,\r\n+                                            listen: false)\r\n+                                        .setArchiveNumber(value);\r\n+                                  },\r\n+                                  controller: decisionCont,\r\n+                                  decoration: const InputDecoration(\r\n+                                    contentPadding: EdgeInsets.symmetric(\r\n+                                        vertical: 20, horizontal: 40),\r\n+                                    border: InputBorder.none,\r\n+                                    hintText: \"Add Decsision ...\",\r\n+                                    hintStyle: TextStyle(\r\n+                                      color: Colors.grey,\r\n+                                      fontFamily: 'Iphone',\r\n+                                      fontSize: 19,\r\n+                                      fontWeight: FontWeight.w500,\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n+                        ),\r\n+                        GestureDetector(\r\n+                          onTap: () {\r\n+                            Provider.of<NewInboxProvider>(context,\r\n+                                    listen: false)\r\n+                                .getImagesFromGallery();\r\n+                          },\r\n+                          child: AnimatedContainer(\r\n+                            height: Provider.of<NewInboxProvider>(context)\r\n+                                        .imagesFiles\r\n+                                        .length >\r\n+                                    0\r\n+                                ? 95 +\r\n+                                    ((Provider.of<NewInboxProvider>(context)\r\n+                                            .imagesFiles\r\n+                                            .length) *\r\n+                                        55)\r\n+                                : 75.0,\r\n+                            duration: Duration(milliseconds: 300),\r\n+                            child: CustomWhiteBox(\r\n+                              width: 378,\r\n+                              height: 120,\r\n+                              child: SingleChildScrollView(\r\n+                                physics: NeverScrollableScrollPhysics(),\r\n+                                child: Padding(\r\n+                                  padding: EdgeInsetsDirectional.only(\r\n+                                    top: 20,\r\n+                                    start: 20.0,\r\n+                                    end: 20.0,\r\n+                                  ),\r\n+                                  child: Column(\r\n+                                    crossAxisAlignment:\r\n+                                        CrossAxisAlignment.start,\r\n+                                    children: [\r\n+                                      Row(\r\n+                                        mainAxisAlignment:\r\n+                                            MainAxisAlignment.spaceBetween,\r\n+                                        children: [\r\n+                                          Row(\r\n+                                            children: [\r\n+                                              Icon(\r\n+                                                Icons.image,\r\n+                                                color: Colors.blueGrey,\r\n+                                                size: 23,\r\n+                                              ),\r\n+                                              SizedBox(\r\n+                                                width: 12,\r\n+                                              ),\r\n+                                              Text(\r\n+                                                'Add image',\r\n+                                                style: TextStyle(\r\n+                                                    color: primaryColor,\r\n+                                                    fontFamily: 'Iphone',\r\n+                                                    fontSize: 20),\r\n+                                              ),\r\n+                                            ],\r\n+                                          ),\r\n+                                          Icon(\r\n+                                            Icons.arrow_forward_ios_rounded,\r\n+                                            color: Colors.grey,\r\n+                                            size: 22,\r\n+                                          ),\r\n+                                        ],\r\n+                                      ),\r\n+                                      Provider.of<NewInboxProvider>(context)\r\n+                                              .imagesFiles\r\n+                                              .isNotEmpty\r\n+                                          ? SizedBox(\r\n+                                              height: Provider.of<\r\n+                                                              NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .imagesFiles\r\n+                                                      .isNotEmpty\r\n+                                                  ? 55 +\r\n+                                                      ((Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles\r\n+                                                              .length) *\r\n+                                                          57)\r\n+                                                  : 50.0,\r\n+                                              child: ListView.builder(\r\n+                                                physics:\r\n+                                                    NeverScrollableScrollPhysics(),\r\n+                                                itemCount: Provider.of<\r\n+                                                            NewInboxProvider>(\r\n+                                                        context)\r\n+                                                    .imagesFiles\r\n+                                                    .length,\r\n+                                                itemBuilder: (context, index) {\r\n+                                                  return ListTile(\r\n+                                                    onTap: () {\r\n+                                                      showDialog(\r\n+                                                        barrierDismissible:\r\n+                                                            true,\r\n+                                                        context: context,\r\n+                                                        builder: (context) {\r\n+                                                          return Align(\r\n+                                                            alignment: Alignment\r\n+                                                                .center,\r\n+                                                            child:\r\n+                                                                SingleChildScrollView(\r\n+                                                              child:\r\n+                                                                  AlertDialog(\r\n+                                                                      backgroundColor:\r\n+                                                                          Colors\r\n+                                                                              .transparent,\r\n+                                                                      titlePadding:\r\n+                                                                          EdgeInsets\r\n+                                                                              .zero,\r\n+                                                                      title:\r\n+                                                                          Container(\r\n+                                                                        width:\r\n+                                                                            200,\r\n+                                                                        height: MediaQuery.sizeOf(context).height -\r\n+                                                                            250,\r\n+                                                                        decoration: BoxDecoration(\r\n+                                                                            borderRadius: BorderRadius.circular(30),\r\n+                                                                            image: DecorationImage(\r\n+                                                                                fit: BoxFit.cover,\r\n+                                                                                image: FileImage(\r\n+                                                                                  File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n+                                                                                ))),\r\n+                                                                      )),\r\n+                                                            ),\r\n+                                                          );\r\n+                                                        },\r\n+                                                      );\r\n+                                                    },\r\n+                                                    title: Row(\r\n+                                                      children: [\r\n+                                                        IconButton(\r\n+                                                            onPressed: () {\r\n+                                                              Provider.of<NewInboxProvider>(\r\n+                                                                      context,\r\n+                                                                      listen:\r\n+                                                                          false)\r\n+                                                                  .imagesFiles\r\n+                                                                  .removeAt(\r\n+                                                                      index);\r\n+                                                              setState(() {});\r\n+                                                            },\r\n+                                                            icon: Icon(\r\n+                                                              Icons\r\n+                                                                  .delete_outline_rounded,\r\n+                                                              color: Colors.red,\r\n+                                                            )),\r\n+                                                        Container(\r\n+                                                          margin:\r\n+                                                              EdgeInsets.all(7),\r\n+                                                          width: 38,\r\n+                                                          height: 40,\r\n+                                                          decoration: BoxDecoration(\r\n+                                                              border: Border.all(\r\n+                                                                  color: Colors\r\n+                                                                      .black),\r\n+                                                              borderRadius:\r\n+                                                                  BorderRadius\r\n+                                                                      .circular(\r\n+                                                                          11),\r\n+                                                              image: DecorationImage(\r\n+                                                                  fit: BoxFit\r\n+                                                                      .cover,\r\n+                                                                  image: FileImage(File(Provider.of<\r\n+                                                                              NewInboxProvider>(\r\n+                                                                          context)\r\n+                                                                      .imagesFiles[\r\n+                                                                          index]!\r\n+                                                                      .path)))),\r\n+                                                        ),\r\n+                                                        Text(\r\n+                                                          '${Provider.of<NewInboxProvider>(context).imagesFiles[index]!.name}',\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style: TextStyle(\r\n+                                                              fontSize: 17),\r\n+                                                        )\r\n+                                                      ],\r\n+                                                    ),\r\n+                                                  );\r\n+                                                },\r\n+                                              ),\r\n+                                            )\r\n+                                          : SizedBox()\r\n+                                    ],\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                        ActivitesExpansionTile(),\r\n+                        Padding(\r\n+                          padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0, end: 20.0, bottom: 20),\r\n+                          child: TextField(\r\n+                            controller: activityTextFieldController,\r\n+                            decoration: InputDecoration(\r\n+                              suffixIcon: IconButton(\r\n+                                  onPressed: () {\r\n+                                    setState(() {\r\n+                                      Provider.of<NewInboxProvider>(context,\r\n+                                              listen: false)\r\n+                                          .addActivity(\r\n+                                              activityTextFieldController.text,\r\n+                                              user.user.id.toString());\r\n+                                      activityTextFieldController.clear();\r\n+                                    });\r\n+                                  },\r\n+                                  icon: Icon(\r\n+                                    Icons.send,\r\n+                                    color: primaryColor,\r\n+                                  )),\r\n+                              //should be replaced with profie image\r\n+                              prefixIcon: Icon(Icons.person),\r\n+                              filled: true,\r\n+                              fillColor: Colors.black.withOpacity(0.05),\r\n+                              contentPadding: EdgeInsets.all(15),\r\n+                              hintText: \"Add new activity ...\",\r\n+                              hintStyle: const TextStyle(\r\n+                                  color: Colors.grey, fontSize: 17),\r\n+                              enabledBorder: UnderlineInputBorder(\r\n+                                borderSide: BorderSide(color: backGroundColor),\r\n+                                borderRadius: BorderRadius.circular(30),\r\n+                              ),\r\n+                              focusedBorder: UnderlineInputBorder(\r\n+                                borderRadius: BorderRadius.circular(30),\r\n+                                borderSide: BorderSide(color: backGroundColor),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  )\r\n+                ],\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                }
            ],
            "date": 1694853719205,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/services/mail_controller.dart';\r\nimport 'package:final_projectt/core/services/new_inbox_controller.dart';\r\nimport 'package:final_projectt/core/services/user_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\nimport 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/custom_box.dart';\r\nimport 'package:final_projectt/core/widgets/custum_textfield.dart';\r\nimport 'package:final_projectt/core/widgets/date_picker.dart';\r\nimport 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/show_alert.dart';\r\nimport 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\nimport 'package:final_projectt/models/catego_model.dart';\r\nimport 'package:final_projectt/models/sender_model.dart';\r\nimport 'package:final_projectt/models/status_model.dart';\r\nimport 'package:final_projectt/models/tags_model.dart';\r\nimport 'package:final_projectt/models/user_model.dart';\r\nimport 'package:final_projectt/providers/new_inbox_provider.dart';\r\nimport 'package:final_projectt/providers/status_provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass NewInboxBottomSheet extends StatefulWidget {\r\n  @override\r\n  State<NewInboxBottomSheet> createState() => _NewInboxBottomSheetState();\r\n}\r\n\r\nclass _NewInboxBottomSheetState extends State<NewInboxBottomSheet> {\r\n  TextEditingController senderNameCont = TextEditingController();\r\n  TextEditingController senderMobileCont = TextEditingController();\r\n  TextEditingController mailTitleCont = TextEditingController();\r\n  TextEditingController mailDescriptionCont = TextEditingController();\r\n  TextEditingController archiveNumber = TextEditingController();\r\n\r\n  SingleSender? selectedSender;\r\n  List<TagElement>? selectedTags = [];\r\n\r\n  TextEditingController decisionCont = TextEditingController();\r\n  TextEditingController activityTextFieldController = TextEditingController();\r\n  late UserModel user;\r\n  final _formKey = GlobalKey<FormState>();\r\n  late String category = 'Other';\r\n\r\n  bool isValidationShown = false;\r\n  late StatusMod selectedStatus = StatusMod(\r\n      id: 1,\r\n      name: 'Inbox',\r\n      color: '0xfffa3a57',\r\n      createdAt: DateTime.now().toString(),\r\n      updatedAt: DateTime.now().toString(),\r\n      mailsCount: '');\r\n\r\n  getUser() async {\r\n    user = await UserController().getLocalUser();\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    getUser();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Padding(\r\n      padding:\r\n          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n      child: SizedBox(\r\n        height: MediaQuery.of(context).size.height - 55,\r\n        child: Column(\r\n          children: [\r\n            Padding(\r\n              padding: const EdgeInsets.all(10.0),\r\n              child: Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  TextButton(\r\n                    style: TextButton.styleFrom(\r\n                        padding: EdgeInsets.zero,\r\n                        minimumSize: Size(50, 30),\r\n                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n                        alignment: Alignment.centerLeft),\r\n                    onPressed: () => Navigator.pop(context),\r\n                    child: const Text(\r\n                      'Cancel',\r\n                      style: TextStyle(fontSize: 20),\r\n                    ),\r\n                  ),\r\n                  const Text(\r\n                    'New Inbox',\r\n                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n                  ),\r\n                  TextButton(\r\n                    onPressed: () async {\r\n                      if (_formKey.currentState!.validate()) {\r\n                        // showDialog(\r\n                        //   barrierDismissible: false,\r\n                        //   context: context,\r\n                        //   builder: (context) {\r\n                        //     return Align(\r\n                        //       alignment: Alignment.center,\r\n                        //       child: AlertDialog(\r\n                        //           backgroundColor: Colors.transparent,\r\n                        //           titlePadding: EdgeInsets.zero,\r\n                        //           title:\r\n                        //               Image.asset('images/loading-icon.gif')),\r\n                        //     );\r\n                        //   },\r\n                        // );\r\n\r\n                        final createMailResponse = await newInbox(\r\n                          statusId: '${selectedStatus.id}',\r\n                          decision: decisionCont.text,\r\n                          senderId: '${selectedSender!.id}',\r\n                          finalDecision: decisionCont.text,\r\n                          activities: Provider.of<NewInboxProvider>(context,\r\n                                  listen: false)\r\n                              .activites,\r\n                          tags: selectedTags!.map((tag) => tag.id).toList(),\r\n                          subject: mailTitleCont.text,\r\n                          description: mailDescriptionCont.text,\r\n                          archiveNumber: Provider.of<NewInboxProvider>(context,\r\n                                  listen: false)\r\n                              .archiveNumber,\r\n                          archiveDate: Provider.of<NewInboxProvider>(context,\r\n                                  listen: false)\r\n                              .date\r\n                              .toString(),\r\n                        );\r\n                        uploadImages(context, createMailResponse.mail!.id!);\r\n                        showAlert(context,\r\n                            message: 'Mail Created Successfully',\r\n                            color: primaryColor.withOpacity(0.8),\r\n                            width: 230);\r\n\r\n                        selectedTags = [];\r\n                        getMails();\r\n                        final updateData = Provider.of<StatuseProvider>(context,\r\n                            listen: false);\r\n                        updateData.updatestutas();\r\n\r\n                        Navigator.pushReplacement(context, MaterialPageRoute(\r\n                          builder: (context) {\r\n                            return MainPage();\r\n                          },\r\n                        ));\r\n                      } else {\r\n                        setState(() {\r\n                          isValidationShown = true;\r\n                        });\r\n                      }\r\n                    },\r\n                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n            Expanded(\r\n              child: ListView(\r\n                physics: BouncingScrollPhysics(),\r\n                children: [\r\n                  Form(\r\n                    key: _formKey,\r\n                    child: Column(\r\n                      mainAxisAlignment: MainAxisAlignment.center,\r\n                      crossAxisAlignment: CrossAxisAlignment.center,\r\n                      children: [\r\n                        AnimatedContainer(\r\n                          duration: Duration(milliseconds: 300),\r\n                          width: 400,\r\n                          height: senderNameCont.text.isEmpty\r\n                              ? (!isValidationShown ? 140 : 155)\r\n                              : 220,\r\n                          child: CustomWhiteBox(\r\n                            width: 400,\r\n                            height: 230,\r\n                            child: SingleChildScrollView(\r\n                              child: Column(\r\n                                children: [\r\n                                  CustomTextField(\r\n                                    controller: senderNameCont,\r\n                                    validationMessage:\r\n                                        \"Please enter a sender name\",\r\n                                    hintText: \"Sender\",\r\n                                    hintTextColor: Colors.grey,\r\n                                    isPrefixIcon: true,\r\n                                    isSuffixIcon: true,\r\n                                    isUnderlinedBorderEnabled: true,\r\n                                    prefixIcon: Icon(\r\n                                      Icons.person_3_outlined,\r\n                                      size: 23,\r\n                                    ),\r\n                                    suffixIcon: IconButton(\r\n                                      onPressed: () async {\r\n                                        selectedSender = null;\r\n                                        selectedSender =\r\n                                            await showModalBottomSheet<\r\n                                                SingleSender>(\r\n                                          clipBehavior: Clip.hardEdge,\r\n                                          isScrollControlled: true,\r\n                                          context: context,\r\n                                          shape: const RoundedRectangleBorder(\r\n                                            borderRadius: BorderRadius.vertical(\r\n                                              top: Radius.circular(15.0),\r\n                                            ),\r\n                                          ),\r\n                                          builder: (BuildContext context) {\r\n                                            return SendersBottomSheet();\r\n                                          },\r\n                                        );\r\n                                        setState(() {\r\n                                          if (selectedSender != null) {\r\n                                            senderNameCont.text =\r\n                                                selectedSender!.name!;\r\n                                            senderMobileCont.text =\r\n                                                selectedSender!.mobile!;\r\n                                          }\r\n                                        });\r\n                                      },\r\n                                      icon: Icon(\r\n                                        Icons.info_outline,\r\n                                        color: Color(0xff6589FF),\r\n                                        size: 27,\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                  senderNameCont.text.isEmpty\r\n                                      ? SizedBox()\r\n                                      : CustomTextField(\r\n                                          controller: senderMobileCont,\r\n                                          validationMessage:\r\n                                              \"Please enter a mobile number\",\r\n                                          hintText: \"Mobile\",\r\n                                          hintTextColor: Colors.grey,\r\n                                          isPrefixIcon: true,\r\n                                          isSuffixIcon: false,\r\n                                          isUnderlinedBorderEnabled: true,\r\n                                          prefixIcon: Icon(\r\n                                            Icons.phone_android_rounded,\r\n                                            size: 23,\r\n                                          ),\r\n                                        ),\r\n                                  GestureDetector(\r\n                                    onTap: () async {\r\n                                      final selectedCategory =\r\n                                          await showModalBottomSheet<\r\n                                              CategoryElement>(\r\n                                        clipBehavior: Clip.hardEdge,\r\n                                        isScrollControlled: true,\r\n                                        context: context,\r\n                                        shape: const RoundedRectangleBorder(\r\n                                          borderRadius: BorderRadius.vertical(\r\n                                            top: Radius.circular(15.0),\r\n                                          ),\r\n                                        ),\r\n                                        builder: (BuildContext context) {\r\n                                          return categoriesBottomSheet();\r\n                                        },\r\n                                      );\r\n                                      setState(() {\r\n                                        if (selectedCategory != null) {\r\n                                          category = selectedCategory.name!;\r\n                                        }\r\n                                      });\r\n                                    },\r\n                                    child: Padding(\r\n                                      padding: EdgeInsetsDirectional.only(\r\n                                        start: 30.0,\r\n                                        end: 20.0,\r\n                                        top: 20,\r\n                                      ),\r\n                                      child: Row(\r\n                                        mainAxisAlignment:\r\n                                            MainAxisAlignment.spaceBetween,\r\n                                        children: [\r\n                                          Text(\r\n                                            'Category',\r\n                                            style: TextStyle(\r\n                                                color: Colors.black,\r\n                                                fontFamily: 'Iphone',\r\n                                                fontSize: 20),\r\n                                          ),\r\n                                          Row(\r\n                                            children: [\r\n                                              Text(\r\n                                                '$category',\r\n                                                style: TextStyle(\r\n                                                  color: Colors.grey,\r\n                                                  fontSize: 20,\r\n                                                ),\r\n                                              ),\r\n                                              Icon(\r\n                                                Icons.arrow_forward_ios_rounded,\r\n                                                color: Colors.grey,\r\n                                                size: 22,\r\n                                              ),\r\n                                            ],\r\n                                          ),\r\n                                        ],\r\n                                      ),\r\n                                    ),\r\n                                  )\r\n                                ],\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        AnimatedContainer(\r\n                          duration: Duration(milliseconds: 300),\r\n                          width: 400,\r\n                          height: isValidationShown ? 155 : 135,\r\n                          child: CustomWhiteBox(\r\n                            width: 378,\r\n                            height: 155,\r\n                            child: SingleChildScrollView(\r\n                              child: Column(\r\n                                children: [\r\n                                  CustomTextField(\r\n                                    controller: mailTitleCont,\r\n                                    validationMessage:\r\n                                        \"Please enter a title of mail\",\r\n                                    hintText: \"Title of mail\",\r\n                                    hintTextColor: Colors.grey,\r\n                                    isPrefixIcon: false,\r\n                                    isSuffixIcon: false,\r\n                                    isUnderlinedBorderEnabled: true,\r\n                                  ),\r\n                                  Padding(\r\n                                    padding: const EdgeInsetsDirectional.only(\r\n                                        start: 10.0, end: 10.0),\r\n                                    child: TextFormField(\r\n                                      controller: mailDescriptionCont,\r\n                                      decoration: const InputDecoration(\r\n                                        contentPadding: EdgeInsets.symmetric(\r\n                                            vertical: 20, horizontal: 35),\r\n                                        border: InputBorder.none,\r\n                                        hintText: 'Description',\r\n                                        hintStyle: TextStyle(\r\n                                          color: Colors.grey,\r\n                                          fontFamily: 'Iphone',\r\n                                          fontSize: 19,\r\n                                          fontWeight: FontWeight.w500,\r\n                                        ),\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        AnimatedContainer(\r\n                          height: Provider.of<NewInboxProvider>(context)\r\n                                  .isDatePickerOpened\r\n                              ? 515.0\r\n                              : (isValidationShown ? 165 : 130),\r\n                          duration: Duration(milliseconds: 300),\r\n                          child: CustomWhiteBox(\r\n                            width: 378,\r\n                            height: 480,\r\n                            child: SingleChildScrollView(\r\n                                physics: NeverScrollableScrollPhysics(),\r\n                                child: Column(\r\n                                  children: [\r\n                                    CustomDatePicker(),\r\n                                    Padding(\r\n                                      padding: const EdgeInsetsDirectional.only(\r\n                                          start: 10.0, end: 10.0),\r\n                                      child: TextFormField(\r\n                                        onChanged: (value) {\r\n                                          Provider.of<NewInboxProvider>(context,\r\n                                                  listen: false)\r\n                                              .setArchiveNumber(value);\r\n                                        },\r\n                                        controller: archiveNumber,\r\n                                        validator: (value) {\r\n                                          if (value == null || value.isEmpty) {\r\n                                            return \"Please enter an archive number\";\r\n                                          }\r\n                                          return null;\r\n                                        },\r\n                                        decoration: const InputDecoration(\r\n                                            contentPadding:\r\n                                                EdgeInsets.symmetric(\r\n                                                    vertical: 20,\r\n                                                    horizontal: 35),\r\n                                            border: InputBorder.none,\r\n                                            prefixIcon: Icon(\r\n                                              Icons.folder_zip_outlined,\r\n                                              color: Colors.blueGrey,\r\n                                              size: 23,\r\n                                            ),\r\n                                            hintText: \"Archive number\",\r\n                                            hintStyle: TextStyle(\r\n                                              color: Colors.black,\r\n                                              fontFamily: 'Iphone',\r\n                                              fontSize: 19,\r\n                                              fontWeight: FontWeight.w500,\r\n                                            ),\r\n                                            errorBorder: UnderlineInputBorder(\r\n                                                borderSide: BorderSide(\r\n                                              color: Colors.redAccent,\r\n                                            ))),\r\n                                      ),\r\n                                    ),\r\n                                  ],\r\n                                )),\r\n                          ),\r\n                        ),\r\n                        GestureDetector(\r\n                          onTap: () async {\r\n                            final selectedTags =\r\n                                await showModalBottomSheet<List<TagElement>>(\r\n                                    clipBehavior: Clip.hardEdge,\r\n                                    isScrollControlled: true,\r\n                                    context: context,\r\n                                    shape: const RoundedRectangleBorder(\r\n                                        borderRadius: BorderRadius.vertical(\r\n                                      top: Radius.circular(15.0),\r\n                                    )),\r\n                                    builder: (BuildContext context) {\r\n                                      return StatefulBuilder(builder:\r\n                                          (BuildContext context,\r\n                                              StateSetter setState) {\r\n                                        return TagsBottomSheet(\r\n                                          \r\n                                        );\r\n                                      });\r\n                                    });\r\n                            setState(() {\r\n                              if (selectedTags != null) {\r\n                                this.selectedTags = selectedTags;\r\n                              }\r\n                            });\r\n                          },\r\n                          child: CustomWhiteBox(\r\n                            width: 378,\r\n                            height: 56,\r\n                            child: const Padding(\r\n                              padding: EdgeInsetsDirectional.only(\r\n                                start: 20.0,\r\n                                end: 20.0,\r\n                              ),\r\n                              child: Row(\r\n                                mainAxisAlignment:\r\n                                    MainAxisAlignment.spaceBetween,\r\n                                children: [\r\n                                  Row(\r\n                                    children: [\r\n                                      Icon(\r\n                                        Icons.tag,\r\n                                        size: 23,\r\n                                      ),\r\n                                      SizedBox(\r\n                                        width: 12,\r\n                                      ),\r\n                                      Text(\r\n                                        'Tags',\r\n                                        style: TextStyle(\r\n                                            color: Colors.black,\r\n                                            fontFamily: 'Iphone',\r\n                                            fontSize: 20),\r\n                                      ),\r\n                                    ],\r\n                                  ),\r\n                                  Icon(\r\n                                    Icons.arrow_forward_ios_rounded,\r\n                                    color: Colors.grey,\r\n                                    size: 22,\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        GestureDetector(\r\n                          onTap: () async {\r\n                            final selectedStatus =\r\n                                await showModalBottomSheet<StatusMod>(\r\n                              clipBehavior: Clip.hardEdge,\r\n                              isScrollControlled: true,\r\n                              context: context,\r\n                              shape: const RoundedRectangleBorder(\r\n                                borderRadius: BorderRadius.vertical(\r\n                                  top: Radius.circular(15.0),\r\n                                ),\r\n                              ),\r\n                              builder: (BuildContext context) {\r\n                                return StatusesBottomSheet(\r\n                                  status: this.selectedStatus,\r\n                                );\r\n                              },\r\n                            );\r\n                            setState(() {\r\n                              if (selectedStatus != null) {\r\n                                this.selectedStatus = selectedStatus;\r\n                              }\r\n                            });\r\n                          },\r\n                          child: CustomWhiteBox(\r\n                            width: 378,\r\n                            height: 56,\r\n                            child: Padding(\r\n                              padding: EdgeInsetsDirectional.only(\r\n                                start: 20.0,\r\n                                end: 20.0,\r\n                              ),\r\n                              child: Row(\r\n                                mainAxisAlignment:\r\n                                    MainAxisAlignment.spaceBetween,\r\n                                children: [\r\n                                  Row(\r\n                                    children: [\r\n                                      SizedBox(\r\n                                        width: 25,\r\n                                        height: 25,\r\n                                        child: Image.asset(\r\n                                          'images/Tag.png',\r\n                                          color: Colors.grey,\r\n                                        ),\r\n                                      ),\r\n                                      SizedBox(\r\n                                        width: 15,\r\n                                      ),\r\n                                      SizedBox(\r\n                                        width: 250,\r\n                                        height: 32,\r\n                                        child: ListView.separated(\r\n                                          scrollDirection: Axis.horizontal,\r\n                                          itemBuilder: (context, index) {\r\n                                            final statusText =\r\n                                                selectedStatus.name;\r\n                                            final textLength =\r\n                                                statusText!.length;\r\n                                            final statusWidth =\r\n                                                40.0 + (textLength * 7.0);\r\n                                            return Container(\r\n                                              alignment: Alignment.center,\r\n                                              width: statusWidth,\r\n                                              decoration: BoxDecoration(\r\n                                                color: Color(int.parse(\r\n                                                    selectedStatus.color!)),\r\n                                                borderRadius:\r\n                                                    BorderRadius.circular(30),\r\n                                              ),\r\n                                              child: Text(\r\n                                                '${selectedStatus.name}',\r\n                                                style: TextStyle(\r\n                                                    fontSize: 18,\r\n                                                    color: Colors.white),\r\n                                              ),\r\n                                            );\r\n                                          },\r\n                                          itemCount: 1,\r\n                                          separatorBuilder: (context, index) {\r\n                                            return SizedBox(\r\n                                              width: 10,\r\n                                            );\r\n                                          },\r\n                                        ),\r\n                                      )\r\n                                    ],\r\n                                  ),\r\n                                  Icon(\r\n                                    Icons.arrow_forward_ios_rounded,\r\n                                    color: Colors.grey,\r\n                                    size: 22,\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        CustomWhiteBox(\r\n                          width: 378,\r\n                          height: 110,\r\n                          child: Column(\r\n                            crossAxisAlignment: CrossAxisAlignment.start,\r\n                            children: [\r\n                              const Padding(\r\n                                padding: EdgeInsetsDirectional.only(\r\n                                  start: 25.0,\r\n                                  end: 20.0,\r\n                                  top: 20.0,\r\n                                ),\r\n                                child: Text(\r\n                                  'Descision',\r\n                                  style: TextStyle(\r\n                                    fontSize: 20,\r\n                                    color: Colors.black,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                              Padding(\r\n                                padding: const EdgeInsetsDirectional.only(\r\n                                    start: 10.0, end: 10.0),\r\n                                child: TextFormField(\r\n                                  onChanged: (value) {\r\n                                    Provider.of<NewInboxProvider>(context,\r\n                                            listen: false)\r\n                                        .setArchiveNumber(value);\r\n                                  },\r\n                                  controller: decisionCont,\r\n                                  decoration: const InputDecoration(\r\n                                    contentPadding: EdgeInsets.symmetric(\r\n                                        vertical: 20, horizontal: 40),\r\n                                    border: InputBorder.none,\r\n                                    hintText: \"Add Decsision ...\",\r\n                                    hintStyle: TextStyle(\r\n                                      color: Colors.grey,\r\n                                      fontFamily: 'Iphone',\r\n                                      fontSize: 19,\r\n                                      fontWeight: FontWeight.w500,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                        GestureDetector(\r\n                          onTap: () {\r\n                            Provider.of<NewInboxProvider>(context,\r\n                                    listen: false)\r\n                                .getImagesFromGallery();\r\n                          },\r\n                          child: AnimatedContainer(\r\n                            height: Provider.of<NewInboxProvider>(context)\r\n                                        .imagesFiles\r\n                                        .length >\r\n                                    0\r\n                                ? 95 +\r\n                                    ((Provider.of<NewInboxProvider>(context)\r\n                                            .imagesFiles\r\n                                            .length) *\r\n                                        55)\r\n                                : 75.0,\r\n                            duration: Duration(milliseconds: 300),\r\n                            child: CustomWhiteBox(\r\n                              width: 378,\r\n                              height: 120,\r\n                              child: SingleChildScrollView(\r\n                                physics: NeverScrollableScrollPhysics(),\r\n                                child: Padding(\r\n                                  padding: EdgeInsetsDirectional.only(\r\n                                    top: 20,\r\n                                    start: 20.0,\r\n                                    end: 20.0,\r\n                                  ),\r\n                                  child: Column(\r\n                                    crossAxisAlignment:\r\n                                        CrossAxisAlignment.start,\r\n                                    children: [\r\n                                      Row(\r\n                                        mainAxisAlignment:\r\n                                            MainAxisAlignment.spaceBetween,\r\n                                        children: [\r\n                                          Row(\r\n                                            children: [\r\n                                              Icon(\r\n                                                Icons.image,\r\n                                                color: Colors.blueGrey,\r\n                                                size: 23,\r\n                                              ),\r\n                                              SizedBox(\r\n                                                width: 12,\r\n                                              ),\r\n                                              Text(\r\n                                                'Add image',\r\n                                                style: TextStyle(\r\n                                                    color: primaryColor,\r\n                                                    fontFamily: 'Iphone',\r\n                                                    fontSize: 20),\r\n                                              ),\r\n                                            ],\r\n                                          ),\r\n                                          Icon(\r\n                                            Icons.arrow_forward_ios_rounded,\r\n                                            color: Colors.grey,\r\n                                            size: 22,\r\n                                          ),\r\n                                        ],\r\n                                      ),\r\n                                      Provider.of<NewInboxProvider>(context)\r\n                                              .imagesFiles\r\n                                              .isNotEmpty\r\n                                          ? SizedBox(\r\n                                              height: Provider.of<\r\n                                                              NewInboxProvider>(\r\n                                                          context)\r\n                                                      .imagesFiles\r\n                                                      .isNotEmpty\r\n                                                  ? 55 +\r\n                                                      ((Provider.of<NewInboxProvider>(\r\n                                                                  context)\r\n                                                              .imagesFiles\r\n                                                              .length) *\r\n                                                          57)\r\n                                                  : 50.0,\r\n                                              child: ListView.builder(\r\n                                                physics:\r\n                                                    NeverScrollableScrollPhysics(),\r\n                                                itemCount: Provider.of<\r\n                                                            NewInboxProvider>(\r\n                                                        context)\r\n                                                    .imagesFiles\r\n                                                    .length,\r\n                                                itemBuilder: (context, index) {\r\n                                                  return ListTile(\r\n                                                    onTap: () {\r\n                                                      showDialog(\r\n                                                        barrierDismissible:\r\n                                                            true,\r\n                                                        context: context,\r\n                                                        builder: (context) {\r\n                                                          return Align(\r\n                                                            alignment: Alignment\r\n                                                                .center,\r\n                                                            child:\r\n                                                                SingleChildScrollView(\r\n                                                              child:\r\n                                                                  AlertDialog(\r\n                                                                      backgroundColor:\r\n                                                                          Colors\r\n                                                                              .transparent,\r\n                                                                      titlePadding:\r\n                                                                          EdgeInsets\r\n                                                                              .zero,\r\n                                                                      title:\r\n                                                                          Container(\r\n                                                                        width:\r\n                                                                            200,\r\n                                                                        height: MediaQuery.sizeOf(context).height -\r\n                                                                            250,\r\n                                                                        decoration: BoxDecoration(\r\n                                                                            borderRadius: BorderRadius.circular(30),\r\n                                                                            image: DecorationImage(\r\n                                                                                fit: BoxFit.cover,\r\n                                                                                image: FileImage(\r\n                                                                                  File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n                                                                                ))),\r\n                                                                      )),\r\n                                                            ),\r\n                                                          );\r\n                                                        },\r\n                                                      );\r\n                                                    },\r\n                                                    title: Row(\r\n                                                      children: [\r\n                                                        IconButton(\r\n                                                            onPressed: () {\r\n                                                              Provider.of<NewInboxProvider>(\r\n                                                                      context,\r\n                                                                      listen:\r\n                                                                          false)\r\n                                                                  .imagesFiles\r\n                                                                  .removeAt(\r\n                                                                      index);\r\n                                                              setState(() {});\r\n                                                            },\r\n                                                            icon: Icon(\r\n                                                              Icons\r\n                                                                  .delete_outline_rounded,\r\n                                                              color: Colors.red,\r\n                                                            )),\r\n                                                        Container(\r\n                                                          margin:\r\n                                                              EdgeInsets.all(7),\r\n                                                          width: 38,\r\n                                                          height: 40,\r\n                                                          decoration: BoxDecoration(\r\n                                                              border: Border.all(\r\n                                                                  color: Colors\r\n                                                                      .black),\r\n                                                              borderRadius:\r\n                                                                  BorderRadius\r\n                                                                      .circular(\r\n                                                                          11),\r\n                                                              image: DecorationImage(\r\n                                                                  fit: BoxFit\r\n                                                                      .cover,\r\n                                                                  image: FileImage(File(Provider.of<\r\n                                                                              NewInboxProvider>(\r\n                                                                          context)\r\n                                                                      .imagesFiles[\r\n                                                                          index]!\r\n                                                                      .path)))),\r\n                                                        ),\r\n                                                        Text(\r\n                                                          '${Provider.of<NewInboxProvider>(context).imagesFiles[index]!.name}',\r\n                                                          maxLines: 1,\r\n                                                          overflow: TextOverflow\r\n                                                              .ellipsis,\r\n                                                          style: TextStyle(\r\n                                                              fontSize: 17),\r\n                                                        )\r\n                                                      ],\r\n                                                    ),\r\n                                                  );\r\n                                                },\r\n                                              ),\r\n                                            )\r\n                                          : SizedBox()\r\n                                    ],\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                        ActivitesExpansionTile(),\r\n                        Padding(\r\n                          padding: const EdgeInsetsDirectional.only(\r\n                              start: 20.0, end: 20.0, bottom: 20),\r\n                          child: TextField(\r\n                            controller: activityTextFieldController,\r\n                            decoration: InputDecoration(\r\n                              suffixIcon: IconButton(\r\n                                  onPressed: () {\r\n                                    setState(() {\r\n                                      Provider.of<NewInboxProvider>(context,\r\n                                              listen: false)\r\n                                          .addActivity(\r\n                                              activityTextFieldController.text,\r\n                                              user.user.id.toString());\r\n                                      activityTextFieldController.clear();\r\n                                    });\r\n                                  },\r\n                                  icon: Icon(\r\n                                    Icons.send,\r\n                                    color: primaryColor,\r\n                                  )),\r\n                              //should be replaced with profie image\r\n                              prefixIcon: Icon(Icons.person),\r\n                              filled: true,\r\n                              fillColor: Colors.black.withOpacity(0.05),\r\n                              contentPadding: EdgeInsets.all(15),\r\n                              hintText: \"Add new activity ...\",\r\n                              hintStyle: const TextStyle(\r\n                                  color: Colors.grey, fontSize: 17),\r\n                              enabledBorder: UnderlineInputBorder(\r\n                                borderSide: BorderSide(color: backGroundColor),\r\n                                borderRadius: BorderRadius.circular(30),\r\n                              ),\r\n                              focusedBorder: UnderlineInputBorder(\r\n                                borderRadius: BorderRadius.circular(30),\r\n                                borderSide: BorderSide(color: backGroundColor),\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  )\r\n                ],\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}