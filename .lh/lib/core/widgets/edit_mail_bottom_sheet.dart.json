{
    "sourceFile": "lib/core/widgets/edit_mail_bottom_sheet.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 43,
            "patches": [
                {
                    "date": 1694813337933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694813343863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,9 +457,9 @@\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n-                          );\r\n+                          ).then((value) => null);\r\n                          \r\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n"
                },
                {
                    "date": 1694813366690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -457,9 +457,15 @@\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n-                          ).then((value) => null);\r\n+                          ).then((value) {\r\n+                             setState(() {\r\n+                            if (selectedStatus != null) {\r\n+                              this.selectedStatus = selectedStatus;\r\n+                             }\r\n+                          });\r\n+                          });\r\n                          \r\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n"
                },
                {
                    "date": 1694813373280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -459,11 +459,11 @@\n                               );\r\n                             },\r\n                           ).then((value) {\r\n                              setState(() {\r\n-                            if (selectedStatus != null) {\r\n-                              this.selectedStatus = selectedStatus;\r\n-                             }\r\n+                           \r\n+                              this.selectedStatus = va;\r\n+                              \r\n                           });\r\n                           });\r\n                          \r\n                         },\r\n"
                },
                {
                    "date": 1694813381833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                             },\r\n                           ).then((value) {\r\n                              setState(() {\r\n                            \r\n-                              this.selectedStatus = va;\r\n+                              this.selectedStatus = value!;\r\n                               \r\n                           });\r\n                           });\r\n                          \r\n"
                },
                {
                    "date": 1694813850914,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n import 'package:provider/provider.dart';\r\n \r\n class EditMailBottomSheet extends StatefulWidget {\r\n   Mail mail;\r\n-  EditMailBottomSheet({required this.mail});\r\n+  EditMailBottomSheet({super.key, required this.mail});\r\n \r\n   @override\r\n   State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n }\r\n@@ -144,9 +144,9 @@\n                 children: [\r\n                   TextButton(\r\n                     style: TextButton.styleFrom(\r\n                         padding: EdgeInsets.zero,\r\n-                        minimumSize: Size(50, 30),\r\n+                        minimumSize: const Size(50, 30),\r\n                         tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n                         alignment: Alignment.centerLeft),\r\n                     onPressed: () => Navigator.pop(context),\r\n                     child: Icon(\r\n@@ -160,11 +160,10 @@\n                   ),\r\n                   TextButton(\r\n                     onPressed: () async {\r\n                       Provider.of<NewInboxProvider>(context, listen: false)\r\n-                                  .imagesFiles\r\n-                                  .length >\r\n-                              0\r\n+                              .imagesFiles\r\n+                              .isNotEmpty\r\n                           ? await uploadImages(context, widget.mail.id!)\r\n                           : null;\r\n                       await updateMail(\r\n                         mailId: widget.mail.id,\r\n@@ -205,9 +204,9 @@\n                       updateData.updatestutas();\r\n \r\n                       Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n                         builder: (context) {\r\n-                          return MainPage();\r\n+                          return const MainPage();\r\n                         },\r\n                       ));\r\n                     },\r\n                     child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n@@ -216,18 +215,18 @@\n               ),\r\n             ),\r\n             Expanded(\r\n               child: ListView(\r\n-                physics: BouncingScrollPhysics(),\r\n+                physics: const BouncingScrollPhysics(),\r\n                 children: [\r\n                   Column(\r\n                     mainAxisAlignment: MainAxisAlignment.center,\r\n                     crossAxisAlignment: CrossAxisAlignment.center,\r\n                     children: [\r\n                       AnimatedContainer(\r\n                         height: isExpansionOpened ? 175 : 150,\r\n                         width: 400,\r\n-                        duration: Duration(milliseconds: 300),\r\n+                        duration: const Duration(milliseconds: 300),\r\n                         child: CustomWhiteBox(\r\n                             width: 400,\r\n                             height: 180,\r\n                             child: Padding(\r\n@@ -245,18 +244,18 @@\n                                               CrossAxisAlignment.start,\r\n                                           children: [\r\n                                             Row(\r\n                                               children: [\r\n-                                                Icon(\r\n+                                                const Icon(\r\n                                                   Icons.person_2_outlined,\r\n                                                   size: 20,\r\n                                                 ),\r\n-                                                SizedBox(\r\n+                                                const SizedBox(\r\n                                                   width: 10,\r\n                                                 ),\r\n                                                 Text(\r\n                                                   '${widget.mail.sender!.name}',\r\n-                                                  style: TextStyle(\r\n+                                                  style: const TextStyle(\r\n                                                       fontSize: 15,\r\n                                                       fontWeight:\r\n                                                           FontWeight.w600),\r\n                                                 ),\r\n@@ -268,16 +267,18 @@\n                                                           .only(\r\n                                                       top: 10.0, start: 35),\r\n                                               child: Text(\r\n                                                 '${widget.mail.sender!.category!.name}',\r\n-                                                style: TextStyle(fontSize: 14),\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n                                               ),\r\n                                             )\r\n                                           ],\r\n                                         ),\r\n                                         Container(\r\n-                                          margin: EdgeInsetsDirectional.only(\r\n-                                              top: 5),\r\n+                                          margin:\r\n+                                              const EdgeInsetsDirectional.only(\r\n+                                                  top: 5),\r\n                                           width: 1,\r\n                                           height: 50,\r\n                                           color: Colors.grey.shade300,\r\n                                         ),\r\n@@ -293,9 +294,9 @@\n                                                           .only(\r\n                                                       top: 10, bottom: 10),\r\n                                               child: Text(\r\n                                                 '$today $month $year',\r\n-                                                style: TextStyle(\r\n+                                                style: const TextStyle(\r\n                                                   fontSize: 14,\r\n                                                 ),\r\n                                               ),\r\n                                             ),\r\n@@ -304,18 +305,19 @@\n                                               child: Text(\r\n                                                 'Archive Number: ${widget.mail.archiveNumber}',\r\n                                                 overflow: TextOverflow.ellipsis,\r\n                                                 maxLines: 1,\r\n-                                                style: TextStyle(fontSize: 14),\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n                                               ),\r\n                                             )\r\n                                           ],\r\n                                         ),\r\n                                       ],\r\n                                     ),\r\n                                     Container(\r\n-                                      margin:\r\n-                                          EdgeInsetsDirectional.only(top: 15),\r\n+                                      margin: const EdgeInsetsDirectional.only(\r\n+                                          top: 15),\r\n                                       width: MediaQuery.sizeOf(context).width,\r\n                                       height: 1,\r\n                                       color: Colors.grey.shade300,\r\n                                     ),\r\n@@ -323,9 +325,9 @@\n                                       data: Theme.of(context).copyWith(\r\n                                           dividerColor: Colors.transparent),\r\n                                       child: ListTileTheme(\r\n                                         contentPadding:\r\n-                                            EdgeInsetsDirectional.only(\r\n+                                            const EdgeInsetsDirectional.only(\r\n                                                 start: 10),\r\n                                         dense: true,\r\n                                         child: ExpansionTile(\r\n                                             onExpansionChanged: (value) {\r\n@@ -363,9 +365,10 @@\n                                               Text(\r\n                                                 widget.mail.description == ''\r\n                                                     ? '${widget.mail.description}'\r\n                                                     : 'No Description',\r\n-                                                style: TextStyle(fontSize: 16),\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 16),\r\n                                               )\r\n                                             ]),\r\n                                       ),\r\n                                     )\r\n@@ -458,21 +461,18 @@\n                                 ),\r\n                               );\r\n                             },\r\n                           ).then((value) {\r\n-                             setState(() {\r\n-                           \r\n-                              this.selectedStatus = value!;\r\n-                              \r\n+                            setState(() {\r\n+                              selectedStatus = value!;\r\n+                            });\r\n                           });\r\n-                          });\r\n-                         \r\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n                           child: Padding(\r\n-                            padding: EdgeInsetsDirectional.only(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n                               start: 20.0,\r\n                               end: 20.0,\r\n                             ),\r\n                             child: Row(\r\n@@ -487,9 +487,9 @@\n                                         'images/Tag.png',\r\n                                         color: Colors.grey,\r\n                                       ),\r\n                                     ),\r\n-                                    SizedBox(\r\n+                                    const SizedBox(\r\n                                       width: 15,\r\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 250,\r\n@@ -512,25 +512,25 @@\n                                                   BorderRadius.circular(30),\r\n                                             ),\r\n                                             child: Text(\r\n                                               '${selectedStatus.name}',\r\n-                                              style: TextStyle(\r\n+                                              style: const TextStyle(\r\n                                                   fontSize: 18,\r\n                                                   color: Colors.white),\r\n                                             ),\r\n                                           );\r\n                                         },\r\n                                         itemCount: 1,\r\n                                         separatorBuilder: (context, index) {\r\n-                                          return SizedBox(\r\n+                                          return const SizedBox(\r\n                                             width: 10,\r\n                                           );\r\n                                         },\r\n                                       ),\r\n                                     )\r\n                                   ],\r\n                                 ),\r\n-                                Icon(\r\n+                                const Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n                                   color: Colors.grey,\r\n                                   size: 22,\r\n                                 ),\r\n@@ -592,15 +592,13 @@\n                               .getImagesFromGallery();\r\n                         },\r\n                         child: AnimatedContainer(\r\n                           height: Provider.of<NewInboxProvider>(context)\r\n-                                          .networkImagesFiles\r\n-                                          .length >\r\n-                                      0 ||\r\n+                                      .networkImagesFiles\r\n+                                      .isNotEmpty ||\r\n                                   Provider.of<NewInboxProvider>(context)\r\n-                                          .imagesFiles\r\n-                                          .length >\r\n-                                      0\r\n+                                      .imagesFiles\r\n+                                      .isNotEmpty\r\n                               ? 95 +\r\n                                   (((Provider.of<NewInboxProvider>(context)\r\n                                               .networkImagesFiles\r\n                                               .length) +\r\n@@ -609,16 +607,16 @@\n                                               .imagesFiles\r\n                                               .length)) *\r\n                                       57)\r\n                               : 75.0,\r\n-                          duration: Duration(milliseconds: 300),\r\n+                          duration: const Duration(milliseconds: 300),\r\n                           child: CustomWhiteBox(\r\n                             width: 378,\r\n                             height: 120,\r\n                             child: SingleChildScrollView(\r\n-                              physics: NeverScrollableScrollPhysics(),\r\n+                              physics: const NeverScrollableScrollPhysics(),\r\n                               child: Padding(\r\n-                                padding: EdgeInsetsDirectional.only(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n                                   top: 20,\r\n                                   start: 20.0,\r\n                                   end: 20.0,\r\n                                 ),\r\n@@ -630,14 +628,14 @@\n                                           MainAxisAlignment.spaceBetween,\r\n                                       children: [\r\n                                         Row(\r\n                                           children: [\r\n-                                            Icon(\r\n+                                            const Icon(\r\n                                               Icons.image,\r\n                                               color: Colors.blueGrey,\r\n                                               size: 23,\r\n                                             ),\r\n-                                            SizedBox(\r\n+                                            const SizedBox(\r\n                                               width: 12,\r\n                                             ),\r\n                                             Text(\r\n                                               'Add image',\r\n@@ -647,9 +645,9 @@\n                                                   fontSize: 20),\r\n                                             ),\r\n                                           ],\r\n                                         ),\r\n-                                        Icon(\r\n+                                        const Icon(\r\n                                           Icons.arrow_forward_ios_rounded,\r\n                                           color: Colors.grey,\r\n                                           size: 22,\r\n                                         ),\r\n@@ -668,9 +666,9 @@\n                                             child: ListView.builder(\r\n                                               shrinkWrap: true,\r\n                                               padding: EdgeInsets.zero,\r\n                                               physics:\r\n-                                                  NeverScrollableScrollPhysics(),\r\n+                                                  const NeverScrollableScrollPhysics(),\r\n                                               itemCount:\r\n                                                   Provider.of<NewInboxProvider>(\r\n                                                           context)\r\n                                                       .networkImagesFiles\r\n@@ -738,16 +736,16 @@\n                                                                 .removeAt(\r\n                                                                     index);\r\n                                                             setState(() {});\r\n                                                           },\r\n-                                                          icon: Icon(\r\n+                                                          icon: const Icon(\r\n                                                             Icons\r\n                                                                 .delete_outline_rounded,\r\n                                                             color: Colors.red,\r\n                                                           )),\r\n                                                       Container(\r\n-                                                        margin:\r\n-                                                            EdgeInsets.all(7),\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n                                                         width: 38,\r\n                                                         height: 40,\r\n                                                         decoration: BoxDecoration(\r\n                                                             border: Border.all(\r\n@@ -769,19 +767,20 @@\n                                                           '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n                                                           maxLines: 1,\r\n                                                           overflow: TextOverflow\r\n                                                               .ellipsis,\r\n-                                                          style: TextStyle(\r\n-                                                              fontSize: 17),\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n                                                         ),\r\n                                                       )\r\n                                                     ],\r\n                                                   ),\r\n                                                 );\r\n                                               },\r\n                                             ),\r\n                                           )\r\n-                                        : SizedBox(),\r\n+                                        : const SizedBox(),\r\n                                     Provider.of<NewInboxProvider>(context)\r\n                                             .imagesFiles\r\n                                             .isNotEmpty\r\n                                         ? SizedBox(\r\n@@ -850,16 +849,16 @@\n                                                                 .removeAt(\r\n                                                                     index);\r\n                                                             setState(() {});\r\n                                                           },\r\n-                                                          icon: Icon(\r\n+                                                          icon: const Icon(\r\n                                                             Icons\r\n                                                                 .delete_outline_rounded,\r\n                                                             color: Colors.red,\r\n                                                           )),\r\n                                                       Container(\r\n-                                                        margin:\r\n-                                                            EdgeInsets.all(7),\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n                                                         width: 38,\r\n                                                         height: 40,\r\n                                                         decoration:\r\n                                                             BoxDecoration(\r\n@@ -883,23 +882,28 @@\n                                                       ),\r\n                                                       SizedBox(\r\n                                                         width: 150,\r\n                                                         child: Text(\r\n-                                                          '${Provider.of<NewInboxProvider>(context).imagesFiles[index]!.name}',\r\n+                                                          Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles[\r\n+                                                                  index]!\r\n+                                                              .name,\r\n                                                           maxLines: 1,\r\n                                                           overflow: TextOverflow\r\n                                                               .ellipsis,\r\n-                                                          style: TextStyle(\r\n-                                                              fontSize: 17),\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n                                                         ),\r\n                                                       )\r\n                                                     ],\r\n                                                   ),\r\n                                                 );\r\n                                               },\r\n                                             ),\r\n                                           )\r\n-                                        : SizedBox(),\r\n+                                        : const SizedBox(),\r\n                                   ],\r\n                                 ),\r\n                               ),\r\n                             ),\r\n@@ -928,12 +932,12 @@\n                                   Icons.send,\r\n                                   color: primaryColor,\r\n                                 )),\r\n                             //should be replaced with profie image\r\n-                            prefixIcon: Icon(Icons.person),\r\n+                            prefixIcon: const Icon(Icons.person),\r\n                             filled: true,\r\n                             fillColor: Colors.black.withOpacity(0.05),\r\n-                            contentPadding: EdgeInsets.all(15),\r\n+                            contentPadding: const EdgeInsets.all(15),\r\n                             hintText: \"Add new activity ...\",\r\n                             hintStyle: const TextStyle(\r\n                                 color: Colors.grey, fontSize: 17),\r\n                             enabledBorder: UnderlineInputBorder(\r\n"
                },
                {
                    "date": 1694813864524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,9 +441,9 @@\n                         ),\r\n                       ),\r\n                       GestureDetector(\r\n                         onTap: () async {\r\n-                          final selectedStatus =\r\n+                            selectedStatus =\r\n                               await showModalBottomSheet<StatusMod>(\r\n                             clipBehavior: Clip.hardEdge,\r\n                             isScrollControlled: true,\r\n                             context: context,\r\n"
                },
                {
                    "date": 1694813886923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -441,9 +441,9 @@\n                         ),\r\n                       ),\r\n                       GestureDetector(\r\n                         onTap: () async {\r\n-                            selectedStatus =\r\n+                          final selectedStatus =\r\n                               await showModalBottomSheet<StatusMod>(\r\n                             clipBehavior: Clip.hardEdge,\r\n                             isScrollControlled: true,\r\n                             context: context,\r\n@@ -462,9 +462,9 @@\n                               );\r\n                             },\r\n                           ).then((value) {\r\n                             setState(() {\r\n-                              selectedStatus = value!;\r\n+                              this.selectedStatus = value!;\r\n                             });\r\n                           });\r\n                         },\r\n                         child: CustomWhiteBox(\r\n"
                },
                {
                    "date": 1694813975574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             builder: (BuildContext context) {\r\n                               return StatusesBottomSheet(\r\n                                 status: StatusMod(\r\n                                   color: widget.mail.status!.color,\r\n-                                  id: widget.mail.status!.id,\r\n+                                  id: widget.sele.status!.id,\r\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n"
                },
                {
                    "date": 1694813981183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             builder: (BuildContext context) {\r\n                               return StatusesBottomSheet(\r\n                                 status: StatusMod(\r\n                                   color: widget.mail.status!.color,\r\n-                                  id: widget.sele.status!.id,\r\n+                                  id: widget.selectedStatus.status!.id,\r\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n"
                },
                {
                    "date": 1694813987133,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             builder: (BuildContext context) {\r\n                               return StatusesBottomSheet(\r\n                                 status: StatusMod(\r\n                                   color: widget.mail.status!.color,\r\n-                                  id: widget.selectedStatus.status!.id,\r\n+                                  id: widget.selectedStatus.,\r\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n"
                },
                {
                    "date": 1694814020194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,964 @@\n+import 'dart:io';\r\n+\r\n+import 'package:final_projectt/Screens/home.dart';\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n+import 'package:final_projectt/core/services/user_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n+import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/custom_box.dart';\r\n+import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n+import 'package:final_projectt/core/widgets/date_picker.dart';\r\n+import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n+import 'package:final_projectt/models/catego_model.dart';\r\n+import 'package:final_projectt/models/mail_model.dart';\r\n+import 'package:final_projectt/models/sender_model.dart';\r\n+import 'package:final_projectt/models/status_model.dart';\r\n+import 'package:final_projectt/models/tags_model.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:image_picker/image_picker.dart';\r\n+import 'package:provider/provider.dart';\r\n+\r\n+class EditMailBottomSheet extends StatefulWidget {\r\n+  Mail mail;\r\n+  EditMailBottomSheet({super.key, required this.mail});\r\n+\r\n+  @override\r\n+  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n+}\r\n+\r\n+class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n+  TextEditingController senderNameCont = TextEditingController();\r\n+  TextEditingController senderMobileCont = TextEditingController();\r\n+  TextEditingController mailTitleCont = TextEditingController();\r\n+  TextEditingController mailDescriptionCont = TextEditingController();\r\n+  TextEditingController archiveNumberCont = TextEditingController();\r\n+  bool isExpansionOpened = false;\r\n+\r\n+  SingleSender? selectedSender;\r\n+  List<TagElement> selectedTags = [];\r\n+\r\n+  TextEditingController decisionCont = TextEditingController();\r\n+  TextEditingController activityTextFieldController = TextEditingController();\r\n+  late UserModel user;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  late String category = 'Other';\r\n+  DateTime? date;\r\n+  bool isValidationShown = false;\r\n+  late StatusMod selectedStatus = StatusMod(\r\n+      id: 1,\r\n+      name: 'Inbox',\r\n+      color: '0xfffa3a57',\r\n+      createdAt: '',\r\n+      updatedAt: '',\r\n+      mailsCount: '');\r\n+\r\n+  getUser() async {\r\n+    user = await UserController().getLocalUser();\r\n+  }\r\n+\r\n+  void intializeData() {\r\n+    if (widget.mail.archiveDate != null) {\r\n+      date = DateTime.parse(widget.mail.archiveDate!);\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.tags != null) {\r\n+      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n+        return TagElement(\r\n+          id: tag.id!,\r\n+          name: tag.name!,\r\n+          createdAt: tag.createdAt!,\r\n+          updatedAt: tag.updatedAt!,\r\n+        );\r\n+      }).toList();\r\n+      selectedTags = tags;\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.attachments!.isNotEmpty) {\r\n+      Provider.of<NewInboxProvider>(context, listen: false)\r\n+          .setNetworkImagesList(widget.mail.attachments!);\r\n+    } else {\r\n+      debugPrint('attachments is null');\r\n+    }\r\n+\r\n+    // if (widget.mail.activities!.isNotEmpty) {\r\n+    //   List<Map<String, dynamic>>? activites =\r\n+    //       widget.mail.activities!.map((activity) {\r\n+    //     return {\r\n+    //       'body': activity.body,\r\n+    //       'user_id': activity.id,\r\n+    //     };\r\n+    //   }).toList();\r\n+    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n+    //       .setActivitesList(activites);\r\n+    // } else {\r\n+    //   debugPrint('activites is null');\r\n+    // }\r\n+    if (widget.mail.status != null) {\r\n+      final status = widget.mail.status!;\r\n+      selectedStatus = StatusMod(\r\n+        color: status.color,\r\n+        id: status.id,\r\n+        name: status.name,\r\n+      );\r\n+    } else {\r\n+      debugPrint('status is null');\r\n+    }\r\n+    // selectedTags = widget.mail.tags!;\r\n+    decisionCont.text = widget.mail.decision ?? '';\r\n+  }\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    intializeData();\r\n+\r\n+    getUser();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    int year = date!.year;\r\n+    int today = date!.day;\r\n+    dynamic month = getMonth(date!);\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: SizedBox(\r\n+        height: MediaQuery.of(context).size.height - 55,\r\n+        child: Column(\r\n+          children: [\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(10.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: [\r\n+                  TextButton(\r\n+                    style: TextButton.styleFrom(\r\n+                        padding: EdgeInsets.zero,\r\n+                        minimumSize: const Size(50, 30),\r\n+                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n+                        alignment: Alignment.centerLeft),\r\n+                    onPressed: () => Navigator.pop(context),\r\n+                    child: Icon(\r\n+                      Icons.arrow_back_ios,\r\n+                      color: primaryColor,\r\n+                    ),\r\n+                  ),\r\n+                  const Text(\r\n+                    'Mail Details',\r\n+                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n+                  ),\r\n+                  TextButton(\r\n+                    onPressed: () async {\r\n+                      Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .imagesFiles\r\n+                              .isNotEmpty\r\n+                          ? await uploadImages(context, widget.mail.id!)\r\n+                          : null;\r\n+                      await updateMail(\r\n+                        mailId: widget.mail.id,\r\n+                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.id!;\r\n+                        }).toList(),\r\n+                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.image!;\r\n+                        }).toList(),\r\n+                        statusId: selectedStatus.id.toString(),\r\n+                        decision: decisionCont.text,\r\n+                        finalDecision: decisionCont.text,\r\n+                        activities: Provider.of<NewInboxProvider>(context,\r\n+                                listen: false)\r\n+                            .activites,\r\n+                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n+                      );\r\n+\r\n+                      showAlert(\r\n+                        context,\r\n+                        message: 'Mail Updated Successfully',\r\n+                        color: primaryColor.withOpacity(0.8),\r\n+                        width: 230,\r\n+                      );\r\n+\r\n+                      selectedTags = [];\r\n+\r\n+                      final updateData =\r\n+                          Provider.of<StatuseProvider>(context, listen: false);\r\n+                      updateData.updatestutas();\r\n+\r\n+                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n+                        builder: (context) {\r\n+                          return const MainPage();\r\n+                        },\r\n+                      ));\r\n+                    },\r\n+                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Expanded(\r\n+              child: ListView(\r\n+                physics: const BouncingScrollPhysics(),\r\n+                children: [\r\n+                  Column(\r\n+                    mainAxisAlignment: MainAxisAlignment.center,\r\n+                    crossAxisAlignment: CrossAxisAlignment.center,\r\n+                    children: [\r\n+                      AnimatedContainer(\r\n+                        height: isExpansionOpened ? 175 : 150,\r\n+                        width: 400,\r\n+                        duration: const Duration(milliseconds: 300),\r\n+                        child: CustomWhiteBox(\r\n+                            width: 400,\r\n+                            height: 180,\r\n+                            child: Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 15.0, top: 10),\r\n+                              child: SingleChildScrollView(\r\n+                                child: Column(\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Column(\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Row(\r\n+                                              children: [\r\n+                                                const Icon(\r\n+                                                  Icons.person_2_outlined,\r\n+                                                  size: 20,\r\n+                                                ),\r\n+                                                const SizedBox(\r\n+                                                  width: 10,\r\n+                                                ),\r\n+                                                Text(\r\n+                                                  '${widget.mail.sender!.name}',\r\n+                                                  style: const TextStyle(\r\n+                                                      fontSize: 15,\r\n+                                                      fontWeight:\r\n+                                                          FontWeight.w600),\r\n+                                                ),\r\n+                                              ],\r\n+                                            ),\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10.0, start: 35),\r\n+                                              child: Text(\r\n+                                                '${widget.mail.sender!.category!.name}',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                        Container(\r\n+                                          margin:\r\n+                                              const EdgeInsetsDirectional.only(\r\n+                                                  top: 5),\r\n+                                          width: 1,\r\n+                                          height: 50,\r\n+                                          color: Colors.grey.shade300,\r\n+                                        ),\r\n+                                        Column(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.spaceBetween,\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10, bottom: 10),\r\n+                                              child: Text(\r\n+                                                '$today $month $year',\r\n+                                                style: const TextStyle(\r\n+                                                  fontSize: 14,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(\r\n+                                              width: 150,\r\n+                                              child: Text(\r\n+                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n+                                                overflow: TextOverflow.ellipsis,\r\n+                                                maxLines: 1,\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Container(\r\n+                                      margin: const EdgeInsetsDirectional.only(\r\n+                                          top: 15),\r\n+                                      width: MediaQuery.sizeOf(context).width,\r\n+                                      height: 1,\r\n+                                      color: Colors.grey.shade300,\r\n+                                    ),\r\n+                                    Theme(\r\n+                                      data: Theme.of(context).copyWith(\r\n+                                          dividerColor: Colors.transparent),\r\n+                                      child: ListTileTheme(\r\n+                                        contentPadding:\r\n+                                            const EdgeInsetsDirectional.only(\r\n+                                                start: 10),\r\n+                                        dense: true,\r\n+                                        child: ExpansionTile(\r\n+                                            onExpansionChanged: (value) {\r\n+                                              setState(() {\r\n+                                                isExpansionOpened = value;\r\n+                                              });\r\n+                                            },\r\n+                                            textColor: const Color(0xff272727),\r\n+                                            trailing: SizedBox(\r\n+                                              width: 60,\r\n+                                              child: Center(\r\n+                                                child: Icon(\r\n+                                                  !isExpansionOpened\r\n+                                                      ? Icons\r\n+                                                          .arrow_forward_ios_rounded\r\n+                                                      : Icons\r\n+                                                          .keyboard_arrow_up_rounded,\r\n+                                                  size: isExpansionOpened\r\n+                                                      ? 30\r\n+                                                      : 20,\r\n+                                                  color: !isExpansionOpened\r\n+                                                      ? Colors.grey\r\n+                                                      : primaryColor,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            initiallyExpanded: false,\r\n+                                            title: Text(\r\n+                                              widget.mail.subject!,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  fontWeight: FontWeight.bold),\r\n+                                            ),\r\n+                                            children: [\r\n+                                              Text(\r\n+                                                widget.mail.description == ''\r\n+                                                    ? '${widget.mail.description}'\r\n+                                                    : 'No Description',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 16),\r\n+                                              )\r\n+                                            ]),\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            )),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedTags =\r\n+                              await showModalBottomSheet<List<TagElement>>(\r\n+                                  clipBehavior: Clip.hardEdge,\r\n+                                  isScrollControlled: true,\r\n+                                  context: context,\r\n+                                  shape: const RoundedRectangleBorder(\r\n+                                      borderRadius: BorderRadius.vertical(\r\n+                                    top: Radius.circular(15.0),\r\n+                                  )),\r\n+                                  builder: (BuildContext context) {\r\n+                                    return StatefulBuilder(builder:\r\n+                                        (BuildContext context,\r\n+                                            StateSetter setState) {\r\n+                                      return TagsBottomSheet();\r\n+                                    });\r\n+                                  });\r\n+                          setState(() {\r\n+                            if (selectedTags != null) {\r\n+                              this.selectedTags = selectedTags;\r\n+                            }\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: const Padding(\r\n+                            padding: EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    Icon(\r\n+                                      Icons.tag,\r\n+                                      size: 23,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 12,\r\n+                                    ),\r\n+                                    Text(\r\n+                                      'Tags',\r\n+                                      style: TextStyle(\r\n+                                          color: Colors.black,\r\n+                                          fontFamily: 'Iphone',\r\n+                                          fontSize: 20),\r\n+                                    ),\r\n+                                  ],\r\n+                                ),\r\n+                                Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedStatus =\r\n+                              await showModalBottomSheet<StatusMod>(\r\n+                            clipBehavior: Clip.hardEdge,\r\n+                            isScrollControlled: true,\r\n+                            context: context,\r\n+                            shape: const RoundedRectangleBorder(\r\n+                              borderRadius: BorderRadius.vertical(\r\n+                                top: Radius.circular(15.0),\r\n+                              ),\r\n+                            ),\r\n+                            builder: (BuildContext context) {\r\n+                              return StatusesBottomSheet(\r\n+                                status: StatusMod(\r\n+                                  color: widget.mail.status!.color,\r\n+                                  id: selectedStatus,\r\n+                                  name: widget.mail.status!.name,\r\n+                                ),\r\n+                              );\r\n+                            },\r\n+                          ).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedStatus = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    SizedBox(\r\n+                                      width: 25,\r\n+                                      height: 25,\r\n+                                      child: Image.asset(\r\n+                                        'images/Tag.png',\r\n+                                        color: Colors.grey,\r\n+                                      ),\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 15,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      CustomWhiteBox(\r\n+                        width: 378,\r\n+                        height: 110,\r\n+                        child: Column(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            const Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 25.0,\r\n+                                end: 20.0,\r\n+                                top: 20.0,\r\n+                              ),\r\n+                              child: Text(\r\n+                                'Descision',\r\n+                                style: TextStyle(\r\n+                                  fontSize: 20,\r\n+                                  color: Colors.black,\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                            Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 10.0, end: 10.0),\r\n+                              child: TextFormField(\r\n+                                onChanged: (value) {\r\n+                                  Provider.of<NewInboxProvider>(context,\r\n+                                          listen: false)\r\n+                                      .setArchiveNumber(value);\r\n+                                },\r\n+                                controller: decisionCont,\r\n+                                decoration: const InputDecoration(\r\n+                                  contentPadding: EdgeInsets.symmetric(\r\n+                                      vertical: 20, horizontal: 40),\r\n+                                  border: InputBorder.none,\r\n+                                  hintText: \"Add Decsision ...\",\r\n+                                  hintStyle: TextStyle(\r\n+                                    color: Colors.grey,\r\n+                                    fontFamily: 'Iphone',\r\n+                                    fontSize: 19,\r\n+                                    fontWeight: FontWeight.w500,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ],\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () {\r\n+                          Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .getImagesFromGallery();\r\n+                        },\r\n+                        child: AnimatedContainer(\r\n+                          height: Provider.of<NewInboxProvider>(context)\r\n+                                      .networkImagesFiles\r\n+                                      .isNotEmpty ||\r\n+                                  Provider.of<NewInboxProvider>(context)\r\n+                                      .imagesFiles\r\n+                                      .isNotEmpty\r\n+                              ? 95 +\r\n+                                  (((Provider.of<NewInboxProvider>(context)\r\n+                                              .networkImagesFiles\r\n+                                              .length) +\r\n+                                          (Provider.of<NewInboxProvider>(\r\n+                                                  context)\r\n+                                              .imagesFiles\r\n+                                              .length)) *\r\n+                                      57)\r\n+                              : 75.0,\r\n+                          duration: const Duration(milliseconds: 300),\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 120,\r\n+                            child: SingleChildScrollView(\r\n+                              physics: const NeverScrollableScrollPhysics(),\r\n+                              child: Padding(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n+                                  top: 20,\r\n+                                  start: 20.0,\r\n+                                  end: 20.0,\r\n+                                ),\r\n+                                child: Column(\r\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Row(\r\n+                                          children: [\r\n+                                            const Icon(\r\n+                                              Icons.image,\r\n+                                              color: Colors.blueGrey,\r\n+                                              size: 23,\r\n+                                            ),\r\n+                                            const SizedBox(\r\n+                                              width: 12,\r\n+                                            ),\r\n+                                            Text(\r\n+                                              'Add image',\r\n+                                              style: TextStyle(\r\n+                                                  color: primaryColor,\r\n+                                                  fontFamily: 'Iphone',\r\n+                                                  fontSize: 20),\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                        const Icon(\r\n+                                          Icons.arrow_forward_ios_rounded,\r\n+                                          color: Colors.grey,\r\n+                                          size: 22,\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .networkImagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 20 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .networkImagesFiles\r\n+                                                        .length) *\r\n+                                                    55),\r\n+                                            child: ListView.builder(\r\n+                                              shrinkWrap: true,\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              physics:\r\n+                                                  const NeverScrollableScrollPhysics(),\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .networkImagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius:\r\n+                                                                          BorderRadius.circular(\r\n+                                                                              30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit\r\n+                                                                              .cover,\r\n+                                                                          image:\r\n+                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            final provider =\r\n+                                                                Provider.of<\r\n+                                                                        NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false);\r\n+                                                            provider\r\n+                                                                .deletedImages\r\n+                                                                .add(provider\r\n+                                                                        .networkImagesFiles[\r\n+                                                                    index]!);\r\n+                                                            print(provider\r\n+                                                                .deletedImages);\r\n+                                                            provider\r\n+                                                                .networkImagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration: BoxDecoration(\r\n+                                                            border: Border.all(\r\n+                                                                color: Colors\r\n+                                                                    .black),\r\n+                                                            borderRadius:\r\n+                                                                BorderRadius\r\n+                                                                    .circular(\r\n+                                                                        11),\r\n+                                                            image: DecorationImage(\r\n+                                                                fit: BoxFit\r\n+                                                                    .cover,\r\n+                                                                image: NetworkImage(\r\n+                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .imagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 55 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .imagesFiles\r\n+                                                        .length) *\r\n+                                                    57),\r\n+                                            child: ListView.builder(\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              shrinkWrap: true,\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .imagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius: BorderRadius.circular(30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit.cover,\r\n+                                                                          image: FileImage(\r\n+                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n+                                                                          ))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            Provider.of<NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false)\r\n+                                                                .imagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration:\r\n+                                                            BoxDecoration(\r\n+                                                                border: Border.all(\r\n+                                                                    color: Colors\r\n+                                                                        .black),\r\n+                                                                borderRadius:\r\n+                                                                    BorderRadius\r\n+                                                                        .circular(\r\n+                                                                            11),\r\n+                                                                image:\r\n+                                                                    DecorationImage(\r\n+                                                                        fit: BoxFit\r\n+                                                                            .cover,\r\n+                                                                        image:\r\n+                                                                            FileImage(\r\n+                                                                          File(Provider.of<NewInboxProvider>(context)\r\n+                                                                              .imagesFiles[index]!\r\n+                                                                              .path),\r\n+                                                                        ))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles[\r\n+                                                                  index]!\r\n+                                                              .name,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      const ActivitesExpansionTile(),\r\n+                      Padding(\r\n+                        padding: const EdgeInsetsDirectional.only(\r\n+                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n+                        child: TextField(\r\n+                          controller: activityTextFieldController,\r\n+                          decoration: InputDecoration(\r\n+                            suffixIcon: IconButton(\r\n+                                onPressed: () {\r\n+                                  setState(() {\r\n+                                    Provider.of<NewInboxProvider>(context,\r\n+                                            listen: false)\r\n+                                        .addActivity(\r\n+                                            activityTextFieldController.text,\r\n+                                            user.user.id.toString());\r\n+                                    activityTextFieldController.clear();\r\n+                                  });\r\n+                                },\r\n+                                icon: Icon(\r\n+                                  Icons.send,\r\n+                                  color: primaryColor,\r\n+                                )),\r\n+                            //should be replaced with profie image\r\n+                            prefixIcon: const Icon(Icons.person),\r\n+                            filled: true,\r\n+                            fillColor: Colors.black.withOpacity(0.05),\r\n+                            contentPadding: const EdgeInsets.all(15),\r\n+                            hintText: \"Add new activity ...\",\r\n+                            hintStyle: const TextStyle(\r\n+                                color: Colors.grey, fontSize: 17),\r\n+                            enabledBorder: UnderlineInputBorder(\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                            ),\r\n+                            focusedBorder: UnderlineInputBorder(\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  )\r\n+                ],\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694814025907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             builder: (BuildContext context) {\r\n                               return StatusesBottomSheet(\r\n                                 status: StatusMod(\r\n                                   color: widget.mail.status!.color,\r\n-                                  id: selectedStatus,\r\n+                                  id: selectedStatus.,\r\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n@@ -961,968 +961,4 @@\n       ),\r\n     );\r\n   }\r\n }\r\n-import 'dart:io';\r\n-\r\n-import 'package:final_projectt/Screens/home.dart';\r\n-import 'package:final_projectt/Screens/main_screen.dart';\r\n-import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n-import 'package:final_projectt/core/services/user_controller.dart';\r\n-import 'package:final_projectt/core/util/constants/colors.dart';\r\n-import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n-import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/custom_box.dart';\r\n-import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n-import 'package:final_projectt/core/widgets/date_picker.dart';\r\n-import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/show_alert.dart';\r\n-import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n-import 'package:final_projectt/models/catego_model.dart';\r\n-import 'package:final_projectt/models/mail_model.dart';\r\n-import 'package:final_projectt/models/sender_model.dart';\r\n-import 'package:final_projectt/models/status_model.dart';\r\n-import 'package:final_projectt/models/tags_model.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n-import 'package:final_projectt/providers/status_provider.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:image_picker/image_picker.dart';\r\n-import 'package:provider/provider.dart';\r\n-\r\n-class EditMailBottomSheet extends StatefulWidget {\r\n-  Mail mail;\r\n-  EditMailBottomSheet({super.key, required this.mail});\r\n-\r\n-  @override\r\n-  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n-}\r\n-\r\n-class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n-  TextEditingController senderNameCont = TextEditingController();\r\n-  TextEditingController senderMobileCont = TextEditingController();\r\n-  TextEditingController mailTitleCont = TextEditingController();\r\n-  TextEditingController mailDescriptionCont = TextEditingController();\r\n-  TextEditingController archiveNumberCont = TextEditingController();\r\n-  bool isExpansionOpened = false;\r\n-\r\n-  SingleSender? selectedSender;\r\n-  List<TagElement> selectedTags = [];\r\n-\r\n-  TextEditingController decisionCont = TextEditingController();\r\n-  TextEditingController activityTextFieldController = TextEditingController();\r\n-  late UserModel user;\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  late String category = 'Other';\r\n-  DateTime? date;\r\n-  bool isValidationShown = false;\r\n-  late StatusMod selectedStatus = StatusMod(\r\n-      id: 1,\r\n-      name: 'Inbox',\r\n-      color: '0xfffa3a57',\r\n-      createdAt: '',\r\n-      updatedAt: '',\r\n-      mailsCount: '');\r\n-\r\n-  getUser() async {\r\n-    user = await UserController().getLocalUser();\r\n-  }\r\n-\r\n-  void intializeData() {\r\n-    if (widget.mail.archiveDate != null) {\r\n-      date = DateTime.parse(widget.mail.archiveDate!);\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.tags != null) {\r\n-      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n-        return TagElement(\r\n-          id: tag.id!,\r\n-          name: tag.name!,\r\n-          createdAt: tag.createdAt!,\r\n-          updatedAt: tag.updatedAt!,\r\n-        );\r\n-      }).toList();\r\n-      selectedTags = tags;\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.attachments!.isNotEmpty) {\r\n-      Provider.of<NewInboxProvider>(context, listen: false)\r\n-          .setNetworkImagesList(widget.mail.attachments!);\r\n-    } else {\r\n-      debugPrint('attachments is null');\r\n-    }\r\n-\r\n-    // if (widget.mail.activities!.isNotEmpty) {\r\n-    //   List<Map<String, dynamic>>? activites =\r\n-    //       widget.mail.activities!.map((activity) {\r\n-    //     return {\r\n-    //       'body': activity.body,\r\n-    //       'user_id': activity.id,\r\n-    //     };\r\n-    //   }).toList();\r\n-    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n-    //       .setActivitesList(activites);\r\n-    // } else {\r\n-    //   debugPrint('activites is null');\r\n-    // }\r\n-    if (widget.mail.status != null) {\r\n-      final status = widget.mail.status!;\r\n-      selectedStatus = StatusMod(\r\n-        color: status.color,\r\n-        id: status.id,\r\n-        name: status.name,\r\n-      );\r\n-    } else {\r\n-      debugPrint('status is null');\r\n-    }\r\n-    // selectedTags = widget.mail.tags!;\r\n-    decisionCont.text = widget.mail.decision ?? '';\r\n-  }\r\n-\r\n-  @override\r\n-  void initState() {\r\n-    intializeData();\r\n-\r\n-    getUser();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    int year = date!.year;\r\n-    int today = date!.day;\r\n-    dynamic month = getMonth(date!);\r\n-    return Padding(\r\n-      padding:\r\n-          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n-      child: SizedBox(\r\n-        height: MediaQuery.of(context).size.height - 55,\r\n-        child: Column(\r\n-          children: [\r\n-            Padding(\r\n-              padding: const EdgeInsets.all(10.0),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  TextButton(\r\n-                    style: TextButton.styleFrom(\r\n-                        padding: EdgeInsets.zero,\r\n-                        minimumSize: const Size(50, 30),\r\n-                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n-                        alignment: Alignment.centerLeft),\r\n-                    onPressed: () => Navigator.pop(context),\r\n-                    child: Icon(\r\n-                      Icons.arrow_back_ios,\r\n-                      color: primaryColor,\r\n-                    ),\r\n-                  ),\r\n-                  const Text(\r\n-                    'Mail Details',\r\n-                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n-                  ),\r\n-                  TextButton(\r\n-                    onPressed: () async {\r\n-                      Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .imagesFiles\r\n-                              .isNotEmpty\r\n-                          ? await uploadImages(context, widget.mail.id!)\r\n-                          : null;\r\n-                      await updateMail(\r\n-                        mailId: widget.mail.id,\r\n-                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.id!;\r\n-                        }).toList(),\r\n-                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.image!;\r\n-                        }).toList(),\r\n-                        statusId: selectedStatus.id.toString(),\r\n-                        decision: decisionCont.text,\r\n-                        finalDecision: decisionCont.text,\r\n-                        activities: Provider.of<NewInboxProvider>(context,\r\n-                                listen: false)\r\n-                            .activites,\r\n-                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n-                      );\r\n-\r\n-                      showAlert(\r\n-                        context,\r\n-                        message: 'Mail Updated Successfully',\r\n-                        color: primaryColor.withOpacity(0.8),\r\n-                        width: 230,\r\n-                      );\r\n-\r\n-                      selectedTags = [];\r\n-\r\n-                      final updateData =\r\n-                          Provider.of<StatuseProvider>(context, listen: false);\r\n-                      updateData.updatestutas();\r\n-\r\n-                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n-                        builder: (context) {\r\n-                          return const MainPage();\r\n-                        },\r\n-                      ));\r\n-                    },\r\n-                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            Expanded(\r\n-              child: ListView(\r\n-                physics: const BouncingScrollPhysics(),\r\n-                children: [\r\n-                  Column(\r\n-                    mainAxisAlignment: MainAxisAlignment.center,\r\n-                    crossAxisAlignment: CrossAxisAlignment.center,\r\n-                    children: [\r\n-                      AnimatedContainer(\r\n-                        height: isExpansionOpened ? 175 : 150,\r\n-                        width: 400,\r\n-                        duration: const Duration(milliseconds: 300),\r\n-                        child: CustomWhiteBox(\r\n-                            width: 400,\r\n-                            height: 180,\r\n-                            child: Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 15.0, top: 10),\r\n-                              child: SingleChildScrollView(\r\n-                                child: Column(\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Column(\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Row(\r\n-                                              children: [\r\n-                                                const Icon(\r\n-                                                  Icons.person_2_outlined,\r\n-                                                  size: 20,\r\n-                                                ),\r\n-                                                const SizedBox(\r\n-                                                  width: 10,\r\n-                                                ),\r\n-                                                Text(\r\n-                                                  '${widget.mail.sender!.name}',\r\n-                                                  style: const TextStyle(\r\n-                                                      fontSize: 15,\r\n-                                                      fontWeight:\r\n-                                                          FontWeight.w600),\r\n-                                                ),\r\n-                                              ],\r\n-                                            ),\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10.0, start: 35),\r\n-                                              child: Text(\r\n-                                                '${widget.mail.sender!.category!.name}',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                        Container(\r\n-                                          margin:\r\n-                                              const EdgeInsetsDirectional.only(\r\n-                                                  top: 5),\r\n-                                          width: 1,\r\n-                                          height: 50,\r\n-                                          color: Colors.grey.shade300,\r\n-                                        ),\r\n-                                        Column(\r\n-                                          mainAxisAlignment:\r\n-                                              MainAxisAlignment.spaceBetween,\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10, bottom: 10),\r\n-                                              child: Text(\r\n-                                                '$today $month $year',\r\n-                                                style: const TextStyle(\r\n-                                                  fontSize: 14,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            SizedBox(\r\n-                                              width: 150,\r\n-                                              child: Text(\r\n-                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n-                                                overflow: TextOverflow.ellipsis,\r\n-                                                maxLines: 1,\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Container(\r\n-                                      margin: const EdgeInsetsDirectional.only(\r\n-                                          top: 15),\r\n-                                      width: MediaQuery.sizeOf(context).width,\r\n-                                      height: 1,\r\n-                                      color: Colors.grey.shade300,\r\n-                                    ),\r\n-                                    Theme(\r\n-                                      data: Theme.of(context).copyWith(\r\n-                                          dividerColor: Colors.transparent),\r\n-                                      child: ListTileTheme(\r\n-                                        contentPadding:\r\n-                                            const EdgeInsetsDirectional.only(\r\n-                                                start: 10),\r\n-                                        dense: true,\r\n-                                        child: ExpansionTile(\r\n-                                            onExpansionChanged: (value) {\r\n-                                              setState(() {\r\n-                                                isExpansionOpened = value;\r\n-                                              });\r\n-                                            },\r\n-                                            textColor: const Color(0xff272727),\r\n-                                            trailing: SizedBox(\r\n-                                              width: 60,\r\n-                                              child: Center(\r\n-                                                child: Icon(\r\n-                                                  !isExpansionOpened\r\n-                                                      ? Icons\r\n-                                                          .arrow_forward_ios_rounded\r\n-                                                      : Icons\r\n-                                                          .keyboard_arrow_up_rounded,\r\n-                                                  size: isExpansionOpened\r\n-                                                      ? 30\r\n-                                                      : 20,\r\n-                                                  color: !isExpansionOpened\r\n-                                                      ? Colors.grey\r\n-                                                      : primaryColor,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            initiallyExpanded: false,\r\n-                                            title: Text(\r\n-                                              widget.mail.subject!,\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  fontWeight: FontWeight.bold),\r\n-                                            ),\r\n-                                            children: [\r\n-                                              Text(\r\n-                                                widget.mail.description == ''\r\n-                                                    ? '${widget.mail.description}'\r\n-                                                    : 'No Description',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 16),\r\n-                                              )\r\n-                                            ]),\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            )),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedTags =\r\n-                              await showModalBottomSheet<List<TagElement>>(\r\n-                                  clipBehavior: Clip.hardEdge,\r\n-                                  isScrollControlled: true,\r\n-                                  context: context,\r\n-                                  shape: const RoundedRectangleBorder(\r\n-                                      borderRadius: BorderRadius.vertical(\r\n-                                    top: Radius.circular(15.0),\r\n-                                  )),\r\n-                                  builder: (BuildContext context) {\r\n-                                    return StatefulBuilder(builder:\r\n-                                        (BuildContext context,\r\n-                                            StateSetter setState) {\r\n-                                      return TagsBottomSheet();\r\n-                                    });\r\n-                                  });\r\n-                          setState(() {\r\n-                            if (selectedTags != null) {\r\n-                              this.selectedTags = selectedTags;\r\n-                            }\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child: const Padding(\r\n-                            padding: EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    Icon(\r\n-                                      Icons.tag,\r\n-                                      size: 23,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 12,\r\n-                                    ),\r\n-                                    Text(\r\n-                                      'Tags',\r\n-                                      style: TextStyle(\r\n-                                          color: Colors.black,\r\n-                                          fontFamily: 'Iphone',\r\n-                                          fontSize: 20),\r\n-                                    ),\r\n-                                  ],\r\n-                                ),\r\n-                                Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedStatus =\r\n-                              await showModalBottomSheet<StatusMod>(\r\n-                            clipBehavior: Clip.hardEdge,\r\n-                            isScrollControlled: true,\r\n-                            context: context,\r\n-                            shape: const RoundedRectangleBorder(\r\n-                              borderRadius: BorderRadius.vertical(\r\n-                                top: Radius.circular(15.0),\r\n-                              ),\r\n-                            ),\r\n-                            builder: (BuildContext context) {\r\n-                              return StatusesBottomSheet(\r\n-                                status: StatusMod(\r\n-                                  color: widget.mail.status!.color,\r\n-                                  id: widget.selectedStatus.,\r\n-                                  name: widget.mail.status!.name,\r\n-                                ),\r\n-                              );\r\n-                            },\r\n-                          ).then((value) {\r\n-                            setState(() {\r\n-                              this.selectedStatus = value!;\r\n-                            });\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child: Padding(\r\n-                            padding: const EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    SizedBox(\r\n-                                      width: 25,\r\n-                                      height: 25,\r\n-                                      child: Image.asset(\r\n-                                        'images/Tag.png',\r\n-                                        color: Colors.grey,\r\n-                                      ),\r\n-                                    ),\r\n-                                    const SizedBox(\r\n-                                      width: 15,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 250,\r\n-                                      height: 32,\r\n-                                      child: ListView.separated(\r\n-                                        scrollDirection: Axis.horizontal,\r\n-                                        itemBuilder: (context, index) {\r\n-                                          final statusText =\r\n-                                              selectedStatus.name;\r\n-                                          final textLength = statusText!.length;\r\n-                                          final statusWidth =\r\n-                                              40.0 + (textLength * 7.0);\r\n-                                          return Container(\r\n-                                            alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n-                                            decoration: BoxDecoration(\r\n-                                              color: Color(int.parse(\r\n-                                                  selectedStatus.color!)),\r\n-                                              borderRadius:\r\n-                                                  BorderRadius.circular(30),\r\n-                                            ),\r\n-                                            child: Text(\r\n-                                              '${selectedStatus.name}',\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  color: Colors.white),\r\n-                                            ),\r\n-                                          );\r\n-                                        },\r\n-                                        itemCount: 1,\r\n-                                        separatorBuilder: (context, index) {\r\n-                                          return const SizedBox(\r\n-                                            width: 10,\r\n-                                          );\r\n-                                        },\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                                const Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      CustomWhiteBox(\r\n-                        width: 378,\r\n-                        height: 110,\r\n-                        child: Column(\r\n-                          crossAxisAlignment: CrossAxisAlignment.start,\r\n-                          children: [\r\n-                            const Padding(\r\n-                              padding: EdgeInsetsDirectional.only(\r\n-                                start: 25.0,\r\n-                                end: 20.0,\r\n-                                top: 20.0,\r\n-                              ),\r\n-                              child: Text(\r\n-                                'Descision',\r\n-                                style: TextStyle(\r\n-                                  fontSize: 20,\r\n-                                  color: Colors.black,\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                            Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 10.0, end: 10.0),\r\n-                              child: TextFormField(\r\n-                                onChanged: (value) {\r\n-                                  Provider.of<NewInboxProvider>(context,\r\n-                                          listen: false)\r\n-                                      .setArchiveNumber(value);\r\n-                                },\r\n-                                controller: decisionCont,\r\n-                                decoration: const InputDecoration(\r\n-                                  contentPadding: EdgeInsets.symmetric(\r\n-                                      vertical: 20, horizontal: 40),\r\n-                                  border: InputBorder.none,\r\n-                                  hintText: \"Add Decsision ...\",\r\n-                                  hintStyle: TextStyle(\r\n-                                    color: Colors.grey,\r\n-                                    fontFamily: 'Iphone',\r\n-                                    fontSize: 19,\r\n-                                    fontWeight: FontWeight.w500,\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ],\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () {\r\n-                          Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .getImagesFromGallery();\r\n-                        },\r\n-                        child: AnimatedContainer(\r\n-                          height: Provider.of<NewInboxProvider>(context)\r\n-                                      .networkImagesFiles\r\n-                                      .isNotEmpty ||\r\n-                                  Provider.of<NewInboxProvider>(context)\r\n-                                      .imagesFiles\r\n-                                      .isNotEmpty\r\n-                              ? 95 +\r\n-                                  (((Provider.of<NewInboxProvider>(context)\r\n-                                              .networkImagesFiles\r\n-                                              .length) +\r\n-                                          (Provider.of<NewInboxProvider>(\r\n-                                                  context)\r\n-                                              .imagesFiles\r\n-                                              .length)) *\r\n-                                      57)\r\n-                              : 75.0,\r\n-                          duration: const Duration(milliseconds: 300),\r\n-                          child: CustomWhiteBox(\r\n-                            width: 378,\r\n-                            height: 120,\r\n-                            child: SingleChildScrollView(\r\n-                              physics: const NeverScrollableScrollPhysics(),\r\n-                              child: Padding(\r\n-                                padding: const EdgeInsetsDirectional.only(\r\n-                                  top: 20,\r\n-                                  start: 20.0,\r\n-                                  end: 20.0,\r\n-                                ),\r\n-                                child: Column(\r\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Row(\r\n-                                          children: [\r\n-                                            const Icon(\r\n-                                              Icons.image,\r\n-                                              color: Colors.blueGrey,\r\n-                                              size: 23,\r\n-                                            ),\r\n-                                            const SizedBox(\r\n-                                              width: 12,\r\n-                                            ),\r\n-                                            Text(\r\n-                                              'Add image',\r\n-                                              style: TextStyle(\r\n-                                                  color: primaryColor,\r\n-                                                  fontFamily: 'Iphone',\r\n-                                                  fontSize: 20),\r\n-                                            ),\r\n-                                          ],\r\n-                                        ),\r\n-                                        const Icon(\r\n-                                          Icons.arrow_forward_ios_rounded,\r\n-                                          color: Colors.grey,\r\n-                                          size: 22,\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .networkImagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 20 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .networkImagesFiles\r\n-                                                        .length) *\r\n-                                                    55),\r\n-                                            child: ListView.builder(\r\n-                                              shrinkWrap: true,\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              physics:\r\n-                                                  const NeverScrollableScrollPhysics(),\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .networkImagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius:\r\n-                                                                          BorderRadius.circular(\r\n-                                                                              30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit\r\n-                                                                              .cover,\r\n-                                                                          image:\r\n-                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            final provider =\r\n-                                                                Provider.of<\r\n-                                                                        NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false);\r\n-                                                            provider\r\n-                                                                .deletedImages\r\n-                                                                .add(provider\r\n-                                                                        .networkImagesFiles[\r\n-                                                                    index]!);\r\n-                                                            print(provider\r\n-                                                                .deletedImages);\r\n-                                                            provider\r\n-                                                                .networkImagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration: BoxDecoration(\r\n-                                                            border: Border.all(\r\n-                                                                color: Colors\r\n-                                                                    .black),\r\n-                                                            borderRadius:\r\n-                                                                BorderRadius\r\n-                                                                    .circular(\r\n-                                                                        11),\r\n-                                                            image: DecorationImage(\r\n-                                                                fit: BoxFit\r\n-                                                                    .cover,\r\n-                                                                image: NetworkImage(\r\n-                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .imagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 55 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .imagesFiles\r\n-                                                        .length) *\r\n-                                                    57),\r\n-                                            child: ListView.builder(\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              shrinkWrap: true,\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .imagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius: BorderRadius.circular(30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit.cover,\r\n-                                                                          image: FileImage(\r\n-                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n-                                                                          ))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            Provider.of<NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false)\r\n-                                                                .imagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration:\r\n-                                                            BoxDecoration(\r\n-                                                                border: Border.all(\r\n-                                                                    color: Colors\r\n-                                                                        .black),\r\n-                                                                borderRadius:\r\n-                                                                    BorderRadius\r\n-                                                                        .circular(\r\n-                                                                            11),\r\n-                                                                image:\r\n-                                                                    DecorationImage(\r\n-                                                                        fit: BoxFit\r\n-                                                                            .cover,\r\n-                                                                        image:\r\n-                                                                            FileImage(\r\n-                                                                          File(Provider.of<NewInboxProvider>(context)\r\n-                                                                              .imagesFiles[index]!\r\n-                                                                              .path),\r\n-                                                                        ))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          Provider.of<NewInboxProvider>(\r\n-                                                                  context)\r\n-                                                              .imagesFiles[\r\n-                                                                  index]!\r\n-                                                              .name,\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      const ActivitesExpansionTile(),\r\n-                      Padding(\r\n-                        padding: const EdgeInsetsDirectional.only(\r\n-                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n-                        child: TextField(\r\n-                          controller: activityTextFieldController,\r\n-                          decoration: InputDecoration(\r\n-                            suffixIcon: IconButton(\r\n-                                onPressed: () {\r\n-                                  setState(() {\r\n-                                    Provider.of<NewInboxProvider>(context,\r\n-                                            listen: false)\r\n-                                        .addActivity(\r\n-                                            activityTextFieldController.text,\r\n-                                            user.user.id.toString());\r\n-                                    activityTextFieldController.clear();\r\n-                                  });\r\n-                                },\r\n-                                icon: Icon(\r\n-                                  Icons.send,\r\n-                                  color: primaryColor,\r\n-                                )),\r\n-                            //should be replaced with profie image\r\n-                            prefixIcon: const Icon(Icons.person),\r\n-                            filled: true,\r\n-                            fillColor: Colors.black.withOpacity(0.05),\r\n-                            contentPadding: const EdgeInsets.all(15),\r\n-                            hintText: \"Add new activity ...\",\r\n-                            hintStyle: const TextStyle(\r\n-                                color: Colors.grey, fontSize: 17),\r\n-                            enabledBorder: UnderlineInputBorder(\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                            ),\r\n-                            focusedBorder: UnderlineInputBorder(\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  )\r\n-                ],\r\n-              ),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1694814039735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             builder: (BuildContext context) {\r\n                               return StatusesBottomSheet(\r\n                                 status: StatusMod(\r\n                                   color: widget.mail.status!.color,\r\n-                                  id: selectedStatus.,\r\n+                                  id: this.selectedStatus,\r\n                                   name: widget.mail.status!.name,\r\n                                 ),\r\n                               );\r\n                             },\r\n"
                },
                {
                    "date": 1694814045306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,964 @@\n+import 'dart:io';\r\n+\r\n+import 'package:final_projectt/Screens/home.dart';\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n+import 'package:final_projectt/core/services/user_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n+import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/custom_box.dart';\r\n+import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n+import 'package:final_projectt/core/widgets/date_picker.dart';\r\n+import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n+import 'package:final_projectt/models/catego_model.dart';\r\n+import 'package:final_projectt/models/mail_model.dart';\r\n+import 'package:final_projectt/models/sender_model.dart';\r\n+import 'package:final_projectt/models/status_model.dart';\r\n+import 'package:final_projectt/models/tags_model.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:image_picker/image_picker.dart';\r\n+import 'package:provider/provider.dart';\r\n+\r\n+class EditMailBottomSheet extends StatefulWidget {\r\n+  Mail mail;\r\n+  EditMailBottomSheet({super.key, required this.mail});\r\n+\r\n+  @override\r\n+  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n+}\r\n+\r\n+class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n+  TextEditingController senderNameCont = TextEditingController();\r\n+  TextEditingController senderMobileCont = TextEditingController();\r\n+  TextEditingController mailTitleCont = TextEditingController();\r\n+  TextEditingController mailDescriptionCont = TextEditingController();\r\n+  TextEditingController archiveNumberCont = TextEditingController();\r\n+  bool isExpansionOpened = false;\r\n+\r\n+  SingleSender? selectedSender;\r\n+  List<TagElement> selectedTags = [];\r\n+\r\n+  TextEditingController decisionCont = TextEditingController();\r\n+  TextEditingController activityTextFieldController = TextEditingController();\r\n+  late UserModel user;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  late String category = 'Other';\r\n+  DateTime? date;\r\n+  bool isValidationShown = false;\r\n+  late StatusMod selectedStatus = StatusMod(\r\n+      id: 1,\r\n+      name: 'Inbox',\r\n+      color: '0xfffa3a57',\r\n+      createdAt: '',\r\n+      updatedAt: '',\r\n+      mailsCount: '');\r\n+\r\n+  getUser() async {\r\n+    user = await UserController().getLocalUser();\r\n+  }\r\n+\r\n+  void intializeData() {\r\n+    if (widget.mail.archiveDate != null) {\r\n+      date = DateTime.parse(widget.mail.archiveDate!);\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.tags != null) {\r\n+      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n+        return TagElement(\r\n+          id: tag.id!,\r\n+          name: tag.name!,\r\n+          createdAt: tag.createdAt!,\r\n+          updatedAt: tag.updatedAt!,\r\n+        );\r\n+      }).toList();\r\n+      selectedTags = tags;\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.attachments!.isNotEmpty) {\r\n+      Provider.of<NewInboxProvider>(context, listen: false)\r\n+          .setNetworkImagesList(widget.mail.attachments!);\r\n+    } else {\r\n+      debugPrint('attachments is null');\r\n+    }\r\n+\r\n+    // if (widget.mail.activities!.isNotEmpty) {\r\n+    //   List<Map<String, dynamic>>? activites =\r\n+    //       widget.mail.activities!.map((activity) {\r\n+    //     return {\r\n+    //       'body': activity.body,\r\n+    //       'user_id': activity.id,\r\n+    //     };\r\n+    //   }).toList();\r\n+    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n+    //       .setActivitesList(activites);\r\n+    // } else {\r\n+    //   debugPrint('activites is null');\r\n+    // }\r\n+    if (widget.mail.status != null) {\r\n+      final status = widget.mail.status!;\r\n+      selectedStatus = StatusMod(\r\n+        color: status.color,\r\n+        id: status.id,\r\n+        name: status.name,\r\n+      );\r\n+    } else {\r\n+      debugPrint('status is null');\r\n+    }\r\n+    // selectedTags = widget.mail.tags!;\r\n+    decisionCont.text = widget.mail.decision ?? '';\r\n+  }\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    intializeData();\r\n+\r\n+    getUser();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    int year = date!.year;\r\n+    int today = date!.day;\r\n+    dynamic month = getMonth(date!);\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: SizedBox(\r\n+        height: MediaQuery.of(context).size.height - 55,\r\n+        child: Column(\r\n+          children: [\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(10.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: [\r\n+                  TextButton(\r\n+                    style: TextButton.styleFrom(\r\n+                        padding: EdgeInsets.zero,\r\n+                        minimumSize: const Size(50, 30),\r\n+                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n+                        alignment: Alignment.centerLeft),\r\n+                    onPressed: () => Navigator.pop(context),\r\n+                    child: Icon(\r\n+                      Icons.arrow_back_ios,\r\n+                      color: primaryColor,\r\n+                    ),\r\n+                  ),\r\n+                  const Text(\r\n+                    'Mail Details',\r\n+                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n+                  ),\r\n+                  TextButton(\r\n+                    onPressed: () async {\r\n+                      Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .imagesFiles\r\n+                              .isNotEmpty\r\n+                          ? await uploadImages(context, widget.mail.id!)\r\n+                          : null;\r\n+                      await updateMail(\r\n+                        mailId: widget.mail.id,\r\n+                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.id!;\r\n+                        }).toList(),\r\n+                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.image!;\r\n+                        }).toList(),\r\n+                        statusId: selectedStatus.id.toString(),\r\n+                        decision: decisionCont.text,\r\n+                        finalDecision: decisionCont.text,\r\n+                        activities: Provider.of<NewInboxProvider>(context,\r\n+                                listen: false)\r\n+                            .activites,\r\n+                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n+                      );\r\n+\r\n+                      showAlert(\r\n+                        context,\r\n+                        message: 'Mail Updated Successfully',\r\n+                        color: primaryColor.withOpacity(0.8),\r\n+                        width: 230,\r\n+                      );\r\n+\r\n+                      selectedTags = [];\r\n+\r\n+                      final updateData =\r\n+                          Provider.of<StatuseProvider>(context, listen: false);\r\n+                      updateData.updatestutas();\r\n+\r\n+                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n+                        builder: (context) {\r\n+                          return const MainPage();\r\n+                        },\r\n+                      ));\r\n+                    },\r\n+                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Expanded(\r\n+              child: ListView(\r\n+                physics: const BouncingScrollPhysics(),\r\n+                children: [\r\n+                  Column(\r\n+                    mainAxisAlignment: MainAxisAlignment.center,\r\n+                    crossAxisAlignment: CrossAxisAlignment.center,\r\n+                    children: [\r\n+                      AnimatedContainer(\r\n+                        height: isExpansionOpened ? 175 : 150,\r\n+                        width: 400,\r\n+                        duration: const Duration(milliseconds: 300),\r\n+                        child: CustomWhiteBox(\r\n+                            width: 400,\r\n+                            height: 180,\r\n+                            child: Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 15.0, top: 10),\r\n+                              child: SingleChildScrollView(\r\n+                                child: Column(\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Column(\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Row(\r\n+                                              children: [\r\n+                                                const Icon(\r\n+                                                  Icons.person_2_outlined,\r\n+                                                  size: 20,\r\n+                                                ),\r\n+                                                const SizedBox(\r\n+                                                  width: 10,\r\n+                                                ),\r\n+                                                Text(\r\n+                                                  '${widget.mail.sender!.name}',\r\n+                                                  style: const TextStyle(\r\n+                                                      fontSize: 15,\r\n+                                                      fontWeight:\r\n+                                                          FontWeight.w600),\r\n+                                                ),\r\n+                                              ],\r\n+                                            ),\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10.0, start: 35),\r\n+                                              child: Text(\r\n+                                                '${widget.mail.sender!.category!.name}',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                        Container(\r\n+                                          margin:\r\n+                                              const EdgeInsetsDirectional.only(\r\n+                                                  top: 5),\r\n+                                          width: 1,\r\n+                                          height: 50,\r\n+                                          color: Colors.grey.shade300,\r\n+                                        ),\r\n+                                        Column(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.spaceBetween,\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10, bottom: 10),\r\n+                                              child: Text(\r\n+                                                '$today $month $year',\r\n+                                                style: const TextStyle(\r\n+                                                  fontSize: 14,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(\r\n+                                              width: 150,\r\n+                                              child: Text(\r\n+                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n+                                                overflow: TextOverflow.ellipsis,\r\n+                                                maxLines: 1,\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Container(\r\n+                                      margin: const EdgeInsetsDirectional.only(\r\n+                                          top: 15),\r\n+                                      width: MediaQuery.sizeOf(context).width,\r\n+                                      height: 1,\r\n+                                      color: Colors.grey.shade300,\r\n+                                    ),\r\n+                                    Theme(\r\n+                                      data: Theme.of(context).copyWith(\r\n+                                          dividerColor: Colors.transparent),\r\n+                                      child: ListTileTheme(\r\n+                                        contentPadding:\r\n+                                            const EdgeInsetsDirectional.only(\r\n+                                                start: 10),\r\n+                                        dense: true,\r\n+                                        child: ExpansionTile(\r\n+                                            onExpansionChanged: (value) {\r\n+                                              setState(() {\r\n+                                                isExpansionOpened = value;\r\n+                                              });\r\n+                                            },\r\n+                                            textColor: const Color(0xff272727),\r\n+                                            trailing: SizedBox(\r\n+                                              width: 60,\r\n+                                              child: Center(\r\n+                                                child: Icon(\r\n+                                                  !isExpansionOpened\r\n+                                                      ? Icons\r\n+                                                          .arrow_forward_ios_rounded\r\n+                                                      : Icons\r\n+                                                          .keyboard_arrow_up_rounded,\r\n+                                                  size: isExpansionOpened\r\n+                                                      ? 30\r\n+                                                      : 20,\r\n+                                                  color: !isExpansionOpened\r\n+                                                      ? Colors.grey\r\n+                                                      : primaryColor,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            initiallyExpanded: false,\r\n+                                            title: Text(\r\n+                                              widget.mail.subject!,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  fontWeight: FontWeight.bold),\r\n+                                            ),\r\n+                                            children: [\r\n+                                              Text(\r\n+                                                widget.mail.description == ''\r\n+                                                    ? '${widget.mail.description}'\r\n+                                                    : 'No Description',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 16),\r\n+                                              )\r\n+                                            ]),\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            )),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedTags =\r\n+                              await showModalBottomSheet<List<TagElement>>(\r\n+                                  clipBehavior: Clip.hardEdge,\r\n+                                  isScrollControlled: true,\r\n+                                  context: context,\r\n+                                  shape: const RoundedRectangleBorder(\r\n+                                      borderRadius: BorderRadius.vertical(\r\n+                                    top: Radius.circular(15.0),\r\n+                                  )),\r\n+                                  builder: (BuildContext context) {\r\n+                                    return StatefulBuilder(builder:\r\n+                                        (BuildContext context,\r\n+                                            StateSetter setState) {\r\n+                                      return TagsBottomSheet();\r\n+                                    });\r\n+                                  });\r\n+                          setState(() {\r\n+                            if (selectedTags != null) {\r\n+                              this.selectedTags = selectedTags;\r\n+                            }\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: const Padding(\r\n+                            padding: EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    Icon(\r\n+                                      Icons.tag,\r\n+                                      size: 23,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 12,\r\n+                                    ),\r\n+                                    Text(\r\n+                                      'Tags',\r\n+                                      style: TextStyle(\r\n+                                          color: Colors.black,\r\n+                                          fontFamily: 'Iphone',\r\n+                                          fontSize: 20),\r\n+                                    ),\r\n+                                  ],\r\n+                                ),\r\n+                                Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedStatus =\r\n+                              await showModalBottomSheet<StatusMod>(\r\n+                            clipBehavior: Clip.hardEdge,\r\n+                            isScrollControlled: true,\r\n+                            context: context,\r\n+                            shape: const RoundedRectangleBorder(\r\n+                              borderRadius: BorderRadius.vertical(\r\n+                                top: Radius.circular(15.0),\r\n+                              ),\r\n+                            ),\r\n+                            builder: (BuildContext context) {\r\n+                              return StatusesBottomSheet(\r\n+                                status: StatusMod(\r\n+                                  color: widget.mail.status!.color,\r\n+                                  id: this.selectedStatus.id,\r\n+                                  name: widget.mail.status!.name,\r\n+                                ),\r\n+                              );\r\n+                            },\r\n+                          ).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedStatus = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    SizedBox(\r\n+                                      width: 25,\r\n+                                      height: 25,\r\n+                                      child: Image.asset(\r\n+                                        'images/Tag.png',\r\n+                                        color: Colors.grey,\r\n+                                      ),\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 15,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      CustomWhiteBox(\r\n+                        width: 378,\r\n+                        height: 110,\r\n+                        child: Column(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            const Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 25.0,\r\n+                                end: 20.0,\r\n+                                top: 20.0,\r\n+                              ),\r\n+                              child: Text(\r\n+                                'Descision',\r\n+                                style: TextStyle(\r\n+                                  fontSize: 20,\r\n+                                  color: Colors.black,\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                            Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 10.0, end: 10.0),\r\n+                              child: TextFormField(\r\n+                                onChanged: (value) {\r\n+                                  Provider.of<NewInboxProvider>(context,\r\n+                                          listen: false)\r\n+                                      .setArchiveNumber(value);\r\n+                                },\r\n+                                controller: decisionCont,\r\n+                                decoration: const InputDecoration(\r\n+                                  contentPadding: EdgeInsets.symmetric(\r\n+                                      vertical: 20, horizontal: 40),\r\n+                                  border: InputBorder.none,\r\n+                                  hintText: \"Add Decsision ...\",\r\n+                                  hintStyle: TextStyle(\r\n+                                    color: Colors.grey,\r\n+                                    fontFamily: 'Iphone',\r\n+                                    fontSize: 19,\r\n+                                    fontWeight: FontWeight.w500,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ],\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () {\r\n+                          Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .getImagesFromGallery();\r\n+                        },\r\n+                        child: AnimatedContainer(\r\n+                          height: Provider.of<NewInboxProvider>(context)\r\n+                                      .networkImagesFiles\r\n+                                      .isNotEmpty ||\r\n+                                  Provider.of<NewInboxProvider>(context)\r\n+                                      .imagesFiles\r\n+                                      .isNotEmpty\r\n+                              ? 95 +\r\n+                                  (((Provider.of<NewInboxProvider>(context)\r\n+                                              .networkImagesFiles\r\n+                                              .length) +\r\n+                                          (Provider.of<NewInboxProvider>(\r\n+                                                  context)\r\n+                                              .imagesFiles\r\n+                                              .length)) *\r\n+                                      57)\r\n+                              : 75.0,\r\n+                          duration: const Duration(milliseconds: 300),\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 120,\r\n+                            child: SingleChildScrollView(\r\n+                              physics: const NeverScrollableScrollPhysics(),\r\n+                              child: Padding(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n+                                  top: 20,\r\n+                                  start: 20.0,\r\n+                                  end: 20.0,\r\n+                                ),\r\n+                                child: Column(\r\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Row(\r\n+                                          children: [\r\n+                                            const Icon(\r\n+                                              Icons.image,\r\n+                                              color: Colors.blueGrey,\r\n+                                              size: 23,\r\n+                                            ),\r\n+                                            const SizedBox(\r\n+                                              width: 12,\r\n+                                            ),\r\n+                                            Text(\r\n+                                              'Add image',\r\n+                                              style: TextStyle(\r\n+                                                  color: primaryColor,\r\n+                                                  fontFamily: 'Iphone',\r\n+                                                  fontSize: 20),\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                        const Icon(\r\n+                                          Icons.arrow_forward_ios_rounded,\r\n+                                          color: Colors.grey,\r\n+                                          size: 22,\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .networkImagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 20 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .networkImagesFiles\r\n+                                                        .length) *\r\n+                                                    55),\r\n+                                            child: ListView.builder(\r\n+                                              shrinkWrap: true,\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              physics:\r\n+                                                  const NeverScrollableScrollPhysics(),\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .networkImagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius:\r\n+                                                                          BorderRadius.circular(\r\n+                                                                              30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit\r\n+                                                                              .cover,\r\n+                                                                          image:\r\n+                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            final provider =\r\n+                                                                Provider.of<\r\n+                                                                        NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false);\r\n+                                                            provider\r\n+                                                                .deletedImages\r\n+                                                                .add(provider\r\n+                                                                        .networkImagesFiles[\r\n+                                                                    index]!);\r\n+                                                            print(provider\r\n+                                                                .deletedImages);\r\n+                                                            provider\r\n+                                                                .networkImagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration: BoxDecoration(\r\n+                                                            border: Border.all(\r\n+                                                                color: Colors\r\n+                                                                    .black),\r\n+                                                            borderRadius:\r\n+                                                                BorderRadius\r\n+                                                                    .circular(\r\n+                                                                        11),\r\n+                                                            image: DecorationImage(\r\n+                                                                fit: BoxFit\r\n+                                                                    .cover,\r\n+                                                                image: NetworkImage(\r\n+                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .imagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 55 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .imagesFiles\r\n+                                                        .length) *\r\n+                                                    57),\r\n+                                            child: ListView.builder(\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              shrinkWrap: true,\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .imagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius: BorderRadius.circular(30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit.cover,\r\n+                                                                          image: FileImage(\r\n+                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n+                                                                          ))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            Provider.of<NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false)\r\n+                                                                .imagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration:\r\n+                                                            BoxDecoration(\r\n+                                                                border: Border.all(\r\n+                                                                    color: Colors\r\n+                                                                        .black),\r\n+                                                                borderRadius:\r\n+                                                                    BorderRadius\r\n+                                                                        .circular(\r\n+                                                                            11),\r\n+                                                                image:\r\n+                                                                    DecorationImage(\r\n+                                                                        fit: BoxFit\r\n+                                                                            .cover,\r\n+                                                                        image:\r\n+                                                                            FileImage(\r\n+                                                                          File(Provider.of<NewInboxProvider>(context)\r\n+                                                                              .imagesFiles[index]!\r\n+                                                                              .path),\r\n+                                                                        ))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles[\r\n+                                                                  index]!\r\n+                                                              .name,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      const ActivitesExpansionTile(),\r\n+                      Padding(\r\n+                        padding: const EdgeInsetsDirectional.only(\r\n+                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n+                        child: TextField(\r\n+                          controller: activityTextFieldController,\r\n+                          decoration: InputDecoration(\r\n+                            suffixIcon: IconButton(\r\n+                                onPressed: () {\r\n+                                  setState(() {\r\n+                                    Provider.of<NewInboxProvider>(context,\r\n+                                            listen: false)\r\n+                                        .addActivity(\r\n+                                            activityTextFieldController.text,\r\n+                                            user.user.id.toString());\r\n+                                    activityTextFieldController.clear();\r\n+                                  });\r\n+                                },\r\n+                                icon: Icon(\r\n+                                  Icons.send,\r\n+                                  color: primaryColor,\r\n+                                )),\r\n+                            //should be replaced with profie image\r\n+                            prefixIcon: const Icon(Icons.person),\r\n+                            filled: true,\r\n+                            fillColor: Colors.black.withOpacity(0.05),\r\n+                            contentPadding: const EdgeInsets.all(15),\r\n+                            hintText: \"Add new activity ...\",\r\n+                            hintStyle: const TextStyle(\r\n+                                color: Colors.grey, fontSize: 17),\r\n+                            enabledBorder: UnderlineInputBorder(\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                            ),\r\n+                            focusedBorder: UnderlineInputBorder(\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  )\r\n+                ],\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694851075358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,24 @@\n import 'dart:io';\r\n \r\n-import 'package:final_projectt/Screens/home.dart';\r\n import 'package:final_projectt/Screens/main_screen.dart';\r\n import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n import 'package:final_projectt/core/services/user_controller.dart';\r\n import 'package:final_projectt/core/util/constants/colors.dart';\r\n import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n-import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n import 'package:final_projectt/core/widgets/custom_box.dart';\r\n-import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n import 'package:final_projectt/core/widgets/date_picker.dart';\r\n-import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n import 'package:final_projectt/core/widgets/show_alert.dart';\r\n import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n-import 'package:final_projectt/models/catego_model.dart';\r\n import 'package:final_projectt/models/mail_model.dart';\r\n import 'package:final_projectt/models/sender_model.dart';\r\n import 'package:final_projectt/models/status_model.dart';\r\n import 'package:final_projectt/models/tags_model.dart';\r\n import 'package:final_projectt/models/user_model.dart';\r\n import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n import 'package:final_projectt/providers/status_provider.dart';\r\n import 'package:flutter/material.dart';\r\n-import 'package:image_picker/image_picker.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n class EditMailBottomSheet extends StatefulWidget {\r\n   Mail mail;\r\n@@ -394,13 +388,9 @@\n                                             StateSetter setState) {\r\n                                       return TagsBottomSheet();\r\n                                     });\r\n                                   });\r\n-                          setState(() {\r\n-                            if (selectedTags != null) {\r\n-                              this.selectedTags = selectedTags;\r\n-                            }\r\n-                          });\r\n+                          \r\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n@@ -961,968 +951,4 @@\n       ),\r\n     );\r\n   }\r\n }\r\n-import 'dart:io';\r\n-\r\n-import 'package:final_projectt/Screens/home.dart';\r\n-import 'package:final_projectt/Screens/main_screen.dart';\r\n-import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n-import 'package:final_projectt/core/services/user_controller.dart';\r\n-import 'package:final_projectt/core/util/constants/colors.dart';\r\n-import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n-import 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/custom_box.dart';\r\n-import 'package:final_projectt/core/widgets/custum_textfield.dart';\r\n-import 'package:final_projectt/core/widgets/date_picker.dart';\r\n-import 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/show_alert.dart';\r\n-import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n-import 'package:final_projectt/models/catego_model.dart';\r\n-import 'package:final_projectt/models/mail_model.dart';\r\n-import 'package:final_projectt/models/sender_model.dart';\r\n-import 'package:final_projectt/models/status_model.dart';\r\n-import 'package:final_projectt/models/tags_model.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n-import 'package:final_projectt/providers/status_provider.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:image_picker/image_picker.dart';\r\n-import 'package:provider/provider.dart';\r\n-\r\n-class EditMailBottomSheet extends StatefulWidget {\r\n-  Mail mail;\r\n-  EditMailBottomSheet({super.key, required this.mail});\r\n-\r\n-  @override\r\n-  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n-}\r\n-\r\n-class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n-  TextEditingController senderNameCont = TextEditingController();\r\n-  TextEditingController senderMobileCont = TextEditingController();\r\n-  TextEditingController mailTitleCont = TextEditingController();\r\n-  TextEditingController mailDescriptionCont = TextEditingController();\r\n-  TextEditingController archiveNumberCont = TextEditingController();\r\n-  bool isExpansionOpened = false;\r\n-\r\n-  SingleSender? selectedSender;\r\n-  List<TagElement> selectedTags = [];\r\n-\r\n-  TextEditingController decisionCont = TextEditingController();\r\n-  TextEditingController activityTextFieldController = TextEditingController();\r\n-  late UserModel user;\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  late String category = 'Other';\r\n-  DateTime? date;\r\n-  bool isValidationShown = false;\r\n-  late StatusMod selectedStatus = StatusMod(\r\n-      id: 1,\r\n-      name: 'Inbox',\r\n-      color: '0xfffa3a57',\r\n-      createdAt: '',\r\n-      updatedAt: '',\r\n-      mailsCount: '');\r\n-\r\n-  getUser() async {\r\n-    user = await UserController().getLocalUser();\r\n-  }\r\n-\r\n-  void intializeData() {\r\n-    if (widget.mail.archiveDate != null) {\r\n-      date = DateTime.parse(widget.mail.archiveDate!);\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.tags != null) {\r\n-      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n-        return TagElement(\r\n-          id: tag.id!,\r\n-          name: tag.name!,\r\n-          createdAt: tag.createdAt!,\r\n-          updatedAt: tag.updatedAt!,\r\n-        );\r\n-      }).toList();\r\n-      selectedTags = tags;\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.attachments!.isNotEmpty) {\r\n-      Provider.of<NewInboxProvider>(context, listen: false)\r\n-          .setNetworkImagesList(widget.mail.attachments!);\r\n-    } else {\r\n-      debugPrint('attachments is null');\r\n-    }\r\n-\r\n-    // if (widget.mail.activities!.isNotEmpty) {\r\n-    //   List<Map<String, dynamic>>? activites =\r\n-    //       widget.mail.activities!.map((activity) {\r\n-    //     return {\r\n-    //       'body': activity.body,\r\n-    //       'user_id': activity.id,\r\n-    //     };\r\n-    //   }).toList();\r\n-    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n-    //       .setActivitesList(activites);\r\n-    // } else {\r\n-    //   debugPrint('activites is null');\r\n-    // }\r\n-    if (widget.mail.status != null) {\r\n-      final status = widget.mail.status!;\r\n-      selectedStatus = StatusMod(\r\n-        color: status.color,\r\n-        id: status.id,\r\n-        name: status.name,\r\n-      );\r\n-    } else {\r\n-      debugPrint('status is null');\r\n-    }\r\n-    // selectedTags = widget.mail.tags!;\r\n-    decisionCont.text = widget.mail.decision ?? '';\r\n-  }\r\n-\r\n-  @override\r\n-  void initState() {\r\n-    intializeData();\r\n-\r\n-    getUser();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    int year = date!.year;\r\n-    int today = date!.day;\r\n-    dynamic month = getMonth(date!);\r\n-    return Padding(\r\n-      padding:\r\n-          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n-      child: SizedBox(\r\n-        height: MediaQuery.of(context).size.height - 55,\r\n-        child: Column(\r\n-          children: [\r\n-            Padding(\r\n-              padding: const EdgeInsets.all(10.0),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  TextButton(\r\n-                    style: TextButton.styleFrom(\r\n-                        padding: EdgeInsets.zero,\r\n-                        minimumSize: const Size(50, 30),\r\n-                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n-                        alignment: Alignment.centerLeft),\r\n-                    onPressed: () => Navigator.pop(context),\r\n-                    child: Icon(\r\n-                      Icons.arrow_back_ios,\r\n-                      color: primaryColor,\r\n-                    ),\r\n-                  ),\r\n-                  const Text(\r\n-                    'Mail Details',\r\n-                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n-                  ),\r\n-                  TextButton(\r\n-                    onPressed: () async {\r\n-                      Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .imagesFiles\r\n-                              .isNotEmpty\r\n-                          ? await uploadImages(context, widget.mail.id!)\r\n-                          : null;\r\n-                      await updateMail(\r\n-                        mailId: widget.mail.id,\r\n-                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.id!;\r\n-                        }).toList(),\r\n-                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.image!;\r\n-                        }).toList(),\r\n-                        statusId: selectedStatus.id.toString(),\r\n-                        decision: decisionCont.text,\r\n-                        finalDecision: decisionCont.text,\r\n-                        activities: Provider.of<NewInboxProvider>(context,\r\n-                                listen: false)\r\n-                            .activites,\r\n-                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n-                      );\r\n-\r\n-                      showAlert(\r\n-                        context,\r\n-                        message: 'Mail Updated Successfully',\r\n-                        color: primaryColor.withOpacity(0.8),\r\n-                        width: 230,\r\n-                      );\r\n-\r\n-                      selectedTags = [];\r\n-\r\n-                      final updateData =\r\n-                          Provider.of<StatuseProvider>(context, listen: false);\r\n-                      updateData.updatestutas();\r\n-\r\n-                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n-                        builder: (context) {\r\n-                          return const MainPage();\r\n-                        },\r\n-                      ));\r\n-                    },\r\n-                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            Expanded(\r\n-              child: ListView(\r\n-                physics: const BouncingScrollPhysics(),\r\n-                children: [\r\n-                  Column(\r\n-                    mainAxisAlignment: MainAxisAlignment.center,\r\n-                    crossAxisAlignment: CrossAxisAlignment.center,\r\n-                    children: [\r\n-                      AnimatedContainer(\r\n-                        height: isExpansionOpened ? 175 : 150,\r\n-                        width: 400,\r\n-                        duration: const Duration(milliseconds: 300),\r\n-                        child: CustomWhiteBox(\r\n-                            width: 400,\r\n-                            height: 180,\r\n-                            child: Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 15.0, top: 10),\r\n-                              child: SingleChildScrollView(\r\n-                                child: Column(\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Column(\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Row(\r\n-                                              children: [\r\n-                                                const Icon(\r\n-                                                  Icons.person_2_outlined,\r\n-                                                  size: 20,\r\n-                                                ),\r\n-                                                const SizedBox(\r\n-                                                  width: 10,\r\n-                                                ),\r\n-                                                Text(\r\n-                                                  '${widget.mail.sender!.name}',\r\n-                                                  style: const TextStyle(\r\n-                                                      fontSize: 15,\r\n-                                                      fontWeight:\r\n-                                                          FontWeight.w600),\r\n-                                                ),\r\n-                                              ],\r\n-                                            ),\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10.0, start: 35),\r\n-                                              child: Text(\r\n-                                                '${widget.mail.sender!.category!.name}',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                        Container(\r\n-                                          margin:\r\n-                                              const EdgeInsetsDirectional.only(\r\n-                                                  top: 5),\r\n-                                          width: 1,\r\n-                                          height: 50,\r\n-                                          color: Colors.grey.shade300,\r\n-                                        ),\r\n-                                        Column(\r\n-                                          mainAxisAlignment:\r\n-                                              MainAxisAlignment.spaceBetween,\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10, bottom: 10),\r\n-                                              child: Text(\r\n-                                                '$today $month $year',\r\n-                                                style: const TextStyle(\r\n-                                                  fontSize: 14,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            SizedBox(\r\n-                                              width: 150,\r\n-                                              child: Text(\r\n-                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n-                                                overflow: TextOverflow.ellipsis,\r\n-                                                maxLines: 1,\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Container(\r\n-                                      margin: const EdgeInsetsDirectional.only(\r\n-                                          top: 15),\r\n-                                      width: MediaQuery.sizeOf(context).width,\r\n-                                      height: 1,\r\n-                                      color: Colors.grey.shade300,\r\n-                                    ),\r\n-                                    Theme(\r\n-                                      data: Theme.of(context).copyWith(\r\n-                                          dividerColor: Colors.transparent),\r\n-                                      child: ListTileTheme(\r\n-                                        contentPadding:\r\n-                                            const EdgeInsetsDirectional.only(\r\n-                                                start: 10),\r\n-                                        dense: true,\r\n-                                        child: ExpansionTile(\r\n-                                            onExpansionChanged: (value) {\r\n-                                              setState(() {\r\n-                                                isExpansionOpened = value;\r\n-                                              });\r\n-                                            },\r\n-                                            textColor: const Color(0xff272727),\r\n-                                            trailing: SizedBox(\r\n-                                              width: 60,\r\n-                                              child: Center(\r\n-                                                child: Icon(\r\n-                                                  !isExpansionOpened\r\n-                                                      ? Icons\r\n-                                                          .arrow_forward_ios_rounded\r\n-                                                      : Icons\r\n-                                                          .keyboard_arrow_up_rounded,\r\n-                                                  size: isExpansionOpened\r\n-                                                      ? 30\r\n-                                                      : 20,\r\n-                                                  color: !isExpansionOpened\r\n-                                                      ? Colors.grey\r\n-                                                      : primaryColor,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            initiallyExpanded: false,\r\n-                                            title: Text(\r\n-                                              widget.mail.subject!,\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  fontWeight: FontWeight.bold),\r\n-                                            ),\r\n-                                            children: [\r\n-                                              Text(\r\n-                                                widget.mail.description == ''\r\n-                                                    ? '${widget.mail.description}'\r\n-                                                    : 'No Description',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 16),\r\n-                                              )\r\n-                                            ]),\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            )),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedTags =\r\n-                              await showModalBottomSheet<List<TagElement>>(\r\n-                                  clipBehavior: Clip.hardEdge,\r\n-                                  isScrollControlled: true,\r\n-                                  context: context,\r\n-                                  shape: const RoundedRectangleBorder(\r\n-                                      borderRadius: BorderRadius.vertical(\r\n-                                    top: Radius.circular(15.0),\r\n-                                  )),\r\n-                                  builder: (BuildContext context) {\r\n-                                    return StatefulBuilder(builder:\r\n-                                        (BuildContext context,\r\n-                                            StateSetter setState) {\r\n-                                      return TagsBottomSheet();\r\n-                                    });\r\n-                                  });\r\n-                          setState(() {\r\n-                            if (selectedTags != null) {\r\n-                              this.selectedTags = selectedTags;\r\n-                            }\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child: const Padding(\r\n-                            padding: EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    Icon(\r\n-                                      Icons.tag,\r\n-                                      size: 23,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 12,\r\n-                                    ),\r\n-                                    Text(\r\n-                                      'Tags',\r\n-                                      style: TextStyle(\r\n-                                          color: Colors.black,\r\n-                                          fontFamily: 'Iphone',\r\n-                                          fontSize: 20),\r\n-                                    ),\r\n-                                  ],\r\n-                                ),\r\n-                                Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedStatus =\r\n-                              await showModalBottomSheet<StatusMod>(\r\n-                            clipBehavior: Clip.hardEdge,\r\n-                            isScrollControlled: true,\r\n-                            context: context,\r\n-                            shape: const RoundedRectangleBorder(\r\n-                              borderRadius: BorderRadius.vertical(\r\n-                                top: Radius.circular(15.0),\r\n-                              ),\r\n-                            ),\r\n-                            builder: (BuildContext context) {\r\n-                              return StatusesBottomSheet(\r\n-                                status: StatusMod(\r\n-                                  color: widget.mail.status!.color,\r\n-                                  id: this.selectedStatus,\r\n-                                  name: widget.mail.status!.name,\r\n-                                ),\r\n-                              );\r\n-                            },\r\n-                          ).then((value) {\r\n-                            setState(() {\r\n-                              this.selectedStatus = value!;\r\n-                            });\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child: Padding(\r\n-                            padding: const EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    SizedBox(\r\n-                                      width: 25,\r\n-                                      height: 25,\r\n-                                      child: Image.asset(\r\n-                                        'images/Tag.png',\r\n-                                        color: Colors.grey,\r\n-                                      ),\r\n-                                    ),\r\n-                                    const SizedBox(\r\n-                                      width: 15,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 250,\r\n-                                      height: 32,\r\n-                                      child: ListView.separated(\r\n-                                        scrollDirection: Axis.horizontal,\r\n-                                        itemBuilder: (context, index) {\r\n-                                          final statusText =\r\n-                                              selectedStatus.name;\r\n-                                          final textLength = statusText!.length;\r\n-                                          final statusWidth =\r\n-                                              40.0 + (textLength * 7.0);\r\n-                                          return Container(\r\n-                                            alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n-                                            decoration: BoxDecoration(\r\n-                                              color: Color(int.parse(\r\n-                                                  selectedStatus.color!)),\r\n-                                              borderRadius:\r\n-                                                  BorderRadius.circular(30),\r\n-                                            ),\r\n-                                            child: Text(\r\n-                                              '${selectedStatus.name}',\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  color: Colors.white),\r\n-                                            ),\r\n-                                          );\r\n-                                        },\r\n-                                        itemCount: 1,\r\n-                                        separatorBuilder: (context, index) {\r\n-                                          return const SizedBox(\r\n-                                            width: 10,\r\n-                                          );\r\n-                                        },\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                                const Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      CustomWhiteBox(\r\n-                        width: 378,\r\n-                        height: 110,\r\n-                        child: Column(\r\n-                          crossAxisAlignment: CrossAxisAlignment.start,\r\n-                          children: [\r\n-                            const Padding(\r\n-                              padding: EdgeInsetsDirectional.only(\r\n-                                start: 25.0,\r\n-                                end: 20.0,\r\n-                                top: 20.0,\r\n-                              ),\r\n-                              child: Text(\r\n-                                'Descision',\r\n-                                style: TextStyle(\r\n-                                  fontSize: 20,\r\n-                                  color: Colors.black,\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                            Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 10.0, end: 10.0),\r\n-                              child: TextFormField(\r\n-                                onChanged: (value) {\r\n-                                  Provider.of<NewInboxProvider>(context,\r\n-                                          listen: false)\r\n-                                      .setArchiveNumber(value);\r\n-                                },\r\n-                                controller: decisionCont,\r\n-                                decoration: const InputDecoration(\r\n-                                  contentPadding: EdgeInsets.symmetric(\r\n-                                      vertical: 20, horizontal: 40),\r\n-                                  border: InputBorder.none,\r\n-                                  hintText: \"Add Decsision ...\",\r\n-                                  hintStyle: TextStyle(\r\n-                                    color: Colors.grey,\r\n-                                    fontFamily: 'Iphone',\r\n-                                    fontSize: 19,\r\n-                                    fontWeight: FontWeight.w500,\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ],\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () {\r\n-                          Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .getImagesFromGallery();\r\n-                        },\r\n-                        child: AnimatedContainer(\r\n-                          height: Provider.of<NewInboxProvider>(context)\r\n-                                      .networkImagesFiles\r\n-                                      .isNotEmpty ||\r\n-                                  Provider.of<NewInboxProvider>(context)\r\n-                                      .imagesFiles\r\n-                                      .isNotEmpty\r\n-                              ? 95 +\r\n-                                  (((Provider.of<NewInboxProvider>(context)\r\n-                                              .networkImagesFiles\r\n-                                              .length) +\r\n-                                          (Provider.of<NewInboxProvider>(\r\n-                                                  context)\r\n-                                              .imagesFiles\r\n-                                              .length)) *\r\n-                                      57)\r\n-                              : 75.0,\r\n-                          duration: const Duration(milliseconds: 300),\r\n-                          child: CustomWhiteBox(\r\n-                            width: 378,\r\n-                            height: 120,\r\n-                            child: SingleChildScrollView(\r\n-                              physics: const NeverScrollableScrollPhysics(),\r\n-                              child: Padding(\r\n-                                padding: const EdgeInsetsDirectional.only(\r\n-                                  top: 20,\r\n-                                  start: 20.0,\r\n-                                  end: 20.0,\r\n-                                ),\r\n-                                child: Column(\r\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Row(\r\n-                                          children: [\r\n-                                            const Icon(\r\n-                                              Icons.image,\r\n-                                              color: Colors.blueGrey,\r\n-                                              size: 23,\r\n-                                            ),\r\n-                                            const SizedBox(\r\n-                                              width: 12,\r\n-                                            ),\r\n-                                            Text(\r\n-                                              'Add image',\r\n-                                              style: TextStyle(\r\n-                                                  color: primaryColor,\r\n-                                                  fontFamily: 'Iphone',\r\n-                                                  fontSize: 20),\r\n-                                            ),\r\n-                                          ],\r\n-                                        ),\r\n-                                        const Icon(\r\n-                                          Icons.arrow_forward_ios_rounded,\r\n-                                          color: Colors.grey,\r\n-                                          size: 22,\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .networkImagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 20 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .networkImagesFiles\r\n-                                                        .length) *\r\n-                                                    55),\r\n-                                            child: ListView.builder(\r\n-                                              shrinkWrap: true,\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              physics:\r\n-                                                  const NeverScrollableScrollPhysics(),\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .networkImagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius:\r\n-                                                                          BorderRadius.circular(\r\n-                                                                              30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit\r\n-                                                                              .cover,\r\n-                                                                          image:\r\n-                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            final provider =\r\n-                                                                Provider.of<\r\n-                                                                        NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false);\r\n-                                                            provider\r\n-                                                                .deletedImages\r\n-                                                                .add(provider\r\n-                                                                        .networkImagesFiles[\r\n-                                                                    index]!);\r\n-                                                            print(provider\r\n-                                                                .deletedImages);\r\n-                                                            provider\r\n-                                                                .networkImagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration: BoxDecoration(\r\n-                                                            border: Border.all(\r\n-                                                                color: Colors\r\n-                                                                    .black),\r\n-                                                            borderRadius:\r\n-                                                                BorderRadius\r\n-                                                                    .circular(\r\n-                                                                        11),\r\n-                                                            image: DecorationImage(\r\n-                                                                fit: BoxFit\r\n-                                                                    .cover,\r\n-                                                                image: NetworkImage(\r\n-                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .imagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 55 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .imagesFiles\r\n-                                                        .length) *\r\n-                                                    57),\r\n-                                            child: ListView.builder(\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              shrinkWrap: true,\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .imagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius: BorderRadius.circular(30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit.cover,\r\n-                                                                          image: FileImage(\r\n-                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n-                                                                          ))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            Provider.of<NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false)\r\n-                                                                .imagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration:\r\n-                                                            BoxDecoration(\r\n-                                                                border: Border.all(\r\n-                                                                    color: Colors\r\n-                                                                        .black),\r\n-                                                                borderRadius:\r\n-                                                                    BorderRadius\r\n-                                                                        .circular(\r\n-                                                                            11),\r\n-                                                                image:\r\n-                                                                    DecorationImage(\r\n-                                                                        fit: BoxFit\r\n-                                                                            .cover,\r\n-                                                                        image:\r\n-                                                                            FileImage(\r\n-                                                                          File(Provider.of<NewInboxProvider>(context)\r\n-                                                                              .imagesFiles[index]!\r\n-                                                                              .path),\r\n-                                                                        ))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          Provider.of<NewInboxProvider>(\r\n-                                                                  context)\r\n-                                                              .imagesFiles[\r\n-                                                                  index]!\r\n-                                                              .name,\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      const ActivitesExpansionTile(),\r\n-                      Padding(\r\n-                        padding: const EdgeInsetsDirectional.only(\r\n-                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n-                        child: TextField(\r\n-                          controller: activityTextFieldController,\r\n-                          decoration: InputDecoration(\r\n-                            suffixIcon: IconButton(\r\n-                                onPressed: () {\r\n-                                  setState(() {\r\n-                                    Provider.of<NewInboxProvider>(context,\r\n-                                            listen: false)\r\n-                                        .addActivity(\r\n-                                            activityTextFieldController.text,\r\n-                                            user.user.id.toString());\r\n-                                    activityTextFieldController.clear();\r\n-                                  });\r\n-                                },\r\n-                                icon: Icon(\r\n-                                  Icons.send,\r\n-                                  color: primaryColor,\r\n-                                )),\r\n-                            //should be replaced with profie image\r\n-                            prefixIcon: const Icon(Icons.person),\r\n-                            filled: true,\r\n-                            fillColor: Colors.black.withOpacity(0.05),\r\n-                            contentPadding: const EdgeInsets.all(15),\r\n-                            hintText: \"Add new activity ...\",\r\n-                            hintStyle: const TextStyle(\r\n-                                color: Colors.grey, fontSize: 17),\r\n-                            enabledBorder: UnderlineInputBorder(\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                            ),\r\n-                            focusedBorder: UnderlineInputBorder(\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  )\r\n-                ],\r\n-              ),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1694851083108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -387,8 +387,10 @@\n                                         (BuildContext context,\r\n                                             StateSetter setState) {\r\n                                       return TagsBottomSheet();\r\n                                     });\r\n+                                  }).then((value) {\r\n+                                    \r\n                                   });\r\n                           \r\n                         },\r\n                         child: CustomWhiteBox(\r\n"
                },
                {
                    "date": 1694851089414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,9 +388,13 @@\n                                             StateSetter setState) {\r\n                                       return TagsBottomSheet();\r\n                                     });\r\n                                   }).then((value) {\r\n-                                    \r\n+                                    setState(() {\r\n+                           \r\n+                              this.selectedTags = selectedTags;\r\n+                             \r\n+                          });\r\n                                   });\r\n                           \r\n                         },\r\n                         child: CustomWhiteBox(\r\n"
                },
                {
                    "date": 1694851102427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -390,9 +390,9 @@\n                                     });\r\n                                   }).then((value) {\r\n                                     setState(() {\r\n                            \r\n-                              this.selectedTags = selectedTags;\r\n+                              this.selectedTags = value!;\r\n                              \r\n                           });\r\n                                   });\r\n                           \r\n"
                },
                {
                    "date": 1694851175948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,15 +413,9 @@\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                    Text(\r\n-                                      'Tags',\r\n-                                      style: TextStyle(\r\n-                                          color: Colors.black,\r\n-                                          fontFamily: 'Iphone',\r\n-                                          fontSize: 20),\r\n-                                    ),\r\n+                                   \r\n                                   ],\r\n                                 ),\r\n                                 Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n"
                },
                {
                    "date": 1694851188229,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -388,15 +388,12 @@\n                                             StateSetter setState) {\r\n                                       return TagsBottomSheet();\r\n                                     });\r\n                                   }).then((value) {\r\n-                                    setState(() {\r\n-                           \r\n+                            setState(() {\r\n                               this.selectedTags = value!;\r\n-                             \r\n+                            });\r\n                           });\r\n-                                  });\r\n-                          \r\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n@@ -416,9 +413,9 @@\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                   \r\n+                                    \r\n                                   ],\r\n                                 ),\r\n                                 Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n"
                },
                {
                    "date": 1694851200769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,11 +413,48 @@\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                    \r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n                                   ],\r\n                                 ),\r\n+                                  ],\r\n+                                ),\r\n                                 Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n                                   color: Colors.grey,\r\n                                   size: 22,\r\n"
                },
                {
                    "date": 1694851210734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -396,9 +396,9 @@\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n-                          child: const Padding(\r\n+                          child:   Padding(\r\n                             padding: EdgeInsetsDirectional.only(\r\n                               start: 20.0,\r\n                               end: 20.0,\r\n                             ),\r\n"
                },
                {
                    "date": 1694851216665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,48 +413,11 @@\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                    SizedBox(\r\n-                                      width: 250,\r\n-                                      height: 32,\r\n-                                      child: ListView.separated(\r\n-                                        scrollDirection: Axis.horizontal,\r\n-                                        itemBuilder: (context, index) {\r\n-                                          final statusText =\r\n-                                              selectedStatus.name;\r\n-                                          final textLength = statusText!.length;\r\n-                                          final statusWidth =\r\n-                                              40.0 + (textLength * 7.0);\r\n-                                          return Container(\r\n-                                            alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n-                                            decoration: BoxDecoration(\r\n-                                              color: Color(int.parse(\r\n-                                                  selectedStatus.color!)),\r\n-                                              borderRadius:\r\n-                                                  BorderRadius.circular(30),\r\n-                                            ),\r\n-                                            child: Text(\r\n-                                              '${selectedStatus.name}',\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  color: Colors.white),\r\n-                                            ),\r\n-                                          );\r\n-                                        },\r\n-                                        itemCount: 1,\r\n-                                        separatorBuilder: (context, index) {\r\n-                                          return const SizedBox(\r\n-                                            width: 10,\r\n-                                          );\r\n-                                        },\r\n-                                      ),\r\n-                                    )\r\n+                                    \r\n                                   ],\r\n                                 ),\r\n-                                  ],\r\n-                                ),\r\n                                 Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n                                   color: Colors.grey,\r\n                                   size: 22,\r\n"
                },
                {
                    "date": 1694851243253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -396,9 +396,9 @@\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n-                          child:   Padding(\r\n+                          child: const Padding(\r\n                             padding: EdgeInsetsDirectional.only(\r\n                               start: 20.0,\r\n                               end: 20.0,\r\n                             ),\r\n@@ -413,9 +413,44 @@\n                                     ),\r\n                                     SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                    \r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n                                   ],\r\n                                 ),\r\n                                 Icon(\r\n                                   Icons.arrow_forward_ios_rounded,\r\n"
                },
                {
                    "date": 1694851248837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -396,9 +396,9 @@\n                         },\r\n                         child: CustomWhiteBox(\r\n                           width: 378,\r\n                           height: 56,\r\n-                          child: const Padding(\r\n+                          child:   Padding(\r\n                             padding: EdgeInsetsDirectional.only(\r\n                               start: 20.0,\r\n                               end: 20.0,\r\n                             ),\r\n"
                },
                {
                    "date": 1694851259820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -419,9 +419,9 @@\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n-                                          final statusText =\r\n+                                          final tagText =\r\n                                               selectedStatus.name;\r\n                                           final textLength = statusText!.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n"
                },
                {
                    "date": 1694851265955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,9 +420,9 @@\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n-                                              selectedStatus.name;\r\n+                                              selectedTag.name;\r\n                                           final textLength = statusText!.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n"
                },
                {
                    "date": 1694851272571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -420,9 +420,9 @@\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n-                                              selectedTag.name;\r\n+                                              selectedTags[index].name;\r\n                                           final textLength = statusText!.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n"
                },
                {
                    "date": 1694851282143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n-                                          final textLength = statusText!.length;\r\n+                                          final textLength = selectedTags[index]!.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851288736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n-                                          final textLength = selectedTags[index]!.length;\r\n+                                          final textLength = selectedTags[index]!..;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851295253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n-                                          final textLength = selectedTags[index]!..;\r\n+                                          final textLength = selectedTags[index]!.name.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851308321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n                                         scrollDirection: Axis.horizontal,\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n-                                          final textLength = selectedTags[index]!.name.length;\r\n+                                          final textLength = selectedTags[index].name.length;\r\n                                           final statusWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851322891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -434,9 +434,9 @@\n                                               borderRadius:\r\n                                                   BorderRadius.circular(30),\r\n                                             ),\r\n                                             child: Text(\r\n-                                              '${selectedStatus.name}',\r\n+                                              '${selectedTags[index].name}',\r\n                                               style: const TextStyle(\r\n                                                   fontSize: 18,\r\n                                                   color: Colors.white),\r\n                                             ),\r\n"
                },
                {
                    "date": 1694851337028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,987 @@\n+import 'dart:io';\r\n+\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n+import 'package:final_projectt/core/services/user_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n+import 'package:final_projectt/core/widgets/custom_box.dart';\r\n+import 'package:final_projectt/core/widgets/date_picker.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n+import 'package:final_projectt/models/mail_model.dart';\r\n+import 'package:final_projectt/models/sender_model.dart';\r\n+import 'package:final_projectt/models/status_model.dart';\r\n+import 'package:final_projectt/models/tags_model.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:provider/provider.dart';\r\n+\r\n+class EditMailBottomSheet extends StatefulWidget {\r\n+  Mail mail;\r\n+  EditMailBottomSheet({super.key, required this.mail});\r\n+\r\n+  @override\r\n+  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n+}\r\n+\r\n+class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n+  TextEditingController senderNameCont = TextEditingController();\r\n+  TextEditingController senderMobileCont = TextEditingController();\r\n+  TextEditingController mailTitleCont = TextEditingController();\r\n+  TextEditingController mailDescriptionCont = TextEditingController();\r\n+  TextEditingController archiveNumberCont = TextEditingController();\r\n+  bool isExpansionOpened = false;\r\n+\r\n+  SingleSender? selectedSender;\r\n+  List<TagElement> selectedTags = [];\r\n+\r\n+  TextEditingController decisionCont = TextEditingController();\r\n+  TextEditingController activityTextFieldController = TextEditingController();\r\n+  late UserModel user;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  late String category = 'Other';\r\n+  DateTime? date;\r\n+  bool isValidationShown = false;\r\n+  late StatusMod selectedStatus = StatusMod(\r\n+      id: 1,\r\n+      name: 'Inbox',\r\n+      color: '0xfffa3a57',\r\n+      createdAt: '',\r\n+      updatedAt: '',\r\n+      mailsCount: '');\r\n+\r\n+  getUser() async {\r\n+    user = await UserController().getLocalUser();\r\n+  }\r\n+\r\n+  void intializeData() {\r\n+    if (widget.mail.archiveDate != null) {\r\n+      date = DateTime.parse(widget.mail.archiveDate!);\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.tags != null) {\r\n+      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n+        return TagElement(\r\n+          id: tag.id!,\r\n+          name: tag.name!,\r\n+          createdAt: tag.createdAt!,\r\n+          updatedAt: tag.updatedAt!,\r\n+        );\r\n+      }).toList();\r\n+      selectedTags = tags;\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.attachments!.isNotEmpty) {\r\n+      Provider.of<NewInboxProvider>(context, listen: false)\r\n+          .setNetworkImagesList(widget.mail.attachments!);\r\n+    } else {\r\n+      debugPrint('attachments is null');\r\n+    }\r\n+\r\n+    // if (widget.mail.activities!.isNotEmpty) {\r\n+    //   List<Map<String, dynamic>>? activites =\r\n+    //       widget.mail.activities!.map((activity) {\r\n+    //     return {\r\n+    //       'body': activity.body,\r\n+    //       'user_id': activity.id,\r\n+    //     };\r\n+    //   }).toList();\r\n+    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n+    //       .setActivitesList(activites);\r\n+    // } else {\r\n+    //   debugPrint('activites is null');\r\n+    // }\r\n+    if (widget.mail.status != null) {\r\n+      final status = widget.mail.status!;\r\n+      selectedStatus = StatusMod(\r\n+        color: status.color,\r\n+        id: status.id,\r\n+        name: status.name,\r\n+      );\r\n+    } else {\r\n+      debugPrint('status is null');\r\n+    }\r\n+    // selectedTags = widget.mail.tags!;\r\n+    decisionCont.text = widget.mail.decision ?? '';\r\n+  }\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    intializeData();\r\n+\r\n+    getUser();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    int year = date!.year;\r\n+    int today = date!.day;\r\n+    dynamic month = getMonth(date!);\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: SizedBox(\r\n+        height: MediaQuery.of(context).size.height - 55,\r\n+        child: Column(\r\n+          children: [\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(10.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: [\r\n+                  TextButton(\r\n+                    style: TextButton.styleFrom(\r\n+                        padding: EdgeInsets.zero,\r\n+                        minimumSize: const Size(50, 30),\r\n+                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n+                        alignment: Alignment.centerLeft),\r\n+                    onPressed: () => Navigator.pop(context),\r\n+                    child: Icon(\r\n+                      Icons.arrow_back_ios,\r\n+                      color: primaryColor,\r\n+                    ),\r\n+                  ),\r\n+                  const Text(\r\n+                    'Mail Details',\r\n+                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n+                  ),\r\n+                  TextButton(\r\n+                    onPressed: () async {\r\n+                      Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .imagesFiles\r\n+                              .isNotEmpty\r\n+                          ? await uploadImages(context, widget.mail.id!)\r\n+                          : null;\r\n+                      await updateMail(\r\n+                        mailId: widget.mail.id,\r\n+                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.id!;\r\n+                        }).toList(),\r\n+                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.image!;\r\n+                        }).toList(),\r\n+                        statusId: selectedStatus.id.toString(),\r\n+                        decision: decisionCont.text,\r\n+                        finalDecision: decisionCont.text,\r\n+                        activities: Provider.of<NewInboxProvider>(context,\r\n+                                listen: false)\r\n+                            .activites,\r\n+                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n+                      );\r\n+\r\n+                      showAlert(\r\n+                        context,\r\n+                        message: 'Mail Updated Successfully',\r\n+                        color: primaryColor.withOpacity(0.8),\r\n+                        width: 230,\r\n+                      );\r\n+\r\n+                      selectedTags = [];\r\n+\r\n+                      final updateData =\r\n+                          Provider.of<StatuseProvider>(context, listen: false);\r\n+                      updateData.updatestutas();\r\n+\r\n+                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n+                        builder: (context) {\r\n+                          return const MainPage();\r\n+                        },\r\n+                      ));\r\n+                    },\r\n+                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Expanded(\r\n+              child: ListView(\r\n+                physics: const BouncingScrollPhysics(),\r\n+                children: [\r\n+                  Column(\r\n+                    mainAxisAlignment: MainAxisAlignment.center,\r\n+                    crossAxisAlignment: CrossAxisAlignment.center,\r\n+                    children: [\r\n+                      AnimatedContainer(\r\n+                        height: isExpansionOpened ? 175 : 150,\r\n+                        width: 400,\r\n+                        duration: const Duration(milliseconds: 300),\r\n+                        child: CustomWhiteBox(\r\n+                            width: 400,\r\n+                            height: 180,\r\n+                            child: Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 15.0, top: 10),\r\n+                              child: SingleChildScrollView(\r\n+                                child: Column(\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Column(\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Row(\r\n+                                              children: [\r\n+                                                const Icon(\r\n+                                                  Icons.person_2_outlined,\r\n+                                                  size: 20,\r\n+                                                ),\r\n+                                                const SizedBox(\r\n+                                                  width: 10,\r\n+                                                ),\r\n+                                                Text(\r\n+                                                  '${widget.mail.sender!.name}',\r\n+                                                  style: const TextStyle(\r\n+                                                      fontSize: 15,\r\n+                                                      fontWeight:\r\n+                                                          FontWeight.w600),\r\n+                                                ),\r\n+                                              ],\r\n+                                            ),\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10.0, start: 35),\r\n+                                              child: Text(\r\n+                                                '${widget.mail.sender!.category!.name}',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                        Container(\r\n+                                          margin:\r\n+                                              const EdgeInsetsDirectional.only(\r\n+                                                  top: 5),\r\n+                                          width: 1,\r\n+                                          height: 50,\r\n+                                          color: Colors.grey.shade300,\r\n+                                        ),\r\n+                                        Column(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.spaceBetween,\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10, bottom: 10),\r\n+                                              child: Text(\r\n+                                                '$today $month $year',\r\n+                                                style: const TextStyle(\r\n+                                                  fontSize: 14,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(\r\n+                                              width: 150,\r\n+                                              child: Text(\r\n+                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n+                                                overflow: TextOverflow.ellipsis,\r\n+                                                maxLines: 1,\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Container(\r\n+                                      margin: const EdgeInsetsDirectional.only(\r\n+                                          top: 15),\r\n+                                      width: MediaQuery.sizeOf(context).width,\r\n+                                      height: 1,\r\n+                                      color: Colors.grey.shade300,\r\n+                                    ),\r\n+                                    Theme(\r\n+                                      data: Theme.of(context).copyWith(\r\n+                                          dividerColor: Colors.transparent),\r\n+                                      child: ListTileTheme(\r\n+                                        contentPadding:\r\n+                                            const EdgeInsetsDirectional.only(\r\n+                                                start: 10),\r\n+                                        dense: true,\r\n+                                        child: ExpansionTile(\r\n+                                            onExpansionChanged: (value) {\r\n+                                              setState(() {\r\n+                                                isExpansionOpened = value;\r\n+                                              });\r\n+                                            },\r\n+                                            textColor: const Color(0xff272727),\r\n+                                            trailing: SizedBox(\r\n+                                              width: 60,\r\n+                                              child: Center(\r\n+                                                child: Icon(\r\n+                                                  !isExpansionOpened\r\n+                                                      ? Icons\r\n+                                                          .arrow_forward_ios_rounded\r\n+                                                      : Icons\r\n+                                                          .keyboard_arrow_up_rounded,\r\n+                                                  size: isExpansionOpened\r\n+                                                      ? 30\r\n+                                                      : 20,\r\n+                                                  color: !isExpansionOpened\r\n+                                                      ? Colors.grey\r\n+                                                      : primaryColor,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            initiallyExpanded: false,\r\n+                                            title: Text(\r\n+                                              widget.mail.subject!,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  fontWeight: FontWeight.bold),\r\n+                                            ),\r\n+                                            children: [\r\n+                                              Text(\r\n+                                                widget.mail.description == ''\r\n+                                                    ? '${widget.mail.description}'\r\n+                                                    : 'No Description',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 16),\r\n+                                              )\r\n+                                            ]),\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            )),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedTags =\r\n+                              await showModalBottomSheet<List<TagElement>>(\r\n+                                  clipBehavior: Clip.hardEdge,\r\n+                                  isScrollControlled: true,\r\n+                                  context: context,\r\n+                                  shape: const RoundedRectangleBorder(\r\n+                                      borderRadius: BorderRadius.vertical(\r\n+                                    top: Radius.circular(15.0),\r\n+                                  )),\r\n+                                  builder: (BuildContext context) {\r\n+                                    return StatefulBuilder(builder:\r\n+                                        (BuildContext context,\r\n+                                            StateSetter setState) {\r\n+                                      return TagsBottomSheet();\r\n+                                    });\r\n+                                  }).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedTags = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    const Icon(\r\n+                                      Icons.tag,\r\n+                                      size: 23,\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 12,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final tagText =\r\n+                                              selectedTags[index].name;\r\n+                                          final textLength =\r\n+                                              selectedTags[index].name.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              tagText,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedStatus =\r\n+                              await showModalBottomSheet<StatusMod>(\r\n+                            clipBehavior: Clip.hardEdge,\r\n+                            isScrollControlled: true,\r\n+                            context: context,\r\n+                            shape: const RoundedRectangleBorder(\r\n+                              borderRadius: BorderRadius.vertical(\r\n+                                top: Radius.circular(15.0),\r\n+                              ),\r\n+                            ),\r\n+                            builder: (BuildContext context) {\r\n+                              return StatusesBottomSheet(\r\n+                                status: StatusMod(\r\n+                                  color: widget.mail.status!.color,\r\n+                                  id: this.selectedStatus.id,\r\n+                                  name: widget.mail.status!.name,\r\n+                                ),\r\n+                              );\r\n+                            },\r\n+                          ).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedStatus = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    SizedBox(\r\n+                                      width: 25,\r\n+                                      height: 25,\r\n+                                      child: Image.asset(\r\n+                                        'images/Tag.png',\r\n+                                        color: Colors.grey,\r\n+                                      ),\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 15,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      CustomWhiteBox(\r\n+                        width: 378,\r\n+                        height: 110,\r\n+                        child: Column(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            const Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 25.0,\r\n+                                end: 20.0,\r\n+                                top: 20.0,\r\n+                              ),\r\n+                              child: Text(\r\n+                                'Descision',\r\n+                                style: TextStyle(\r\n+                                  fontSize: 20,\r\n+                                  color: Colors.black,\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                            Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 10.0, end: 10.0),\r\n+                              child: TextFormField(\r\n+                                onChanged: (value) {\r\n+                                  Provider.of<NewInboxProvider>(context,\r\n+                                          listen: false)\r\n+                                      .setArchiveNumber(value);\r\n+                                },\r\n+                                controller: decisionCont,\r\n+                                decoration: const InputDecoration(\r\n+                                  contentPadding: EdgeInsets.symmetric(\r\n+                                      vertical: 20, horizontal: 40),\r\n+                                  border: InputBorder.none,\r\n+                                  hintText: \"Add Decsision ...\",\r\n+                                  hintStyle: TextStyle(\r\n+                                    color: Colors.grey,\r\n+                                    fontFamily: 'Iphone',\r\n+                                    fontSize: 19,\r\n+                                    fontWeight: FontWeight.w500,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ],\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () {\r\n+                          Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .getImagesFromGallery();\r\n+                        },\r\n+                        child: AnimatedContainer(\r\n+                          height: Provider.of<NewInboxProvider>(context)\r\n+                                      .networkImagesFiles\r\n+                                      .isNotEmpty ||\r\n+                                  Provider.of<NewInboxProvider>(context)\r\n+                                      .imagesFiles\r\n+                                      .isNotEmpty\r\n+                              ? 95 +\r\n+                                  (((Provider.of<NewInboxProvider>(context)\r\n+                                              .networkImagesFiles\r\n+                                              .length) +\r\n+                                          (Provider.of<NewInboxProvider>(\r\n+                                                  context)\r\n+                                              .imagesFiles\r\n+                                              .length)) *\r\n+                                      57)\r\n+                              : 75.0,\r\n+                          duration: const Duration(milliseconds: 300),\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 120,\r\n+                            child: SingleChildScrollView(\r\n+                              physics: const NeverScrollableScrollPhysics(),\r\n+                              child: Padding(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n+                                  top: 20,\r\n+                                  start: 20.0,\r\n+                                  end: 20.0,\r\n+                                ),\r\n+                                child: Column(\r\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Row(\r\n+                                          children: [\r\n+                                            const Icon(\r\n+                                              Icons.image,\r\n+                                              color: Colors.blueGrey,\r\n+                                              size: 23,\r\n+                                            ),\r\n+                                            const SizedBox(\r\n+                                              width: 12,\r\n+                                            ),\r\n+                                            Text(\r\n+                                              'Add image',\r\n+                                              style: TextStyle(\r\n+                                                  color: primaryColor,\r\n+                                                  fontFamily: 'Iphone',\r\n+                                                  fontSize: 20),\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                        const Icon(\r\n+                                          Icons.arrow_forward_ios_rounded,\r\n+                                          color: Colors.grey,\r\n+                                          size: 22,\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .networkImagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 20 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .networkImagesFiles\r\n+                                                        .length) *\r\n+                                                    55),\r\n+                                            child: ListView.builder(\r\n+                                              shrinkWrap: true,\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              physics:\r\n+                                                  const NeverScrollableScrollPhysics(),\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .networkImagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius:\r\n+                                                                          BorderRadius.circular(\r\n+                                                                              30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit\r\n+                                                                              .cover,\r\n+                                                                          image:\r\n+                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            final provider =\r\n+                                                                Provider.of<\r\n+                                                                        NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false);\r\n+                                                            provider\r\n+                                                                .deletedImages\r\n+                                                                .add(provider\r\n+                                                                        .networkImagesFiles[\r\n+                                                                    index]!);\r\n+                                                            print(provider\r\n+                                                                .deletedImages);\r\n+                                                            provider\r\n+                                                                .networkImagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration: BoxDecoration(\r\n+                                                            border: Border.all(\r\n+                                                                color: Colors\r\n+                                                                    .black),\r\n+                                                            borderRadius:\r\n+                                                                BorderRadius\r\n+                                                                    .circular(\r\n+                                                                        11),\r\n+                                                            image: DecorationImage(\r\n+                                                                fit: BoxFit\r\n+                                                                    .cover,\r\n+                                                                image: NetworkImage(\r\n+                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .imagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 55 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .imagesFiles\r\n+                                                        .length) *\r\n+                                                    57),\r\n+                                            child: ListView.builder(\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              shrinkWrap: true,\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .imagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius: BorderRadius.circular(30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit.cover,\r\n+                                                                          image: FileImage(\r\n+                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n+                                                                          ))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            Provider.of<NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false)\r\n+                                                                .imagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration:\r\n+                                                            BoxDecoration(\r\n+                                                                border: Border.all(\r\n+                                                                    color: Colors\r\n+                                                                        .black),\r\n+                                                                borderRadius:\r\n+                                                                    BorderRadius\r\n+                                                                        .circular(\r\n+                                                                            11),\r\n+                                                                image:\r\n+                                                                    DecorationImage(\r\n+                                                                        fit: BoxFit\r\n+                                                                            .cover,\r\n+                                                                        image:\r\n+                                                                            FileImage(\r\n+                                                                          File(Provider.of<NewInboxProvider>(context)\r\n+                                                                              .imagesFiles[index]!\r\n+                                                                              .path),\r\n+                                                                        ))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles[\r\n+                                                                  index]!\r\n+                                                              .name,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      const ActivitesExpansionTile(),\r\n+                      Padding(\r\n+                        padding: const EdgeInsetsDirectional.only(\r\n+                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n+                        child: TextField(\r\n+                          controller: activityTextFieldController,\r\n+                          decoration: InputDecoration(\r\n+                            suffixIcon: IconButton(\r\n+                                onPressed: () {\r\n+                                  setState(() {\r\n+                                    Provider.of<NewInboxProvider>(context,\r\n+                                            listen: false)\r\n+                                        .addActivity(\r\n+                                            activityTextFieldController.text,\r\n+                                            user.user.id.toString());\r\n+                                    activityTextFieldController.clear();\r\n+                                  });\r\n+                                },\r\n+                                icon: Icon(\r\n+                                  Icons.send,\r\n+                                  color: primaryColor,\r\n+                                )),\r\n+                            //should be replaced with profie image\r\n+                            prefixIcon: const Icon(Icons.person),\r\n+                            filled: true,\r\n+                            fillColor: Colors.black.withOpacity(0.05),\r\n+                            contentPadding: const EdgeInsets.all(15),\r\n+                            hintText: \"Add new activity ...\",\r\n+                            hintStyle: const TextStyle(\r\n+                                color: Colors.grey, fontSize: 17),\r\n+                            enabledBorder: UnderlineInputBorder(\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                            ),\r\n+                            focusedBorder: UnderlineInputBorder(\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  )\r\n+                ],\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694851348447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -423,9 +423,9 @@\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n                                           final textLength =\r\n                                               selectedTags[index].name.length;\r\n-                                          final statusWidth =\r\n+                                          final tagWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n                                             width: statusWidth,\r\n"
                },
                {
                    "date": 1694851354700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -427,9 +427,9 @@\n                                           final tagWidth =\r\n                                               40.0 + (textLength * 7.0);\r\n                                           return Container(\r\n                                             alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n+                                            width: tagWidth,\r\n                                             decoration: BoxDecoration(\r\n                                               color: Color(int.parse(\r\n                                                   selectedStatus.color!)),\r\n                                               borderRadius:\r\n@@ -984,990 +984,4 @@\n       ),\r\n     );\r\n   }\r\n }\r\n-import 'dart:io';\r\n-\r\n-import 'package:final_projectt/Screens/main_screen.dart';\r\n-import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n-import 'package:final_projectt/core/services/user_controller.dart';\r\n-import 'package:final_projectt/core/util/constants/colors.dart';\r\n-import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n-import 'package:final_projectt/core/widgets/custom_box.dart';\r\n-import 'package:final_projectt/core/widgets/date_picker.dart';\r\n-import 'package:final_projectt/core/widgets/show_alert.dart';\r\n-import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n-import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n-import 'package:final_projectt/models/mail_model.dart';\r\n-import 'package:final_projectt/models/sender_model.dart';\r\n-import 'package:final_projectt/models/status_model.dart';\r\n-import 'package:final_projectt/models/tags_model.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n-import 'package:final_projectt/providers/status_provider.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:provider/provider.dart';\r\n-\r\n-class EditMailBottomSheet extends StatefulWidget {\r\n-  Mail mail;\r\n-  EditMailBottomSheet({super.key, required this.mail});\r\n-\r\n-  @override\r\n-  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n-}\r\n-\r\n-class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n-  TextEditingController senderNameCont = TextEditingController();\r\n-  TextEditingController senderMobileCont = TextEditingController();\r\n-  TextEditingController mailTitleCont = TextEditingController();\r\n-  TextEditingController mailDescriptionCont = TextEditingController();\r\n-  TextEditingController archiveNumberCont = TextEditingController();\r\n-  bool isExpansionOpened = false;\r\n-\r\n-  SingleSender? selectedSender;\r\n-  List<TagElement> selectedTags = [];\r\n-\r\n-  TextEditingController decisionCont = TextEditingController();\r\n-  TextEditingController activityTextFieldController = TextEditingController();\r\n-  late UserModel user;\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  late String category = 'Other';\r\n-  DateTime? date;\r\n-  bool isValidationShown = false;\r\n-  late StatusMod selectedStatus = StatusMod(\r\n-      id: 1,\r\n-      name: 'Inbox',\r\n-      color: '0xfffa3a57',\r\n-      createdAt: '',\r\n-      updatedAt: '',\r\n-      mailsCount: '');\r\n-\r\n-  getUser() async {\r\n-    user = await UserController().getLocalUser();\r\n-  }\r\n-\r\n-  void intializeData() {\r\n-    if (widget.mail.archiveDate != null) {\r\n-      date = DateTime.parse(widget.mail.archiveDate!);\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.tags != null) {\r\n-      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n-        return TagElement(\r\n-          id: tag.id!,\r\n-          name: tag.name!,\r\n-          createdAt: tag.createdAt!,\r\n-          updatedAt: tag.updatedAt!,\r\n-        );\r\n-      }).toList();\r\n-      selectedTags = tags;\r\n-    } else {\r\n-      debugPrint('archive date is null');\r\n-    }\r\n-    if (widget.mail.attachments!.isNotEmpty) {\r\n-      Provider.of<NewInboxProvider>(context, listen: false)\r\n-          .setNetworkImagesList(widget.mail.attachments!);\r\n-    } else {\r\n-      debugPrint('attachments is null');\r\n-    }\r\n-\r\n-    // if (widget.mail.activities!.isNotEmpty) {\r\n-    //   List<Map<String, dynamic>>? activites =\r\n-    //       widget.mail.activities!.map((activity) {\r\n-    //     return {\r\n-    //       'body': activity.body,\r\n-    //       'user_id': activity.id,\r\n-    //     };\r\n-    //   }).toList();\r\n-    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n-    //       .setActivitesList(activites);\r\n-    // } else {\r\n-    //   debugPrint('activites is null');\r\n-    // }\r\n-    if (widget.mail.status != null) {\r\n-      final status = widget.mail.status!;\r\n-      selectedStatus = StatusMod(\r\n-        color: status.color,\r\n-        id: status.id,\r\n-        name: status.name,\r\n-      );\r\n-    } else {\r\n-      debugPrint('status is null');\r\n-    }\r\n-    // selectedTags = widget.mail.tags!;\r\n-    decisionCont.text = widget.mail.decision ?? '';\r\n-  }\r\n-\r\n-  @override\r\n-  void initState() {\r\n-    intializeData();\r\n-\r\n-    getUser();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    int year = date!.year;\r\n-    int today = date!.day;\r\n-    dynamic month = getMonth(date!);\r\n-    return Padding(\r\n-      padding:\r\n-          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n-      child: SizedBox(\r\n-        height: MediaQuery.of(context).size.height - 55,\r\n-        child: Column(\r\n-          children: [\r\n-            Padding(\r\n-              padding: const EdgeInsets.all(10.0),\r\n-              child: Row(\r\n-                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                children: [\r\n-                  TextButton(\r\n-                    style: TextButton.styleFrom(\r\n-                        padding: EdgeInsets.zero,\r\n-                        minimumSize: const Size(50, 30),\r\n-                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n-                        alignment: Alignment.centerLeft),\r\n-                    onPressed: () => Navigator.pop(context),\r\n-                    child: Icon(\r\n-                      Icons.arrow_back_ios,\r\n-                      color: primaryColor,\r\n-                    ),\r\n-                  ),\r\n-                  const Text(\r\n-                    'Mail Details',\r\n-                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n-                  ),\r\n-                  TextButton(\r\n-                    onPressed: () async {\r\n-                      Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .imagesFiles\r\n-                              .isNotEmpty\r\n-                          ? await uploadImages(context, widget.mail.id!)\r\n-                          : null;\r\n-                      await updateMail(\r\n-                        mailId: widget.mail.id,\r\n-                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.id!;\r\n-                        }).toList(),\r\n-                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n-                                context,\r\n-                                listen: false)\r\n-                            .deletedImages\r\n-                            .map((image) {\r\n-                          return image!.image!;\r\n-                        }).toList(),\r\n-                        statusId: selectedStatus.id.toString(),\r\n-                        decision: decisionCont.text,\r\n-                        finalDecision: decisionCont.text,\r\n-                        activities: Provider.of<NewInboxProvider>(context,\r\n-                                listen: false)\r\n-                            .activites,\r\n-                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n-                      );\r\n-\r\n-                      showAlert(\r\n-                        context,\r\n-                        message: 'Mail Updated Successfully',\r\n-                        color: primaryColor.withOpacity(0.8),\r\n-                        width: 230,\r\n-                      );\r\n-\r\n-                      selectedTags = [];\r\n-\r\n-                      final updateData =\r\n-                          Provider.of<StatuseProvider>(context, listen: false);\r\n-                      updateData.updatestutas();\r\n-\r\n-                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n-                        builder: (context) {\r\n-                          return const MainPage();\r\n-                        },\r\n-                      ));\r\n-                    },\r\n-                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n-                  ),\r\n-                ],\r\n-              ),\r\n-            ),\r\n-            Expanded(\r\n-              child: ListView(\r\n-                physics: const BouncingScrollPhysics(),\r\n-                children: [\r\n-                  Column(\r\n-                    mainAxisAlignment: MainAxisAlignment.center,\r\n-                    crossAxisAlignment: CrossAxisAlignment.center,\r\n-                    children: [\r\n-                      AnimatedContainer(\r\n-                        height: isExpansionOpened ? 175 : 150,\r\n-                        width: 400,\r\n-                        duration: const Duration(milliseconds: 300),\r\n-                        child: CustomWhiteBox(\r\n-                            width: 400,\r\n-                            height: 180,\r\n-                            child: Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 15.0, top: 10),\r\n-                              child: SingleChildScrollView(\r\n-                                child: Column(\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Column(\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Row(\r\n-                                              children: [\r\n-                                                const Icon(\r\n-                                                  Icons.person_2_outlined,\r\n-                                                  size: 20,\r\n-                                                ),\r\n-                                                const SizedBox(\r\n-                                                  width: 10,\r\n-                                                ),\r\n-                                                Text(\r\n-                                                  '${widget.mail.sender!.name}',\r\n-                                                  style: const TextStyle(\r\n-                                                      fontSize: 15,\r\n-                                                      fontWeight:\r\n-                                                          FontWeight.w600),\r\n-                                                ),\r\n-                                              ],\r\n-                                            ),\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10.0, start: 35),\r\n-                                              child: Text(\r\n-                                                '${widget.mail.sender!.category!.name}',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                        Container(\r\n-                                          margin:\r\n-                                              const EdgeInsetsDirectional.only(\r\n-                                                  top: 5),\r\n-                                          width: 1,\r\n-                                          height: 50,\r\n-                                          color: Colors.grey.shade300,\r\n-                                        ),\r\n-                                        Column(\r\n-                                          mainAxisAlignment:\r\n-                                              MainAxisAlignment.spaceBetween,\r\n-                                          crossAxisAlignment:\r\n-                                              CrossAxisAlignment.start,\r\n-                                          children: [\r\n-                                            Padding(\r\n-                                              padding:\r\n-                                                  const EdgeInsetsDirectional\r\n-                                                          .only(\r\n-                                                      top: 10, bottom: 10),\r\n-                                              child: Text(\r\n-                                                '$today $month $year',\r\n-                                                style: const TextStyle(\r\n-                                                  fontSize: 14,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            SizedBox(\r\n-                                              width: 150,\r\n-                                              child: Text(\r\n-                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n-                                                overflow: TextOverflow.ellipsis,\r\n-                                                maxLines: 1,\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 14),\r\n-                                              ),\r\n-                                            )\r\n-                                          ],\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Container(\r\n-                                      margin: const EdgeInsetsDirectional.only(\r\n-                                          top: 15),\r\n-                                      width: MediaQuery.sizeOf(context).width,\r\n-                                      height: 1,\r\n-                                      color: Colors.grey.shade300,\r\n-                                    ),\r\n-                                    Theme(\r\n-                                      data: Theme.of(context).copyWith(\r\n-                                          dividerColor: Colors.transparent),\r\n-                                      child: ListTileTheme(\r\n-                                        contentPadding:\r\n-                                            const EdgeInsetsDirectional.only(\r\n-                                                start: 10),\r\n-                                        dense: true,\r\n-                                        child: ExpansionTile(\r\n-                                            onExpansionChanged: (value) {\r\n-                                              setState(() {\r\n-                                                isExpansionOpened = value;\r\n-                                              });\r\n-                                            },\r\n-                                            textColor: const Color(0xff272727),\r\n-                                            trailing: SizedBox(\r\n-                                              width: 60,\r\n-                                              child: Center(\r\n-                                                child: Icon(\r\n-                                                  !isExpansionOpened\r\n-                                                      ? Icons\r\n-                                                          .arrow_forward_ios_rounded\r\n-                                                      : Icons\r\n-                                                          .keyboard_arrow_up_rounded,\r\n-                                                  size: isExpansionOpened\r\n-                                                      ? 30\r\n-                                                      : 20,\r\n-                                                  color: !isExpansionOpened\r\n-                                                      ? Colors.grey\r\n-                                                      : primaryColor,\r\n-                                                ),\r\n-                                              ),\r\n-                                            ),\r\n-                                            initiallyExpanded: false,\r\n-                                            title: Text(\r\n-                                              widget.mail.subject!,\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  fontWeight: FontWeight.bold),\r\n-                                            ),\r\n-                                            children: [\r\n-                                              Text(\r\n-                                                widget.mail.description == ''\r\n-                                                    ? '${widget.mail.description}'\r\n-                                                    : 'No Description',\r\n-                                                style: const TextStyle(\r\n-                                                    fontSize: 16),\r\n-                                              )\r\n-                                            ]),\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            )),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedTags =\r\n-                              await showModalBottomSheet<List<TagElement>>(\r\n-                                  clipBehavior: Clip.hardEdge,\r\n-                                  isScrollControlled: true,\r\n-                                  context: context,\r\n-                                  shape: const RoundedRectangleBorder(\r\n-                                      borderRadius: BorderRadius.vertical(\r\n-                                    top: Radius.circular(15.0),\r\n-                                  )),\r\n-                                  builder: (BuildContext context) {\r\n-                                    return StatefulBuilder(builder:\r\n-                                        (BuildContext context,\r\n-                                            StateSetter setState) {\r\n-                                      return TagsBottomSheet();\r\n-                                    });\r\n-                                  }).then((value) {\r\n-                            setState(() {\r\n-                              this.selectedTags = value!;\r\n-                            });\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child:   Padding(\r\n-                            padding: EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    Icon(\r\n-                                      Icons.tag,\r\n-                                      size: 23,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 12,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 250,\r\n-                                      height: 32,\r\n-                                      child: ListView.separated(\r\n-                                        scrollDirection: Axis.horizontal,\r\n-                                        itemBuilder: (context, index) {\r\n-                                          final tagText =\r\n-                                              selectedTags[index].name;\r\n-                                          final textLength = selectedTags[index].name.length;\r\n-                                          final statusWidth =\r\n-                                              40.0 + (textLength * 7.0);\r\n-                                          return Container(\r\n-                                            alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n-                                            decoration: BoxDecoration(\r\n-                                              color: Color(int.parse(\r\n-                                                  selectedStatus.color!)),\r\n-                                              borderRadius:\r\n-                                                  BorderRadius.circular(30),\r\n-                                            ),\r\n-                                            child: Text(\r\n-                                              '${selectedTags[index].name}',\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  color: Colors.white),\r\n-                                            ),\r\n-                                          );\r\n-                                        },\r\n-                                        itemCount: 1,\r\n-                                        separatorBuilder: (context, index) {\r\n-                                          return const SizedBox(\r\n-                                            width: 10,\r\n-                                          );\r\n-                                        },\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                                Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () async {\r\n-                          final selectedStatus =\r\n-                              await showModalBottomSheet<StatusMod>(\r\n-                            clipBehavior: Clip.hardEdge,\r\n-                            isScrollControlled: true,\r\n-                            context: context,\r\n-                            shape: const RoundedRectangleBorder(\r\n-                              borderRadius: BorderRadius.vertical(\r\n-                                top: Radius.circular(15.0),\r\n-                              ),\r\n-                            ),\r\n-                            builder: (BuildContext context) {\r\n-                              return StatusesBottomSheet(\r\n-                                status: StatusMod(\r\n-                                  color: widget.mail.status!.color,\r\n-                                  id: this.selectedStatus.id,\r\n-                                  name: widget.mail.status!.name,\r\n-                                ),\r\n-                              );\r\n-                            },\r\n-                          ).then((value) {\r\n-                            setState(() {\r\n-                              this.selectedStatus = value!;\r\n-                            });\r\n-                          });\r\n-                        },\r\n-                        child: CustomWhiteBox(\r\n-                          width: 378,\r\n-                          height: 56,\r\n-                          child: Padding(\r\n-                            padding: const EdgeInsetsDirectional.only(\r\n-                              start: 20.0,\r\n-                              end: 20.0,\r\n-                            ),\r\n-                            child: Row(\r\n-                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n-                              children: [\r\n-                                Row(\r\n-                                  children: [\r\n-                                    SizedBox(\r\n-                                      width: 25,\r\n-                                      height: 25,\r\n-                                      child: Image.asset(\r\n-                                        'images/Tag.png',\r\n-                                        color: Colors.grey,\r\n-                                      ),\r\n-                                    ),\r\n-                                    const SizedBox(\r\n-                                      width: 15,\r\n-                                    ),\r\n-                                    SizedBox(\r\n-                                      width: 250,\r\n-                                      height: 32,\r\n-                                      child: ListView.separated(\r\n-                                        scrollDirection: Axis.horizontal,\r\n-                                        itemBuilder: (context, index) {\r\n-                                          final statusText =\r\n-                                              selectedStatus.name;\r\n-                                          final textLength = statusText!.length;\r\n-                                          final statusWidth =\r\n-                                              40.0 + (textLength * 7.0);\r\n-                                          return Container(\r\n-                                            alignment: Alignment.center,\r\n-                                            width: statusWidth,\r\n-                                            decoration: BoxDecoration(\r\n-                                              color: Color(int.parse(\r\n-                                                  selectedStatus.color!)),\r\n-                                              borderRadius:\r\n-                                                  BorderRadius.circular(30),\r\n-                                            ),\r\n-                                            child: Text(\r\n-                                              '${selectedStatus.name}',\r\n-                                              style: const TextStyle(\r\n-                                                  fontSize: 18,\r\n-                                                  color: Colors.white),\r\n-                                            ),\r\n-                                          );\r\n-                                        },\r\n-                                        itemCount: 1,\r\n-                                        separatorBuilder: (context, index) {\r\n-                                          return const SizedBox(\r\n-                                            width: 10,\r\n-                                          );\r\n-                                        },\r\n-                                      ),\r\n-                                    )\r\n-                                  ],\r\n-                                ),\r\n-                                const Icon(\r\n-                                  Icons.arrow_forward_ios_rounded,\r\n-                                  color: Colors.grey,\r\n-                                  size: 22,\r\n-                                ),\r\n-                              ],\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      CustomWhiteBox(\r\n-                        width: 378,\r\n-                        height: 110,\r\n-                        child: Column(\r\n-                          crossAxisAlignment: CrossAxisAlignment.start,\r\n-                          children: [\r\n-                            const Padding(\r\n-                              padding: EdgeInsetsDirectional.only(\r\n-                                start: 25.0,\r\n-                                end: 20.0,\r\n-                                top: 20.0,\r\n-                              ),\r\n-                              child: Text(\r\n-                                'Descision',\r\n-                                style: TextStyle(\r\n-                                  fontSize: 20,\r\n-                                  color: Colors.black,\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                            Padding(\r\n-                              padding: const EdgeInsetsDirectional.only(\r\n-                                  start: 10.0, end: 10.0),\r\n-                              child: TextFormField(\r\n-                                onChanged: (value) {\r\n-                                  Provider.of<NewInboxProvider>(context,\r\n-                                          listen: false)\r\n-                                      .setArchiveNumber(value);\r\n-                                },\r\n-                                controller: decisionCont,\r\n-                                decoration: const InputDecoration(\r\n-                                  contentPadding: EdgeInsets.symmetric(\r\n-                                      vertical: 20, horizontal: 40),\r\n-                                  border: InputBorder.none,\r\n-                                  hintText: \"Add Decsision ...\",\r\n-                                  hintStyle: TextStyle(\r\n-                                    color: Colors.grey,\r\n-                                    fontFamily: 'Iphone',\r\n-                                    fontSize: 19,\r\n-                                    fontWeight: FontWeight.w500,\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ],\r\n-                        ),\r\n-                      ),\r\n-                      GestureDetector(\r\n-                        onTap: () {\r\n-                          Provider.of<NewInboxProvider>(context, listen: false)\r\n-                              .getImagesFromGallery();\r\n-                        },\r\n-                        child: AnimatedContainer(\r\n-                          height: Provider.of<NewInboxProvider>(context)\r\n-                                      .networkImagesFiles\r\n-                                      .isNotEmpty ||\r\n-                                  Provider.of<NewInboxProvider>(context)\r\n-                                      .imagesFiles\r\n-                                      .isNotEmpty\r\n-                              ? 95 +\r\n-                                  (((Provider.of<NewInboxProvider>(context)\r\n-                                              .networkImagesFiles\r\n-                                              .length) +\r\n-                                          (Provider.of<NewInboxProvider>(\r\n-                                                  context)\r\n-                                              .imagesFiles\r\n-                                              .length)) *\r\n-                                      57)\r\n-                              : 75.0,\r\n-                          duration: const Duration(milliseconds: 300),\r\n-                          child: CustomWhiteBox(\r\n-                            width: 378,\r\n-                            height: 120,\r\n-                            child: SingleChildScrollView(\r\n-                              physics: const NeverScrollableScrollPhysics(),\r\n-                              child: Padding(\r\n-                                padding: const EdgeInsetsDirectional.only(\r\n-                                  top: 20,\r\n-                                  start: 20.0,\r\n-                                  end: 20.0,\r\n-                                ),\r\n-                                child: Column(\r\n-                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n-                                  children: [\r\n-                                    Row(\r\n-                                      mainAxisAlignment:\r\n-                                          MainAxisAlignment.spaceBetween,\r\n-                                      children: [\r\n-                                        Row(\r\n-                                          children: [\r\n-                                            const Icon(\r\n-                                              Icons.image,\r\n-                                              color: Colors.blueGrey,\r\n-                                              size: 23,\r\n-                                            ),\r\n-                                            const SizedBox(\r\n-                                              width: 12,\r\n-                                            ),\r\n-                                            Text(\r\n-                                              'Add image',\r\n-                                              style: TextStyle(\r\n-                                                  color: primaryColor,\r\n-                                                  fontFamily: 'Iphone',\r\n-                                                  fontSize: 20),\r\n-                                            ),\r\n-                                          ],\r\n-                                        ),\r\n-                                        const Icon(\r\n-                                          Icons.arrow_forward_ios_rounded,\r\n-                                          color: Colors.grey,\r\n-                                          size: 22,\r\n-                                        ),\r\n-                                      ],\r\n-                                    ),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .networkImagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 20 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .networkImagesFiles\r\n-                                                        .length) *\r\n-                                                    55),\r\n-                                            child: ListView.builder(\r\n-                                              shrinkWrap: true,\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              physics:\r\n-                                                  const NeverScrollableScrollPhysics(),\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .networkImagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius:\r\n-                                                                          BorderRadius.circular(\r\n-                                                                              30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit\r\n-                                                                              .cover,\r\n-                                                                          image:\r\n-                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            final provider =\r\n-                                                                Provider.of<\r\n-                                                                        NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false);\r\n-                                                            provider\r\n-                                                                .deletedImages\r\n-                                                                .add(provider\r\n-                                                                        .networkImagesFiles[\r\n-                                                                    index]!);\r\n-                                                            print(provider\r\n-                                                                .deletedImages);\r\n-                                                            provider\r\n-                                                                .networkImagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration: BoxDecoration(\r\n-                                                            border: Border.all(\r\n-                                                                color: Colors\r\n-                                                                    .black),\r\n-                                                            borderRadius:\r\n-                                                                BorderRadius\r\n-                                                                    .circular(\r\n-                                                                        11),\r\n-                                                            image: DecorationImage(\r\n-                                                                fit: BoxFit\r\n-                                                                    .cover,\r\n-                                                                image: NetworkImage(\r\n-                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                    Provider.of<NewInboxProvider>(context)\r\n-                                            .imagesFiles\r\n-                                            .isNotEmpty\r\n-                                        ? SizedBox(\r\n-                                            height: 55 +\r\n-                                                ((Provider.of<NewInboxProvider>(\r\n-                                                            context)\r\n-                                                        .imagesFiles\r\n-                                                        .length) *\r\n-                                                    57),\r\n-                                            child: ListView.builder(\r\n-                                              padding: EdgeInsets.zero,\r\n-                                              shrinkWrap: true,\r\n-                                              itemCount:\r\n-                                                  Provider.of<NewInboxProvider>(\r\n-                                                          context)\r\n-                                                      .imagesFiles\r\n-                                                      .length,\r\n-                                              itemBuilder: (context, index) {\r\n-                                                return ListTile(\r\n-                                                  onTap: () {\r\n-                                                    showDialog(\r\n-                                                      barrierDismissible: true,\r\n-                                                      context: context,\r\n-                                                      builder: (context) {\r\n-                                                        return Align(\r\n-                                                          alignment:\r\n-                                                              Alignment.center,\r\n-                                                          child:\r\n-                                                              SingleChildScrollView(\r\n-                                                            child: AlertDialog(\r\n-                                                                backgroundColor:\r\n-                                                                    Colors\r\n-                                                                        .transparent,\r\n-                                                                titlePadding:\r\n-                                                                    EdgeInsets\r\n-                                                                        .zero,\r\n-                                                                title:\r\n-                                                                    Container(\r\n-                                                                  width: 200,\r\n-                                                                  height: MediaQuery.sizeOf(\r\n-                                                                              context)\r\n-                                                                          .height -\r\n-                                                                      250,\r\n-                                                                  decoration: BoxDecoration(\r\n-                                                                      borderRadius: BorderRadius.circular(30),\r\n-                                                                      image: DecorationImage(\r\n-                                                                          fit: BoxFit.cover,\r\n-                                                                          image: FileImage(\r\n-                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n-                                                                          ))),\r\n-                                                                )),\r\n-                                                          ),\r\n-                                                        );\r\n-                                                      },\r\n-                                                    );\r\n-                                                  },\r\n-                                                  title: Row(\r\n-                                                    children: [\r\n-                                                      IconButton(\r\n-                                                          onPressed: () {\r\n-                                                            Provider.of<NewInboxProvider>(\r\n-                                                                    context,\r\n-                                                                    listen:\r\n-                                                                        false)\r\n-                                                                .imagesFiles\r\n-                                                                .removeAt(\r\n-                                                                    index);\r\n-                                                            setState(() {});\r\n-                                                          },\r\n-                                                          icon: const Icon(\r\n-                                                            Icons\r\n-                                                                .delete_outline_rounded,\r\n-                                                            color: Colors.red,\r\n-                                                          )),\r\n-                                                      Container(\r\n-                                                        margin: const EdgeInsets\r\n-                                                            .all(7),\r\n-                                                        width: 38,\r\n-                                                        height: 40,\r\n-                                                        decoration:\r\n-                                                            BoxDecoration(\r\n-                                                                border: Border.all(\r\n-                                                                    color: Colors\r\n-                                                                        .black),\r\n-                                                                borderRadius:\r\n-                                                                    BorderRadius\r\n-                                                                        .circular(\r\n-                                                                            11),\r\n-                                                                image:\r\n-                                                                    DecorationImage(\r\n-                                                                        fit: BoxFit\r\n-                                                                            .cover,\r\n-                                                                        image:\r\n-                                                                            FileImage(\r\n-                                                                          File(Provider.of<NewInboxProvider>(context)\r\n-                                                                              .imagesFiles[index]!\r\n-                                                                              .path),\r\n-                                                                        ))),\r\n-                                                      ),\r\n-                                                      SizedBox(\r\n-                                                        width: 150,\r\n-                                                        child: Text(\r\n-                                                          Provider.of<NewInboxProvider>(\r\n-                                                                  context)\r\n-                                                              .imagesFiles[\r\n-                                                                  index]!\r\n-                                                              .name,\r\n-                                                          maxLines: 1,\r\n-                                                          overflow: TextOverflow\r\n-                                                              .ellipsis,\r\n-                                                          style:\r\n-                                                              const TextStyle(\r\n-                                                                  fontSize: 17),\r\n-                                                        ),\r\n-                                                      )\r\n-                                                    ],\r\n-                                                  ),\r\n-                                                );\r\n-                                              },\r\n-                                            ),\r\n-                                          )\r\n-                                        : const SizedBox(),\r\n-                                  ],\r\n-                                ),\r\n-                              ),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                      const ActivitesExpansionTile(),\r\n-                      Padding(\r\n-                        padding: const EdgeInsetsDirectional.only(\r\n-                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n-                        child: TextField(\r\n-                          controller: activityTextFieldController,\r\n-                          decoration: InputDecoration(\r\n-                            suffixIcon: IconButton(\r\n-                                onPressed: () {\r\n-                                  setState(() {\r\n-                                    Provider.of<NewInboxProvider>(context,\r\n-                                            listen: false)\r\n-                                        .addActivity(\r\n-                                            activityTextFieldController.text,\r\n-                                            user.user.id.toString());\r\n-                                    activityTextFieldController.clear();\r\n-                                  });\r\n-                                },\r\n-                                icon: Icon(\r\n-                                  Icons.send,\r\n-                                  color: primaryColor,\r\n-                                )),\r\n-                            //should be replaced with profie image\r\n-                            prefixIcon: const Icon(Icons.person),\r\n-                            filled: true,\r\n-                            fillColor: Colors.black.withOpacity(0.05),\r\n-                            contentPadding: const EdgeInsets.all(15),\r\n-                            hintText: \"Add new activity ...\",\r\n-                            hintStyle: const TextStyle(\r\n-                                color: Colors.grey, fontSize: 17),\r\n-                            enabledBorder: UnderlineInputBorder(\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                            ),\r\n-                            focusedBorder: UnderlineInputBorder(\r\n-                              borderRadius: BorderRadius.circular(30),\r\n-                              borderSide: BorderSide(color: backGroundColor),\r\n-                            ),\r\n-                          ),\r\n-                        ),\r\n-                      ),\r\n-                    ],\r\n-                  )\r\n-                ],\r\n-              ),\r\n-            ),\r\n-          ],\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                },
                {
                    "date": 1694851644005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,8 +418,9 @@\n                                       width: 250,\r\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n+                                        ite\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n                                           final textLength =\r\n"
                },
                {
                    "date": 1694851649269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,9 @@\n                                       width: 250,\r\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n-                                        ite\r\n+                                        coun\r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n                                           final textLength =\r\n"
                },
                {
                    "date": 1694851659574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,9 @@\n                                       width: 250,\r\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n                                         scrollDirection: Axis.horizontal,\r\n-                                        coun\r\n+                                        \r\n                                         itemBuilder: (context, index) {\r\n                                           final tagText =\r\n                                               selectedTags[index].name;\r\n                                           final textLength =\r\n@@ -443,9 +443,9 @@\n                                                   color: Colors.white),\r\n                                             ),\r\n                                           );\r\n                                         },\r\n-                                        itemCount: 1,\r\n+                                        itemCount: ,\r\n                                         separatorBuilder: (context, index) {\r\n                                           return const SizedBox(\r\n                                             width: 10,\r\n                                           );\r\n"
                },
                {
                    "date": 1694851669639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -443,9 +443,9 @@\n                                                   color: Colors.white),\r\n                                             ),\r\n                                           );\r\n                                         },\r\n-                                        itemCount: ,\r\n+                                        itemCount: selectedTags.,\r\n                                         separatorBuilder: (context, index) {\r\n                                           return const SizedBox(\r\n                                             width: 10,\r\n                                           );\r\n"
                },
                {
                    "date": 1694852150657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,988 @@\n+import 'dart:io';\r\n+\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\n+import 'package:final_projectt/core/services/user_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\n+import 'package:final_projectt/core/widgets/custom_box.dart';\r\n+import 'package:final_projectt/core/widgets/date_picker.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\n+import 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\n+import 'package:final_projectt/models/mail_model.dart';\r\n+import 'package:final_projectt/models/sender_model.dart';\r\n+import 'package:final_projectt/models/status_model.dart';\r\n+import 'package:final_projectt/models/tags_model.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:provider/provider.dart';\r\n+\r\n+class EditMailBottomSheet extends StatefulWidget {\r\n+  Mail mail;\r\n+  EditMailBottomSheet({super.key, required this.mail});\r\n+\r\n+  @override\r\n+  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n+}\r\n+\r\n+class _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n+  TextEditingController senderNameCont = TextEditingController();\r\n+  TextEditingController senderMobileCont = TextEditingController();\r\n+  TextEditingController mailTitleCont = TextEditingController();\r\n+  TextEditingController mailDescriptionCont = TextEditingController();\r\n+  TextEditingController archiveNumberCont = TextEditingController();\r\n+  bool isExpansionOpened = false;\r\n+\r\n+  SingleSender? selectedSender;\r\n+  List<TagElement> selectedTags = [];\r\n+\r\n+  TextEditingController decisionCont = TextEditingController();\r\n+  TextEditingController activityTextFieldController = TextEditingController();\r\n+  late UserModel user;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  late String category = 'Other';\r\n+  DateTime? date;\r\n+  bool isValidationShown = false;\r\n+  late StatusMod selectedStatus = StatusMod(\r\n+      id: 1,\r\n+      name: 'Inbox',\r\n+      color: '0xfffa3a57',\r\n+      createdAt: '',\r\n+      updatedAt: '',\r\n+      mailsCount: '');\r\n+\r\n+  getUser() async {\r\n+    user = await UserController().getLocalUser();\r\n+  }\r\n+\r\n+  void intializeData() {\r\n+    if (widget.mail.archiveDate != null) {\r\n+      date = DateTime.parse(widget.mail.archiveDate!);\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.tags != null) {\r\n+      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n+        return TagElement(\r\n+          id: tag.id!,\r\n+          name: tag.name!,\r\n+          createdAt: tag.createdAt!,\r\n+          updatedAt: tag.updatedAt!,\r\n+        );\r\n+      }).toList();\r\n+      selectedTags = tags;\r\n+    } else {\r\n+      debugPrint('archive date is null');\r\n+    }\r\n+    if (widget.mail.attachments!.isNotEmpty) {\r\n+      Provider.of<NewInboxProvider>(context, listen: false)\r\n+          .setNetworkImagesList(widget.mail.attachments!);\r\n+    } else {\r\n+      debugPrint('attachments is null');\r\n+    }\r\n+\r\n+    // if (widget.mail.activities!.isNotEmpty) {\r\n+    //   List<Map<String, dynamic>>? activites =\r\n+    //       widget.mail.activities!.map((activity) {\r\n+    //     return {\r\n+    //       'body': activity.body,\r\n+    //       'user_id': activity.id,\r\n+    //     };\r\n+    //   }).toList();\r\n+    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n+    //       .setActivitesList(activites);\r\n+    // } else {\r\n+    //   debugPrint('activites is null');\r\n+    // }\r\n+    if (widget.mail.status != null) {\r\n+      final status = widget.mail.status!;\r\n+      selectedStatus = StatusMod(\r\n+        color: status.color,\r\n+        id: status.id,\r\n+        name: status.name,\r\n+      );\r\n+    } else {\r\n+      debugPrint('status is null');\r\n+    }\r\n+    // selectedTags = widget.mail.tags!;\r\n+    decisionCont.text = widget.mail.decision ?? '';\r\n+  }\r\n+\r\n+  @override\r\n+  void initState() {\r\n+    intializeData();\r\n+\r\n+    getUser();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    int year = date!.year;\r\n+    int today = date!.day;\r\n+    dynamic month = getMonth(date!);\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: SizedBox(\r\n+        height: MediaQuery.of(context).size.height - 55,\r\n+        child: Column(\r\n+          children: [\r\n+            Padding(\r\n+              padding: const EdgeInsets.all(10.0),\r\n+              child: Row(\r\n+                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                children: [\r\n+                  TextButton(\r\n+                    style: TextButton.styleFrom(\r\n+                        padding: EdgeInsets.zero,\r\n+                        minimumSize: const Size(50, 30),\r\n+                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n+                        alignment: Alignment.centerLeft),\r\n+                    onPressed: () => Navigator.pop(context),\r\n+                    child: Icon(\r\n+                      Icons.arrow_back_ios,\r\n+                      color: primaryColor,\r\n+                    ),\r\n+                  ),\r\n+                  const Text(\r\n+                    'Mail Details',\r\n+                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n+                  ),\r\n+                  TextButton(\r\n+                    onPressed: () async {\r\n+                      Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .imagesFiles\r\n+                              .isNotEmpty\r\n+                          ? await uploadImages(context, widget.mail.id!)\r\n+                          : null;\r\n+                      await updateMail(\r\n+                        mailId: widget.mail.id,\r\n+                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.id!;\r\n+                        }).toList(),\r\n+                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n+                                context,\r\n+                                listen: false)\r\n+                            .deletedImages\r\n+                            .map((image) {\r\n+                          return image!.image!;\r\n+                        }).toList(),\r\n+                        statusId: selectedStatus.id.toString(),\r\n+                        decision: decisionCont.text,\r\n+                        finalDecision: decisionCont.text,\r\n+                        activities: Provider.of<NewInboxProvider>(context,\r\n+                                listen: false)\r\n+                            .activites,\r\n+                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n+                      );\r\n+\r\n+                      showAlert(\r\n+                        context,\r\n+                        message: 'Mail Updated Successfully',\r\n+                        color: primaryColor.withOpacity(0.8),\r\n+                        width: 230,\r\n+                      );\r\n+\r\n+                      selectedTags = [];\r\n+\r\n+                      final updateData =\r\n+                          Provider.of<StatuseProvider>(context, listen: false);\r\n+                      updateData.updatestutas();\r\n+\r\n+                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n+                        builder: (context) {\r\n+                          return const MainPage();\r\n+                        },\r\n+                      ));\r\n+                    },\r\n+                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n+                  ),\r\n+                ],\r\n+              ),\r\n+            ),\r\n+            Expanded(\r\n+              child: ListView(\r\n+                physics: const BouncingScrollPhysics(),\r\n+                children: [\r\n+                  Column(\r\n+                    mainAxisAlignment: MainAxisAlignment.center,\r\n+                    crossAxisAlignment: CrossAxisAlignment.center,\r\n+                    children: [\r\n+                      AnimatedContainer(\r\n+                        height: isExpansionOpened ? 175 : 150,\r\n+                        width: 400,\r\n+                        duration: const Duration(milliseconds: 300),\r\n+                        child: CustomWhiteBox(\r\n+                            width: 400,\r\n+                            height: 180,\r\n+                            child: Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 15.0, top: 10),\r\n+                              child: SingleChildScrollView(\r\n+                                child: Column(\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Column(\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Row(\r\n+                                              children: [\r\n+                                                const Icon(\r\n+                                                  Icons.person_2_outlined,\r\n+                                                  size: 20,\r\n+                                                ),\r\n+                                                const SizedBox(\r\n+                                                  width: 10,\r\n+                                                ),\r\n+                                                Text(\r\n+                                                  '${widget.mail.sender!.name}',\r\n+                                                  style: const TextStyle(\r\n+                                                      fontSize: 15,\r\n+                                                      fontWeight:\r\n+                                                          FontWeight.w600),\r\n+                                                ),\r\n+                                              ],\r\n+                                            ),\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10.0, start: 35),\r\n+                                              child: Text(\r\n+                                                '${widget.mail.sender!.category!.name}',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                        Container(\r\n+                                          margin:\r\n+                                              const EdgeInsetsDirectional.only(\r\n+                                                  top: 5),\r\n+                                          width: 1,\r\n+                                          height: 50,\r\n+                                          color: Colors.grey.shade300,\r\n+                                        ),\r\n+                                        Column(\r\n+                                          mainAxisAlignment:\r\n+                                              MainAxisAlignment.spaceBetween,\r\n+                                          crossAxisAlignment:\r\n+                                              CrossAxisAlignment.start,\r\n+                                          children: [\r\n+                                            Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsetsDirectional\r\n+                                                          .only(\r\n+                                                      top: 10, bottom: 10),\r\n+                                              child: Text(\r\n+                                                '$today $month $year',\r\n+                                                style: const TextStyle(\r\n+                                                  fontSize: 14,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            SizedBox(\r\n+                                              width: 150,\r\n+                                              child: Text(\r\n+                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n+                                                overflow: TextOverflow.ellipsis,\r\n+                                                maxLines: 1,\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 14),\r\n+                                              ),\r\n+                                            )\r\n+                                          ],\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Container(\r\n+                                      margin: const EdgeInsetsDirectional.only(\r\n+                                          top: 15),\r\n+                                      width: MediaQuery.sizeOf(context).width,\r\n+                                      height: 1,\r\n+                                      color: Colors.grey.shade300,\r\n+                                    ),\r\n+                                    Theme(\r\n+                                      data: Theme.of(context).copyWith(\r\n+                                          dividerColor: Colors.transparent),\r\n+                                      child: ListTileTheme(\r\n+                                        contentPadding:\r\n+                                            const EdgeInsetsDirectional.only(\r\n+                                                start: 10),\r\n+                                        dense: true,\r\n+                                        child: ExpansionTile(\r\n+                                            onExpansionChanged: (value) {\r\n+                                              setState(() {\r\n+                                                isExpansionOpened = value;\r\n+                                              });\r\n+                                            },\r\n+                                            textColor: const Color(0xff272727),\r\n+                                            trailing: SizedBox(\r\n+                                              width: 60,\r\n+                                              child: Center(\r\n+                                                child: Icon(\r\n+                                                  !isExpansionOpened\r\n+                                                      ? Icons\r\n+                                                          .arrow_forward_ios_rounded\r\n+                                                      : Icons\r\n+                                                          .keyboard_arrow_up_rounded,\r\n+                                                  size: isExpansionOpened\r\n+                                                      ? 30\r\n+                                                      : 20,\r\n+                                                  color: !isExpansionOpened\r\n+                                                      ? Colors.grey\r\n+                                                      : primaryColor,\r\n+                                                ),\r\n+                                              ),\r\n+                                            ),\r\n+                                            initiallyExpanded: false,\r\n+                                            title: Text(\r\n+                                              widget.mail.subject!,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  fontWeight: FontWeight.bold),\r\n+                                            ),\r\n+                                            children: [\r\n+                                              Text(\r\n+                                                widget.mail.description == ''\r\n+                                                    ? '${widget.mail.description}'\r\n+                                                    : 'No Description',\r\n+                                                style: const TextStyle(\r\n+                                                    fontSize: 16),\r\n+                                              )\r\n+                                            ]),\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            )),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedTags =\r\n+                              await showModalBottomSheet<List<TagElement>>(\r\n+                                  clipBehavior: Clip.hardEdge,\r\n+                                  isScrollControlled: true,\r\n+                                  context: context,\r\n+                                  shape: const RoundedRectangleBorder(\r\n+                                      borderRadius: BorderRadius.vertical(\r\n+                                    top: Radius.circular(15.0),\r\n+                                  )),\r\n+                                  builder: (BuildContext context) {\r\n+                                    return StatefulBuilder(builder:\r\n+                                        (BuildContext context,\r\n+                                            StateSetter setState) {\r\n+                                      return const TagsBottomSheet();\r\n+                                    });\r\n+                                  }).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedTags = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    const Icon(\r\n+                                      Icons.tag,\r\n+                                      size: 23,\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 12,\r\n+                                    ),\r\n+                                    \r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final tagText =\r\n+                                              selectedTags[index].name;\r\n+                                          final textLength =\r\n+                                              selectedTags[index].name.length;\r\n+                                          final tagWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: tagWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              tagText,\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: selectedTags.length,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () async {\r\n+                          final selectedStatus =\r\n+                              await showModalBottomSheet<StatusMod>(\r\n+                            clipBehavior: Clip.hardEdge,\r\n+                            isScrollControlled: true,\r\n+                            context: context,\r\n+                            shape: const RoundedRectangleBorder(\r\n+                              borderRadius: BorderRadius.vertical(\r\n+                                top: Radius.circular(15.0),\r\n+                              ),\r\n+                            ),\r\n+                            builder: (BuildContext context) {\r\n+                              return StatusesBottomSheet(\r\n+                                status: StatusMod(\r\n+                                  color: widget.mail.status!.color,\r\n+                                  id: this.selectedStatus.id,\r\n+                                  name: widget.mail.status!.name,\r\n+                                ),\r\n+                              );\r\n+                            },\r\n+                          ).then((value) {\r\n+                            setState(() {\r\n+                              this.selectedStatus = value!;\r\n+                            });\r\n+                          });\r\n+                        },\r\n+                        child: CustomWhiteBox(\r\n+                          width: 378,\r\n+                          height: 56,\r\n+                          child: Padding(\r\n+                            padding: const EdgeInsetsDirectional.only(\r\n+                              start: 20.0,\r\n+                              end: 20.0,\r\n+                            ),\r\n+                            child: Row(\r\n+                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n+                              children: [\r\n+                                Row(\r\n+                                  children: [\r\n+                                    SizedBox(\r\n+                                      width: 25,\r\n+                                      height: 25,\r\n+                                      child: Image.asset(\r\n+                                        'images/Tag.png',\r\n+                                        color: Colors.grey,\r\n+                                      ),\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      width: 15,\r\n+                                    ),\r\n+                                    SizedBox(\r\n+                                      width: 250,\r\n+                                      height: 32,\r\n+                                      child: ListView.separated(\r\n+                                        scrollDirection: Axis.horizontal,\r\n+                                        itemBuilder: (context, index) {\r\n+                                          final statusText =\r\n+                                              selectedStatus.name;\r\n+                                          final textLength = statusText!.length;\r\n+                                          final statusWidth =\r\n+                                              40.0 + (textLength * 7.0);\r\n+                                          return Container(\r\n+                                            alignment: Alignment.center,\r\n+                                            width: statusWidth,\r\n+                                            decoration: BoxDecoration(\r\n+                                              color: Color(int.parse(\r\n+                                                  selectedStatus.color!)),\r\n+                                              borderRadius:\r\n+                                                  BorderRadius.circular(30),\r\n+                                            ),\r\n+                                            child: Text(\r\n+                                              '${selectedStatus.name}',\r\n+                                              style: const TextStyle(\r\n+                                                  fontSize: 18,\r\n+                                                  color: Colors.white),\r\n+                                            ),\r\n+                                          );\r\n+                                        },\r\n+                                        itemCount: 1,\r\n+                                        separatorBuilder: (context, index) {\r\n+                                          return const SizedBox(\r\n+                                            width: 10,\r\n+                                          );\r\n+                                        },\r\n+                                      ),\r\n+                                    )\r\n+                                  ],\r\n+                                ),\r\n+                                const Icon(\r\n+                                  Icons.arrow_forward_ios_rounded,\r\n+                                  color: Colors.grey,\r\n+                                  size: 22,\r\n+                                ),\r\n+                              ],\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      CustomWhiteBox(\r\n+                        width: 378,\r\n+                        height: 110,\r\n+                        child: Column(\r\n+                          crossAxisAlignment: CrossAxisAlignment.start,\r\n+                          children: [\r\n+                            const Padding(\r\n+                              padding: EdgeInsetsDirectional.only(\r\n+                                start: 25.0,\r\n+                                end: 20.0,\r\n+                                top: 20.0,\r\n+                              ),\r\n+                              child: Text(\r\n+                                'Descision',\r\n+                                style: TextStyle(\r\n+                                  fontSize: 20,\r\n+                                  color: Colors.black,\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                            Padding(\r\n+                              padding: const EdgeInsetsDirectional.only(\r\n+                                  start: 10.0, end: 10.0),\r\n+                              child: TextFormField(\r\n+                                onChanged: (value) {\r\n+                                  Provider.of<NewInboxProvider>(context,\r\n+                                          listen: false)\r\n+                                      .setArchiveNumber(value);\r\n+                                },\r\n+                                controller: decisionCont,\r\n+                                decoration: const InputDecoration(\r\n+                                  contentPadding: EdgeInsets.symmetric(\r\n+                                      vertical: 20, horizontal: 40),\r\n+                                  border: InputBorder.none,\r\n+                                  hintText: \"Add Decsision ...\",\r\n+                                  hintStyle: TextStyle(\r\n+                                    color: Colors.grey,\r\n+                                    fontFamily: 'Iphone',\r\n+                                    fontSize: 19,\r\n+                                    fontWeight: FontWeight.w500,\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ],\r\n+                        ),\r\n+                      ),\r\n+                      GestureDetector(\r\n+                        onTap: () {\r\n+                          Provider.of<NewInboxProvider>(context, listen: false)\r\n+                              .getImagesFromGallery();\r\n+                        },\r\n+                        child: AnimatedContainer(\r\n+                          height: Provider.of<NewInboxProvider>(context)\r\n+                                      .networkImagesFiles\r\n+                                      .isNotEmpty ||\r\n+                                  Provider.of<NewInboxProvider>(context)\r\n+                                      .imagesFiles\r\n+                                      .isNotEmpty\r\n+                              ? 95 +\r\n+                                  (((Provider.of<NewInboxProvider>(context)\r\n+                                              .networkImagesFiles\r\n+                                              .length) +\r\n+                                          (Provider.of<NewInboxProvider>(\r\n+                                                  context)\r\n+                                              .imagesFiles\r\n+                                              .length)) *\r\n+                                      57)\r\n+                              : 75.0,\r\n+                          duration: const Duration(milliseconds: 300),\r\n+                          child: CustomWhiteBox(\r\n+                            width: 378,\r\n+                            height: 120,\r\n+                            child: SingleChildScrollView(\r\n+                              physics: const NeverScrollableScrollPhysics(),\r\n+                              child: Padding(\r\n+                                padding: const EdgeInsetsDirectional.only(\r\n+                                  top: 20,\r\n+                                  start: 20.0,\r\n+                                  end: 20.0,\r\n+                                ),\r\n+                                child: Column(\r\n+                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n+                                  children: [\r\n+                                    Row(\r\n+                                      mainAxisAlignment:\r\n+                                          MainAxisAlignment.spaceBetween,\r\n+                                      children: [\r\n+                                        Row(\r\n+                                          children: [\r\n+                                            const Icon(\r\n+                                              Icons.image,\r\n+                                              color: Colors.blueGrey,\r\n+                                              size: 23,\r\n+                                            ),\r\n+                                            const SizedBox(\r\n+                                              width: 12,\r\n+                                            ),\r\n+                                            Text(\r\n+                                              'Add image',\r\n+                                              style: TextStyle(\r\n+                                                  color: primaryColor,\r\n+                                                  fontFamily: 'Iphone',\r\n+                                                  fontSize: 20),\r\n+                                            ),\r\n+                                          ],\r\n+                                        ),\r\n+                                        const Icon(\r\n+                                          Icons.arrow_forward_ios_rounded,\r\n+                                          color: Colors.grey,\r\n+                                          size: 22,\r\n+                                        ),\r\n+                                      ],\r\n+                                    ),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .networkImagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 20 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .networkImagesFiles\r\n+                                                        .length) *\r\n+                                                    55),\r\n+                                            child: ListView.builder(\r\n+                                              shrinkWrap: true,\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              physics:\r\n+                                                  const NeverScrollableScrollPhysics(),\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .networkImagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius:\r\n+                                                                          BorderRadius.circular(\r\n+                                                                              30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit\r\n+                                                                              .cover,\r\n+                                                                          image:\r\n+                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            final provider =\r\n+                                                                Provider.of<\r\n+                                                                        NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false);\r\n+                                                            provider\r\n+                                                                .deletedImages\r\n+                                                                .add(provider\r\n+                                                                        .networkImagesFiles[\r\n+                                                                    index]!);\r\n+                                                            print(provider\r\n+                                                                .deletedImages);\r\n+                                                            provider\r\n+                                                                .networkImagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration: BoxDecoration(\r\n+                                                            border: Border.all(\r\n+                                                                color: Colors\r\n+                                                                    .black),\r\n+                                                            borderRadius:\r\n+                                                                BorderRadius\r\n+                                                                    .circular(\r\n+                                                                        11),\r\n+                                                            image: DecorationImage(\r\n+                                                                fit: BoxFit\r\n+                                                                    .cover,\r\n+                                                                image: NetworkImage(\r\n+                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                    Provider.of<NewInboxProvider>(context)\r\n+                                            .imagesFiles\r\n+                                            .isNotEmpty\r\n+                                        ? SizedBox(\r\n+                                            height: 55 +\r\n+                                                ((Provider.of<NewInboxProvider>(\r\n+                                                            context)\r\n+                                                        .imagesFiles\r\n+                                                        .length) *\r\n+                                                    57),\r\n+                                            child: ListView.builder(\r\n+                                              padding: EdgeInsets.zero,\r\n+                                              shrinkWrap: true,\r\n+                                              itemCount:\r\n+                                                  Provider.of<NewInboxProvider>(\r\n+                                                          context)\r\n+                                                      .imagesFiles\r\n+                                                      .length,\r\n+                                              itemBuilder: (context, index) {\r\n+                                                return ListTile(\r\n+                                                  onTap: () {\r\n+                                                    showDialog(\r\n+                                                      barrierDismissible: true,\r\n+                                                      context: context,\r\n+                                                      builder: (context) {\r\n+                                                        return Align(\r\n+                                                          alignment:\r\n+                                                              Alignment.center,\r\n+                                                          child:\r\n+                                                              SingleChildScrollView(\r\n+                                                            child: AlertDialog(\r\n+                                                                backgroundColor:\r\n+                                                                    Colors\r\n+                                                                        .transparent,\r\n+                                                                titlePadding:\r\n+                                                                    EdgeInsets\r\n+                                                                        .zero,\r\n+                                                                title:\r\n+                                                                    Container(\r\n+                                                                  width: 200,\r\n+                                                                  height: MediaQuery.sizeOf(\r\n+                                                                              context)\r\n+                                                                          .height -\r\n+                                                                      250,\r\n+                                                                  decoration: BoxDecoration(\r\n+                                                                      borderRadius: BorderRadius.circular(30),\r\n+                                                                      image: DecorationImage(\r\n+                                                                          fit: BoxFit.cover,\r\n+                                                                          image: FileImage(\r\n+                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n+                                                                          ))),\r\n+                                                                )),\r\n+                                                          ),\r\n+                                                        );\r\n+                                                      },\r\n+                                                    );\r\n+                                                  },\r\n+                                                  title: Row(\r\n+                                                    children: [\r\n+                                                      IconButton(\r\n+                                                          onPressed: () {\r\n+                                                            Provider.of<NewInboxProvider>(\r\n+                                                                    context,\r\n+                                                                    listen:\r\n+                                                                        false)\r\n+                                                                .imagesFiles\r\n+                                                                .removeAt(\r\n+                                                                    index);\r\n+                                                            setState(() {});\r\n+                                                          },\r\n+                                                          icon: const Icon(\r\n+                                                            Icons\r\n+                                                                .delete_outline_rounded,\r\n+                                                            color: Colors.red,\r\n+                                                          )),\r\n+                                                      Container(\r\n+                                                        margin: const EdgeInsets\r\n+                                                            .all(7),\r\n+                                                        width: 38,\r\n+                                                        height: 40,\r\n+                                                        decoration:\r\n+                                                            BoxDecoration(\r\n+                                                                border: Border.all(\r\n+                                                                    color: Colors\r\n+                                                                        .black),\r\n+                                                                borderRadius:\r\n+                                                                    BorderRadius\r\n+                                                                        .circular(\r\n+                                                                            11),\r\n+                                                                image:\r\n+                                                                    DecorationImage(\r\n+                                                                        fit: BoxFit\r\n+                                                                            .cover,\r\n+                                                                        image:\r\n+                                                                            FileImage(\r\n+                                                                          File(Provider.of<NewInboxProvider>(context)\r\n+                                                                              .imagesFiles[index]!\r\n+                                                                              .path),\r\n+                                                                        ))),\r\n+                                                      ),\r\n+                                                      SizedBox(\r\n+                                                        width: 150,\r\n+                                                        child: Text(\r\n+                                                          Provider.of<NewInboxProvider>(\r\n+                                                                  context)\r\n+                                                              .imagesFiles[\r\n+                                                                  index]!\r\n+                                                              .name,\r\n+                                                          maxLines: 1,\r\n+                                                          overflow: TextOverflow\r\n+                                                              .ellipsis,\r\n+                                                          style:\r\n+                                                              const TextStyle(\r\n+                                                                  fontSize: 17),\r\n+                                                        ),\r\n+                                                      )\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                );\r\n+                                              },\r\n+                                            ),\r\n+                                          )\r\n+                                        : const SizedBox(),\r\n+                                  ],\r\n+                                ),\r\n+                              ),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                      const ActivitesExpansionTile(),\r\n+                      Padding(\r\n+                        padding: const EdgeInsetsDirectional.only(\r\n+                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n+                        child: TextField(\r\n+                          controller: activityTextFieldController,\r\n+                          decoration: InputDecoration(\r\n+                            suffixIcon: IconButton(\r\n+                                onPressed: () {\r\n+                                  setState(() {\r\n+                                    Provider.of<NewInboxProvider>(context,\r\n+                                            listen: false)\r\n+                                        .addActivity(\r\n+                                            activityTextFieldController.text,\r\n+                                            user.user.id.toString());\r\n+                                    activityTextFieldController.clear();\r\n+                                  });\r\n+                                },\r\n+                                icon: Icon(\r\n+                                  Icons.send,\r\n+                                  color: primaryColor,\r\n+                                )),\r\n+                            //should be replaced with profie image\r\n+                            prefixIcon: const Icon(Icons.person),\r\n+                            filled: true,\r\n+                            fillColor: Colors.black.withOpacity(0.05),\r\n+                            contentPadding: const EdgeInsets.all(15),\r\n+                            hintText: \"Add new activity ...\",\r\n+                            hintStyle: const TextStyle(\r\n+                                color: Colors.grey, fontSize: 17),\r\n+                            enabledBorder: UnderlineInputBorder(\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                            ),\r\n+                            focusedBorder: UnderlineInputBorder(\r\n+                              borderRadius: BorderRadius.circular(30),\r\n+                              borderSide: BorderSide(color: backGroundColor),\r\n+                            ),\r\n+                          ),\r\n+                        ),\r\n+                      ),\r\n+                    ],\r\n+                  )\r\n+                ],\r\n+              ),\r\n+            ),\r\n+          ],\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694852181989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -413,9 +413,9 @@\n                                     ),\r\n                                     const SizedBox(\r\n                                       width: 12,\r\n                                     ),\r\n-                                    SizedBox\r\n+                                    SizedBox()\r\n                                     SizedBox(\r\n                                       width: 250,\r\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n"
                },
                {
                    "date": 1694852313487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -418,9 +418,9 @@\n                                       'Tags',\r\n                                       style: TextStyle(\r\n                                           fontSize: 20, color: Colors.black),\r\n                                     ),\r\n-                                    SizedBox(''),\r\n+                                    SizedBox(width: 10,),\r\n                                     SizedBox(\r\n                                       width: 250,\r\n                                       height: 32,\r\n                                       child: ListView.separated(\r\n"
                }
            ],
            "date": 1694813337933,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\nimport 'package:final_projectt/Screens/home.dart';\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/services/new_inbox_controller.dart';\r\nimport 'package:final_projectt/core/services/user_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/activites_expansion_tile.dart';\r\nimport 'package:final_projectt/core/widgets/categories_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/custom_box.dart';\r\nimport 'package:final_projectt/core/widgets/custum_textfield.dart';\r\nimport 'package:final_projectt/core/widgets/date_picker.dart';\r\nimport 'package:final_projectt/core/widgets/senders_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/show_alert.dart';\r\nimport 'package:final_projectt/core/widgets/status_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/tags_bottom_sheet.dart';\r\nimport 'package:final_projectt/models/catego_model.dart';\r\nimport 'package:final_projectt/models/mail_model.dart';\r\nimport 'package:final_projectt/models/sender_model.dart';\r\nimport 'package:final_projectt/models/status_model.dart';\r\nimport 'package:final_projectt/models/tags_model.dart';\r\nimport 'package:final_projectt/models/user_model.dart';\r\nimport 'package:final_projectt/providers/new_inbox_provider.dart';\r\nimport 'package:final_projectt/providers/status_provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:image_picker/image_picker.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass EditMailBottomSheet extends StatefulWidget {\r\n  Mail mail;\r\n  EditMailBottomSheet({required this.mail});\r\n\r\n  @override\r\n  State<EditMailBottomSheet> createState() => _EditMailBottomSheetState();\r\n}\r\n\r\nclass _EditMailBottomSheetState extends State<EditMailBottomSheet> {\r\n  TextEditingController senderNameCont = TextEditingController();\r\n  TextEditingController senderMobileCont = TextEditingController();\r\n  TextEditingController mailTitleCont = TextEditingController();\r\n  TextEditingController mailDescriptionCont = TextEditingController();\r\n  TextEditingController archiveNumberCont = TextEditingController();\r\n  bool isExpansionOpened = false;\r\n\r\n  SingleSender? selectedSender;\r\n  List<TagElement> selectedTags = [];\r\n\r\n  TextEditingController decisionCont = TextEditingController();\r\n  TextEditingController activityTextFieldController = TextEditingController();\r\n  late UserModel user;\r\n  final _formKey = GlobalKey<FormState>();\r\n  late String category = 'Other';\r\n  DateTime? date;\r\n  bool isValidationShown = false;\r\n  late StatusMod selectedStatus = StatusMod(\r\n      id: 1,\r\n      name: 'Inbox',\r\n      color: '0xfffa3a57',\r\n      createdAt: '',\r\n      updatedAt: '',\r\n      mailsCount: '');\r\n\r\n  getUser() async {\r\n    user = await UserController().getLocalUser();\r\n  }\r\n\r\n  void intializeData() {\r\n    if (widget.mail.archiveDate != null) {\r\n      date = DateTime.parse(widget.mail.archiveDate!);\r\n    } else {\r\n      debugPrint('archive date is null');\r\n    }\r\n    if (widget.mail.tags != null) {\r\n      List<TagElement> tags = widget.mail.tags!.map((tag) {\r\n        return TagElement(\r\n          id: tag.id!,\r\n          name: tag.name!,\r\n          createdAt: tag.createdAt!,\r\n          updatedAt: tag.updatedAt!,\r\n        );\r\n      }).toList();\r\n      selectedTags = tags;\r\n    } else {\r\n      debugPrint('archive date is null');\r\n    }\r\n    if (widget.mail.attachments!.isNotEmpty) {\r\n      Provider.of<NewInboxProvider>(context, listen: false)\r\n          .setNetworkImagesList(widget.mail.attachments!);\r\n    } else {\r\n      debugPrint('attachments is null');\r\n    }\r\n\r\n    // if (widget.mail.activities!.isNotEmpty) {\r\n    //   List<Map<String, dynamic>>? activites =\r\n    //       widget.mail.activities!.map((activity) {\r\n    //     return {\r\n    //       'body': activity.body,\r\n    //       'user_id': activity.id,\r\n    //     };\r\n    //   }).toList();\r\n    //   Provider.of<NewInboxProvider>(context, listen: false)\r\n    //       .setActivitesList(activites);\r\n    // } else {\r\n    //   debugPrint('activites is null');\r\n    // }\r\n    if (widget.mail.status != null) {\r\n      final status = widget.mail.status!;\r\n      selectedStatus = StatusMod(\r\n        color: status.color,\r\n        id: status.id,\r\n        name: status.name,\r\n      );\r\n    } else {\r\n      debugPrint('status is null');\r\n    }\r\n    // selectedTags = widget.mail.tags!;\r\n    decisionCont.text = widget.mail.decision ?? '';\r\n  }\r\n\r\n  @override\r\n  void initState() {\r\n    intializeData();\r\n\r\n    getUser();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    int year = date!.year;\r\n    int today = date!.day;\r\n    dynamic month = getMonth(date!);\r\n    return Padding(\r\n      padding:\r\n          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n      child: SizedBox(\r\n        height: MediaQuery.of(context).size.height - 55,\r\n        child: Column(\r\n          children: [\r\n            Padding(\r\n              padding: const EdgeInsets.all(10.0),\r\n              child: Row(\r\n                mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                children: [\r\n                  TextButton(\r\n                    style: TextButton.styleFrom(\r\n                        padding: EdgeInsets.zero,\r\n                        minimumSize: Size(50, 30),\r\n                        tapTargetSize: MaterialTapTargetSize.shrinkWrap,\r\n                        alignment: Alignment.centerLeft),\r\n                    onPressed: () => Navigator.pop(context),\r\n                    child: Icon(\r\n                      Icons.arrow_back_ios,\r\n                      color: primaryColor,\r\n                    ),\r\n                  ),\r\n                  const Text(\r\n                    'Mail Details',\r\n                    style: TextStyle(fontSize: 20, color: Color(0xFF272727)),\r\n                  ),\r\n                  TextButton(\r\n                    onPressed: () async {\r\n                      Provider.of<NewInboxProvider>(context, listen: false)\r\n                                  .imagesFiles\r\n                                  .length >\r\n                              0\r\n                          ? await uploadImages(context, widget.mail.id!)\r\n                          : null;\r\n                      await updateMail(\r\n                        mailId: widget.mail.id,\r\n                        idAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n                                context,\r\n                                listen: false)\r\n                            .deletedImages\r\n                            .map((image) {\r\n                          return image!.id!;\r\n                        }).toList(),\r\n                        pathAttachmentsForDelete: Provider.of<NewInboxProvider>(\r\n                                context,\r\n                                listen: false)\r\n                            .deletedImages\r\n                            .map((image) {\r\n                          return image!.image!;\r\n                        }).toList(),\r\n                        statusId: selectedStatus.id.toString(),\r\n                        decision: decisionCont.text,\r\n                        finalDecision: decisionCont.text,\r\n                        activities: Provider.of<NewInboxProvider>(context,\r\n                                listen: false)\r\n                            .activites,\r\n                        tags: selectedTags.map((tag) => tag.id).toList(),\r\n                      );\r\n\r\n                      showAlert(\r\n                        context,\r\n                        message: 'Mail Updated Successfully',\r\n                        color: primaryColor.withOpacity(0.8),\r\n                        width: 230,\r\n                      );\r\n\r\n                      selectedTags = [];\r\n\r\n                      final updateData =\r\n                          Provider.of<StatuseProvider>(context, listen: false);\r\n                      updateData.updatestutas();\r\n\r\n                      Navigator.of(context).pushReplacement(MaterialPageRoute(\r\n                        builder: (context) {\r\n                          return MainPage();\r\n                        },\r\n                      ));\r\n                    },\r\n                    child: const Text('Done', style: TextStyle(fontSize: 20)),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n            Expanded(\r\n              child: ListView(\r\n                physics: BouncingScrollPhysics(),\r\n                children: [\r\n                  Column(\r\n                    mainAxisAlignment: MainAxisAlignment.center,\r\n                    crossAxisAlignment: CrossAxisAlignment.center,\r\n                    children: [\r\n                      AnimatedContainer(\r\n                        height: isExpansionOpened ? 175 : 150,\r\n                        width: 400,\r\n                        duration: Duration(milliseconds: 300),\r\n                        child: CustomWhiteBox(\r\n                            width: 400,\r\n                            height: 180,\r\n                            child: Padding(\r\n                              padding: const EdgeInsetsDirectional.only(\r\n                                  start: 15.0, top: 10),\r\n                              child: SingleChildScrollView(\r\n                                child: Column(\r\n                                  children: [\r\n                                    Row(\r\n                                      mainAxisAlignment:\r\n                                          MainAxisAlignment.spaceBetween,\r\n                                      children: [\r\n                                        Column(\r\n                                          crossAxisAlignment:\r\n                                              CrossAxisAlignment.start,\r\n                                          children: [\r\n                                            Row(\r\n                                              children: [\r\n                                                Icon(\r\n                                                  Icons.person_2_outlined,\r\n                                                  size: 20,\r\n                                                ),\r\n                                                SizedBox(\r\n                                                  width: 10,\r\n                                                ),\r\n                                                Text(\r\n                                                  '${widget.mail.sender!.name}',\r\n                                                  style: TextStyle(\r\n                                                      fontSize: 15,\r\n                                                      fontWeight:\r\n                                                          FontWeight.w600),\r\n                                                ),\r\n                                              ],\r\n                                            ),\r\n                                            Padding(\r\n                                              padding:\r\n                                                  const EdgeInsetsDirectional\r\n                                                          .only(\r\n                                                      top: 10.0, start: 35),\r\n                                              child: Text(\r\n                                                '${widget.mail.sender!.category!.name}',\r\n                                                style: TextStyle(fontSize: 14),\r\n                                              ),\r\n                                            )\r\n                                          ],\r\n                                        ),\r\n                                        Container(\r\n                                          margin: EdgeInsetsDirectional.only(\r\n                                              top: 5),\r\n                                          width: 1,\r\n                                          height: 50,\r\n                                          color: Colors.grey.shade300,\r\n                                        ),\r\n                                        Column(\r\n                                          mainAxisAlignment:\r\n                                              MainAxisAlignment.spaceBetween,\r\n                                          crossAxisAlignment:\r\n                                              CrossAxisAlignment.start,\r\n                                          children: [\r\n                                            Padding(\r\n                                              padding:\r\n                                                  const EdgeInsetsDirectional\r\n                                                          .only(\r\n                                                      top: 10, bottom: 10),\r\n                                              child: Text(\r\n                                                '$today $month $year',\r\n                                                style: TextStyle(\r\n                                                  fontSize: 14,\r\n                                                ),\r\n                                              ),\r\n                                            ),\r\n                                            SizedBox(\r\n                                              width: 150,\r\n                                              child: Text(\r\n                                                'Archive Number: ${widget.mail.archiveNumber}',\r\n                                                overflow: TextOverflow.ellipsis,\r\n                                                maxLines: 1,\r\n                                                style: TextStyle(fontSize: 14),\r\n                                              ),\r\n                                            )\r\n                                          ],\r\n                                        ),\r\n                                      ],\r\n                                    ),\r\n                                    Container(\r\n                                      margin:\r\n                                          EdgeInsetsDirectional.only(top: 15),\r\n                                      width: MediaQuery.sizeOf(context).width,\r\n                                      height: 1,\r\n                                      color: Colors.grey.shade300,\r\n                                    ),\r\n                                    Theme(\r\n                                      data: Theme.of(context).copyWith(\r\n                                          dividerColor: Colors.transparent),\r\n                                      child: ListTileTheme(\r\n                                        contentPadding:\r\n                                            EdgeInsetsDirectional.only(\r\n                                                start: 10),\r\n                                        dense: true,\r\n                                        child: ExpansionTile(\r\n                                            onExpansionChanged: (value) {\r\n                                              setState(() {\r\n                                                isExpansionOpened = value;\r\n                                              });\r\n                                            },\r\n                                            textColor: const Color(0xff272727),\r\n                                            trailing: SizedBox(\r\n                                              width: 60,\r\n                                              child: Center(\r\n                                                child: Icon(\r\n                                                  !isExpansionOpened\r\n                                                      ? Icons\r\n                                                          .arrow_forward_ios_rounded\r\n                                                      : Icons\r\n                                                          .keyboard_arrow_up_rounded,\r\n                                                  size: isExpansionOpened\r\n                                                      ? 30\r\n                                                      : 20,\r\n                                                  color: !isExpansionOpened\r\n                                                      ? Colors.grey\r\n                                                      : primaryColor,\r\n                                                ),\r\n                                              ),\r\n                                            ),\r\n                                            initiallyExpanded: false,\r\n                                            title: Text(\r\n                                              widget.mail.subject!,\r\n                                              style: const TextStyle(\r\n                                                  fontSize: 18,\r\n                                                  fontWeight: FontWeight.bold),\r\n                                            ),\r\n                                            children: [\r\n                                              Text(\r\n                                                widget.mail.description == ''\r\n                                                    ? '${widget.mail.description}'\r\n                                                    : 'No Description',\r\n                                                style: TextStyle(fontSize: 16),\r\n                                              )\r\n                                            ]),\r\n                                      ),\r\n                                    )\r\n                                  ],\r\n                                ),\r\n                              ),\r\n                            )),\r\n                      ),\r\n                      GestureDetector(\r\n                        onTap: () async {\r\n                          final selectedTags =\r\n                              await showModalBottomSheet<List<TagElement>>(\r\n                                  clipBehavior: Clip.hardEdge,\r\n                                  isScrollControlled: true,\r\n                                  context: context,\r\n                                  shape: const RoundedRectangleBorder(\r\n                                      borderRadius: BorderRadius.vertical(\r\n                                    top: Radius.circular(15.0),\r\n                                  )),\r\n                                  builder: (BuildContext context) {\r\n                                    return StatefulBuilder(builder:\r\n                                        (BuildContext context,\r\n                                            StateSetter setState) {\r\n                                      return TagsBottomSheet();\r\n                                    });\r\n                                  });\r\n                          setState(() {\r\n                            if (selectedTags != null) {\r\n                              this.selectedTags = selectedTags;\r\n                            }\r\n                          });\r\n                        },\r\n                        child: CustomWhiteBox(\r\n                          width: 378,\r\n                          height: 56,\r\n                          child: const Padding(\r\n                            padding: EdgeInsetsDirectional.only(\r\n                              start: 20.0,\r\n                              end: 20.0,\r\n                            ),\r\n                            child: Row(\r\n                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                              children: [\r\n                                Row(\r\n                                  children: [\r\n                                    Icon(\r\n                                      Icons.tag,\r\n                                      size: 23,\r\n                                    ),\r\n                                    SizedBox(\r\n                                      width: 12,\r\n                                    ),\r\n                                    Text(\r\n                                      'Tags',\r\n                                      style: TextStyle(\r\n                                          color: Colors.black,\r\n                                          fontFamily: 'Iphone',\r\n                                          fontSize: 20),\r\n                                    ),\r\n                                  ],\r\n                                ),\r\n                                Icon(\r\n                                  Icons.arrow_forward_ios_rounded,\r\n                                  color: Colors.grey,\r\n                                  size: 22,\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                      GestureDetector(\r\n                        onTap: () async {\r\n                          final selectedStatus =\r\n                              await showModalBottomSheet<StatusMod>(\r\n                            clipBehavior: Clip.hardEdge,\r\n                            isScrollControlled: true,\r\n                            context: context,\r\n                            shape: const RoundedRectangleBorder(\r\n                              borderRadius: BorderRadius.vertical(\r\n                                top: Radius.circular(15.0),\r\n                              ),\r\n                            ),\r\n                            builder: (BuildContext context) {\r\n                              return StatusesBottomSheet(\r\n                                status: StatusMod(\r\n                                  color: widget.mail.status!.color,\r\n                                  id: widget.mail.status!.id,\r\n                                  name: widget.mail.status!.name,\r\n                                ),\r\n                              );\r\n                            },\r\n                          );\r\n                         \r\n                        },\r\n                        child: CustomWhiteBox(\r\n                          width: 378,\r\n                          height: 56,\r\n                          child: Padding(\r\n                            padding: EdgeInsetsDirectional.only(\r\n                              start: 20.0,\r\n                              end: 20.0,\r\n                            ),\r\n                            child: Row(\r\n                              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                              children: [\r\n                                Row(\r\n                                  children: [\r\n                                    SizedBox(\r\n                                      width: 25,\r\n                                      height: 25,\r\n                                      child: Image.asset(\r\n                                        'images/Tag.png',\r\n                                        color: Colors.grey,\r\n                                      ),\r\n                                    ),\r\n                                    SizedBox(\r\n                                      width: 15,\r\n                                    ),\r\n                                    SizedBox(\r\n                                      width: 250,\r\n                                      height: 32,\r\n                                      child: ListView.separated(\r\n                                        scrollDirection: Axis.horizontal,\r\n                                        itemBuilder: (context, index) {\r\n                                          final statusText =\r\n                                              selectedStatus.name;\r\n                                          final textLength = statusText!.length;\r\n                                          final statusWidth =\r\n                                              40.0 + (textLength * 7.0);\r\n                                          return Container(\r\n                                            alignment: Alignment.center,\r\n                                            width: statusWidth,\r\n                                            decoration: BoxDecoration(\r\n                                              color: Color(int.parse(\r\n                                                  selectedStatus.color!)),\r\n                                              borderRadius:\r\n                                                  BorderRadius.circular(30),\r\n                                            ),\r\n                                            child: Text(\r\n                                              '${selectedStatus.name}',\r\n                                              style: TextStyle(\r\n                                                  fontSize: 18,\r\n                                                  color: Colors.white),\r\n                                            ),\r\n                                          );\r\n                                        },\r\n                                        itemCount: 1,\r\n                                        separatorBuilder: (context, index) {\r\n                                          return SizedBox(\r\n                                            width: 10,\r\n                                          );\r\n                                        },\r\n                                      ),\r\n                                    )\r\n                                  ],\r\n                                ),\r\n                                Icon(\r\n                                  Icons.arrow_forward_ios_rounded,\r\n                                  color: Colors.grey,\r\n                                  size: 22,\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                      CustomWhiteBox(\r\n                        width: 378,\r\n                        height: 110,\r\n                        child: Column(\r\n                          crossAxisAlignment: CrossAxisAlignment.start,\r\n                          children: [\r\n                            const Padding(\r\n                              padding: EdgeInsetsDirectional.only(\r\n                                start: 25.0,\r\n                                end: 20.0,\r\n                                top: 20.0,\r\n                              ),\r\n                              child: Text(\r\n                                'Descision',\r\n                                style: TextStyle(\r\n                                  fontSize: 20,\r\n                                  color: Colors.black,\r\n                                ),\r\n                              ),\r\n                            ),\r\n                            Padding(\r\n                              padding: const EdgeInsetsDirectional.only(\r\n                                  start: 10.0, end: 10.0),\r\n                              child: TextFormField(\r\n                                onChanged: (value) {\r\n                                  Provider.of<NewInboxProvider>(context,\r\n                                          listen: false)\r\n                                      .setArchiveNumber(value);\r\n                                },\r\n                                controller: decisionCont,\r\n                                decoration: const InputDecoration(\r\n                                  contentPadding: EdgeInsets.symmetric(\r\n                                      vertical: 20, horizontal: 40),\r\n                                  border: InputBorder.none,\r\n                                  hintText: \"Add Decsision ...\",\r\n                                  hintStyle: TextStyle(\r\n                                    color: Colors.grey,\r\n                                    fontFamily: 'Iphone',\r\n                                    fontSize: 19,\r\n                                    fontWeight: FontWeight.w500,\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                            ),\r\n                          ],\r\n                        ),\r\n                      ),\r\n                      GestureDetector(\r\n                        onTap: () {\r\n                          Provider.of<NewInboxProvider>(context, listen: false)\r\n                              .getImagesFromGallery();\r\n                        },\r\n                        child: AnimatedContainer(\r\n                          height: Provider.of<NewInboxProvider>(context)\r\n                                          .networkImagesFiles\r\n                                          .length >\r\n                                      0 ||\r\n                                  Provider.of<NewInboxProvider>(context)\r\n                                          .imagesFiles\r\n                                          .length >\r\n                                      0\r\n                              ? 95 +\r\n                                  (((Provider.of<NewInboxProvider>(context)\r\n                                              .networkImagesFiles\r\n                                              .length) +\r\n                                          (Provider.of<NewInboxProvider>(\r\n                                                  context)\r\n                                              .imagesFiles\r\n                                              .length)) *\r\n                                      57)\r\n                              : 75.0,\r\n                          duration: Duration(milliseconds: 300),\r\n                          child: CustomWhiteBox(\r\n                            width: 378,\r\n                            height: 120,\r\n                            child: SingleChildScrollView(\r\n                              physics: NeverScrollableScrollPhysics(),\r\n                              child: Padding(\r\n                                padding: EdgeInsetsDirectional.only(\r\n                                  top: 20,\r\n                                  start: 20.0,\r\n                                  end: 20.0,\r\n                                ),\r\n                                child: Column(\r\n                                  crossAxisAlignment: CrossAxisAlignment.start,\r\n                                  children: [\r\n                                    Row(\r\n                                      mainAxisAlignment:\r\n                                          MainAxisAlignment.spaceBetween,\r\n                                      children: [\r\n                                        Row(\r\n                                          children: [\r\n                                            Icon(\r\n                                              Icons.image,\r\n                                              color: Colors.blueGrey,\r\n                                              size: 23,\r\n                                            ),\r\n                                            SizedBox(\r\n                                              width: 12,\r\n                                            ),\r\n                                            Text(\r\n                                              'Add image',\r\n                                              style: TextStyle(\r\n                                                  color: primaryColor,\r\n                                                  fontFamily: 'Iphone',\r\n                                                  fontSize: 20),\r\n                                            ),\r\n                                          ],\r\n                                        ),\r\n                                        Icon(\r\n                                          Icons.arrow_forward_ios_rounded,\r\n                                          color: Colors.grey,\r\n                                          size: 22,\r\n                                        ),\r\n                                      ],\r\n                                    ),\r\n                                    Provider.of<NewInboxProvider>(context)\r\n                                            .networkImagesFiles\r\n                                            .isNotEmpty\r\n                                        ? SizedBox(\r\n                                            height: 20 +\r\n                                                ((Provider.of<NewInboxProvider>(\r\n                                                            context)\r\n                                                        .networkImagesFiles\r\n                                                        .length) *\r\n                                                    55),\r\n                                            child: ListView.builder(\r\n                                              shrinkWrap: true,\r\n                                              padding: EdgeInsets.zero,\r\n                                              physics:\r\n                                                  NeverScrollableScrollPhysics(),\r\n                                              itemCount:\r\n                                                  Provider.of<NewInboxProvider>(\r\n                                                          context)\r\n                                                      .networkImagesFiles\r\n                                                      .length,\r\n                                              itemBuilder: (context, index) {\r\n                                                return ListTile(\r\n                                                  onTap: () {\r\n                                                    showDialog(\r\n                                                      barrierDismissible: true,\r\n                                                      context: context,\r\n                                                      builder: (context) {\r\n                                                        return Align(\r\n                                                          alignment:\r\n                                                              Alignment.center,\r\n                                                          child:\r\n                                                              SingleChildScrollView(\r\n                                                            child: AlertDialog(\r\n                                                                backgroundColor:\r\n                                                                    Colors\r\n                                                                        .transparent,\r\n                                                                titlePadding:\r\n                                                                    EdgeInsets\r\n                                                                        .zero,\r\n                                                                title:\r\n                                                                    Container(\r\n                                                                  width: 200,\r\n                                                                  height: MediaQuery.sizeOf(\r\n                                                                              context)\r\n                                                                          .height -\r\n                                                                      250,\r\n                                                                  decoration: BoxDecoration(\r\n                                                                      borderRadius:\r\n                                                                          BorderRadius.circular(\r\n                                                                              30),\r\n                                                                      image: DecorationImage(\r\n                                                                          fit: BoxFit\r\n                                                                              .cover,\r\n                                                                          image:\r\n                                                                              NetworkImage('https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n                                                                )),\r\n                                                          ),\r\n                                                        );\r\n                                                      },\r\n                                                    );\r\n                                                  },\r\n                                                  title: Row(\r\n                                                    children: [\r\n                                                      IconButton(\r\n                                                          onPressed: () {\r\n                                                            final provider =\r\n                                                                Provider.of<\r\n                                                                        NewInboxProvider>(\r\n                                                                    context,\r\n                                                                    listen:\r\n                                                                        false);\r\n                                                            provider\r\n                                                                .deletedImages\r\n                                                                .add(provider\r\n                                                                        .networkImagesFiles[\r\n                                                                    index]!);\r\n                                                            print(provider\r\n                                                                .deletedImages);\r\n                                                            provider\r\n                                                                .networkImagesFiles\r\n                                                                .removeAt(\r\n                                                                    index);\r\n                                                            setState(() {});\r\n                                                          },\r\n                                                          icon: Icon(\r\n                                                            Icons\r\n                                                                .delete_outline_rounded,\r\n                                                            color: Colors.red,\r\n                                                          )),\r\n                                                      Container(\r\n                                                        margin:\r\n                                                            EdgeInsets.all(7),\r\n                                                        width: 38,\r\n                                                        height: 40,\r\n                                                        decoration: BoxDecoration(\r\n                                                            border: Border.all(\r\n                                                                color: Colors\r\n                                                                    .black),\r\n                                                            borderRadius:\r\n                                                                BorderRadius\r\n                                                                    .circular(\r\n                                                                        11),\r\n                                                            image: DecorationImage(\r\n                                                                fit: BoxFit\r\n                                                                    .cover,\r\n                                                                image: NetworkImage(\r\n                                                                    'https://palmail.gsgtt.tech/storage/${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.image}'))),\r\n                                                      ),\r\n                                                      SizedBox(\r\n                                                        width: 150,\r\n                                                        child: Text(\r\n                                                          '${Provider.of<NewInboxProvider>(context).networkImagesFiles[index]!.title}',\r\n                                                          maxLines: 1,\r\n                                                          overflow: TextOverflow\r\n                                                              .ellipsis,\r\n                                                          style: TextStyle(\r\n                                                              fontSize: 17),\r\n                                                        ),\r\n                                                      )\r\n                                                    ],\r\n                                                  ),\r\n                                                );\r\n                                              },\r\n                                            ),\r\n                                          )\r\n                                        : SizedBox(),\r\n                                    Provider.of<NewInboxProvider>(context)\r\n                                            .imagesFiles\r\n                                            .isNotEmpty\r\n                                        ? SizedBox(\r\n                                            height: 55 +\r\n                                                ((Provider.of<NewInboxProvider>(\r\n                                                            context)\r\n                                                        .imagesFiles\r\n                                                        .length) *\r\n                                                    57),\r\n                                            child: ListView.builder(\r\n                                              padding: EdgeInsets.zero,\r\n                                              shrinkWrap: true,\r\n                                              itemCount:\r\n                                                  Provider.of<NewInboxProvider>(\r\n                                                          context)\r\n                                                      .imagesFiles\r\n                                                      .length,\r\n                                              itemBuilder: (context, index) {\r\n                                                return ListTile(\r\n                                                  onTap: () {\r\n                                                    showDialog(\r\n                                                      barrierDismissible: true,\r\n                                                      context: context,\r\n                                                      builder: (context) {\r\n                                                        return Align(\r\n                                                          alignment:\r\n                                                              Alignment.center,\r\n                                                          child:\r\n                                                              SingleChildScrollView(\r\n                                                            child: AlertDialog(\r\n                                                                backgroundColor:\r\n                                                                    Colors\r\n                                                                        .transparent,\r\n                                                                titlePadding:\r\n                                                                    EdgeInsets\r\n                                                                        .zero,\r\n                                                                title:\r\n                                                                    Container(\r\n                                                                  width: 200,\r\n                                                                  height: MediaQuery.sizeOf(\r\n                                                                              context)\r\n                                                                          .height -\r\n                                                                      250,\r\n                                                                  decoration: BoxDecoration(\r\n                                                                      borderRadius: BorderRadius.circular(30),\r\n                                                                      image: DecorationImage(\r\n                                                                          fit: BoxFit.cover,\r\n                                                                          image: FileImage(\r\n                                                                            File(Provider.of<NewInboxProvider>(context).imagesFiles[index]!.path),\r\n                                                                          ))),\r\n                                                                )),\r\n                                                          ),\r\n                                                        );\r\n                                                      },\r\n                                                    );\r\n                                                  },\r\n                                                  title: Row(\r\n                                                    children: [\r\n                                                      IconButton(\r\n                                                          onPressed: () {\r\n                                                            Provider.of<NewInboxProvider>(\r\n                                                                    context,\r\n                                                                    listen:\r\n                                                                        false)\r\n                                                                .imagesFiles\r\n                                                                .removeAt(\r\n                                                                    index);\r\n                                                            setState(() {});\r\n                                                          },\r\n                                                          icon: Icon(\r\n                                                            Icons\r\n                                                                .delete_outline_rounded,\r\n                                                            color: Colors.red,\r\n                                                          )),\r\n                                                      Container(\r\n                                                        margin:\r\n                                                            EdgeInsets.all(7),\r\n                                                        width: 38,\r\n                                                        height: 40,\r\n                                                        decoration:\r\n                                                            BoxDecoration(\r\n                                                                border: Border.all(\r\n                                                                    color: Colors\r\n                                                                        .black),\r\n                                                                borderRadius:\r\n                                                                    BorderRadius\r\n                                                                        .circular(\r\n                                                                            11),\r\n                                                                image:\r\n                                                                    DecorationImage(\r\n                                                                        fit: BoxFit\r\n                                                                            .cover,\r\n                                                                        image:\r\n                                                                            FileImage(\r\n                                                                          File(Provider.of<NewInboxProvider>(context)\r\n                                                                              .imagesFiles[index]!\r\n                                                                              .path),\r\n                                                                        ))),\r\n                                                      ),\r\n                                                      SizedBox(\r\n                                                        width: 150,\r\n                                                        child: Text(\r\n                                                          '${Provider.of<NewInboxProvider>(context).imagesFiles[index]!.name}',\r\n                                                          maxLines: 1,\r\n                                                          overflow: TextOverflow\r\n                                                              .ellipsis,\r\n                                                          style: TextStyle(\r\n                                                              fontSize: 17),\r\n                                                        ),\r\n                                                      )\r\n                                                    ],\r\n                                                  ),\r\n                                                );\r\n                                              },\r\n                                            ),\r\n                                          )\r\n                                        : SizedBox(),\r\n                                  ],\r\n                                ),\r\n                              ),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                      const ActivitesExpansionTile(),\r\n                      Padding(\r\n                        padding: const EdgeInsetsDirectional.only(\r\n                            start: 20.0, end: 20.0, bottom: 20, top: 15),\r\n                        child: TextField(\r\n                          controller: activityTextFieldController,\r\n                          decoration: InputDecoration(\r\n                            suffixIcon: IconButton(\r\n                                onPressed: () {\r\n                                  setState(() {\r\n                                    Provider.of<NewInboxProvider>(context,\r\n                                            listen: false)\r\n                                        .addActivity(\r\n                                            activityTextFieldController.text,\r\n                                            user.user.id.toString());\r\n                                    activityTextFieldController.clear();\r\n                                  });\r\n                                },\r\n                                icon: Icon(\r\n                                  Icons.send,\r\n                                  color: primaryColor,\r\n                                )),\r\n                            //should be replaced with profie image\r\n                            prefixIcon: Icon(Icons.person),\r\n                            filled: true,\r\n                            fillColor: Colors.black.withOpacity(0.05),\r\n                            contentPadding: EdgeInsets.all(15),\r\n                            hintText: \"Add new activity ...\",\r\n                            hintStyle: const TextStyle(\r\n                                color: Colors.grey, fontSize: 17),\r\n                            enabledBorder: UnderlineInputBorder(\r\n                              borderSide: BorderSide(color: backGroundColor),\r\n                              borderRadius: BorderRadius.circular(30),\r\n                            ),\r\n                            focusedBorder: UnderlineInputBorder(\r\n                              borderRadius: BorderRadius.circular(30),\r\n                              borderSide: BorderSide(color: backGroundColor),\r\n                            ),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  )\r\n                ],\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}