{
    "sourceFile": "lib/core/widgets/tags_bottom_sheet.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1694851416821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694851473019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n import 'package:final_projectt/models/tags_model.dart';\r\n import 'package:flutter/material.dart';\r\n \r\n class TagsBottomSheet extends StatefulWidget {\r\n+  const TagsBottomSheet({super.key});\r\n+\r\n   @override\r\n   State<TagsBottomSheet> createState() => _TagsBottomSheetState();\r\n }\r\n \r\n@@ -45,9 +47,9 @@\n                     Icons.arrow_back_ios_new_rounded,\r\n                     color: primaryColor,\r\n                   ),\r\n                 ),\r\n-                Center(\r\n+                const Center(\r\n                   child: Text(\r\n                     'Tags',\r\n                     style: TextStyle(\r\n                       color: Colors.black,\r\n@@ -58,9 +60,9 @@\n                 IconButton(\r\n                   onPressed: () {\r\n                     Navigator.pop(context);\r\n                   },\r\n-                  icon: Icon(\r\n+                  icon: const Icon(\r\n                     Icons.arrow_back_ios_new_rounded,\r\n                     color: Colors.transparent,\r\n                   ),\r\n                 ),\r\n@@ -78,9 +80,9 @@\n                 );\r\n               } else if (snapshot.hasError) {\r\n                 return Text(snapshot.error.toString());\r\n               } else if (!snapshot.hasData || snapshot.data!.tags.isEmpty) {\r\n-                return Center(\r\n+                return const Center(\r\n                   child: Text('No data available.'),\r\n                 );\r\n               }\r\n \r\n@@ -97,10 +99,10 @@\n                         selectedTags.removeWhere(\r\n                             (selectedTag) => selectedTag.id == tag.id);\r\n                       } else {\r\n                         selectedTags.add(tag);\r\n-                        set\r\n-                      }\r\n+                        setState(() {});\r\n+                      \r\n                     });\r\n                   },\r\n                   child: Container(\r\n                     alignment: Alignment.center,\r\n@@ -168,9 +170,10 @@\n                     ),\r\n                   ),\r\n                 ),\r\n                 fillColor: boxColor,\r\n-                contentPadding: EdgeInsetsDirectional.only(start: 15, top: 15),\r\n+                contentPadding:\r\n+                    const EdgeInsetsDirectional.only(start: 15, top: 15),\r\n                 hintText: \"Add new tag ...\",\r\n                 hintStyle: const TextStyle(color: Colors.grey, fontSize: 19),\r\n                 enabledBorder: OutlineInputBorder(\r\n                   borderSide: BorderSide(color: Colors.grey.shade300),\r\n"
                },
                {
                    "date": 1694851484584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,11 +97,12 @@\n                     setState(() {\r\n                       if (isSelected) {\r\n                         selectedTags.removeWhere(\r\n                             (selectedTag) => selectedTag.id == tag.id);\r\n-                      } else {\r\n+                      } \r\n                         selectedTags.add(tag);\r\n-                        setState(() {});\r\n+                        print(sele)\r\n+                       \r\n                       \r\n                     });\r\n                   },\r\n                   child: Container(\r\n"
                },
                {
                    "date": 1694851490102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,13 +97,11 @@\n                     setState(() {\r\n                       if (isSelected) {\r\n                         selectedTags.removeWhere(\r\n                             (selectedTag) => selectedTag.id == tag.id);\r\n-                      } \r\n-                        selectedTags.add(tag);\r\n-                        print(sele)\r\n-                       \r\n-                      \r\n+                      }\r\n+                      selectedTags.add(tag);\r\n+                      print(selectedTags.);\r\n                     });\r\n                   },\r\n                   child: Container(\r\n                     alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851497041,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                         selectedTags.removeWhere(\r\n                             (selectedTag) => selectedTag.id == tag.id);\r\n                       }\r\n                       selectedTags.add(tag);\r\n-                      print(selectedTags.);\r\n+                      print('selectedTags.length');\r\n                     });\r\n                   },\r\n                   child: Container(\r\n                     alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694851506714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                         selectedTags.removeWhere(\r\n                             (selectedTag) => selectedTag.id == tag.id);\r\n                       }\r\n                       selectedTags.add(tag);\r\n-                      print('selectedTags length');\r\n+                      print('selectedTags length is : ${selectedTags.length}');\r\n                     });\r\n                   },\r\n                   child: Container(\r\n                     alignment: Alignment.center,\r\n"
                },
                {
                    "date": 1694852770202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n                         children: tagsListForWhiteBox),\r\n                   ));\r\n             },\r\n           ),\r\n-          SizedBox(height: 30,)\r\n+          SizedBox(height: 30,),\r\n           Padding(\r\n             padding: const EdgeInsetsDirectional.only(\r\n                 start: 40.0, end: 40.0, top: 10),\r\n             child: TextField(\r\n"
                }
            ],
            "date": 1694851416821,
            "name": "Commit-0",
            "content": "import 'package:final_projectt/core/services/new_inbox_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/custom_box.dart';\r\nimport 'package:final_projectt/models/tags_model.dart';\r\nimport 'package:flutter/material.dart';\r\n\r\nclass TagsBottomSheet extends StatefulWidget {\r\n  @override\r\n  State<TagsBottomSheet> createState() => _TagsBottomSheetState();\r\n}\r\n\r\nclass _TagsBottomSheetState extends State<TagsBottomSheet> {\r\n  Future<Tag>? tags;\r\n  TextEditingController addTagFieldController = TextEditingController();\r\n  int greyIndex = 0;\r\n  List<TagElement> selectedTags = [];\r\n\r\n  @override\r\n  void initState() {\r\n    tags = getTags();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SizedBox(\r\n      height: MediaQuery.of(context).size.height - 150,\r\n      child: Column(\r\n        children: [\r\n          Padding(\r\n            padding: const EdgeInsetsDirectional.only(\r\n              top: 15.0,\r\n              start: 8,\r\n              end: 8,\r\n            ),\r\n            child: Row(\r\n              mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n              children: [\r\n                IconButton(\r\n                  onPressed: () {\r\n                    print(selectedTags);\r\n                    Navigator.pop(context, selectedTags);\r\n                  },\r\n                  icon: Icon(\r\n                    Icons.arrow_back_ios_new_rounded,\r\n                    color: primaryColor,\r\n                  ),\r\n                ),\r\n                Center(\r\n                  child: Text(\r\n                    'Tags',\r\n                    style: TextStyle(\r\n                      color: Colors.black,\r\n                      fontSize: 23,\r\n                    ),\r\n                  ),\r\n                ),\r\n                IconButton(\r\n                  onPressed: () {\r\n                    Navigator.pop(context);\r\n                  },\r\n                  icon: Icon(\r\n                    Icons.arrow_back_ios_new_rounded,\r\n                    color: Colors.transparent,\r\n                  ),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n          FutureBuilder(\r\n            future: tags,\r\n            builder: (context, snapshot) {\r\n              if (snapshot.connectionState == ConnectionState.waiting) {\r\n                return Center(\r\n                  child: CircularProgressIndicator(\r\n                    color: primaryColor,\r\n                  ),\r\n                );\r\n              } else if (snapshot.hasError) {\r\n                return Text(snapshot.error.toString());\r\n              } else if (!snapshot.hasData || snapshot.data!.tags.isEmpty) {\r\n                return Center(\r\n                  child: Text('No data available.'),\r\n                );\r\n              }\r\n\r\n              List<Widget> tagsListForWhiteBox = snapshot.data!.tags.map((tag) {\r\n                final tagText = tag.name;\r\n                final textLength = tagText.length;\r\n                final tagWidth = 40.0 + (textLength * 8.0);\r\n                final isSelected = selectedTags.contains(tag);\r\n\r\n                return GestureDetector(\r\n                  onTap: () {\r\n                    setState(() {\r\n                      if (isSelected) {\r\n                        selectedTags.removeWhere(\r\n                            (selectedTag) => selectedTag.id == tag.id);\r\n                      } else {\r\n                        selectedTags.add(tag);\r\n                        set\r\n                      }\r\n                    });\r\n                  },\r\n                  child: Container(\r\n                    alignment: Alignment.center,\r\n                    width: tagWidth,\r\n                    height: 32,\r\n                    decoration: BoxDecoration(\r\n                      color: isSelected\r\n                          ? primaryColor.withOpacity(0.7)\r\n                          : Colors.grey.shade300,\r\n                      borderRadius: BorderRadius.circular(30),\r\n                    ),\r\n                    child: Text(\r\n                      '#$tagText',\r\n                      style: const TextStyle(\r\n                          fontSize: 16,\r\n                          color: Colors.black,\r\n                          fontWeight: FontWeight.w600),\r\n                    ),\r\n                  ),\r\n                );\r\n              }).toList();\r\n\r\n              return CustomWhiteBox(\r\n                  width: 378,\r\n                  height: (snapshot.data!.tags.length / 3).round() * 52,\r\n                  child: Padding(\r\n                    padding:\r\n                        const EdgeInsetsDirectional.only(start: 15.0, top: 15),\r\n                    child: Wrap(\r\n                        spacing: 10.0,\r\n                        runSpacing: 10.0,\r\n                        children: tagsListForWhiteBox),\r\n                  ));\r\n            },\r\n          ),\r\n          Padding(\r\n            padding: const EdgeInsetsDirectional.only(\r\n                start: 40.0, end: 40.0, top: 10),\r\n            child: TextField(\r\n              controller: addTagFieldController,\r\n              decoration: InputDecoration(\r\n                filled: true,\r\n                suffixIcon: GestureDetector(\r\n                  onTap: () async {\r\n                    await createTag(addTagFieldController.text);\r\n                    // showAlert(context,\r\n                    //     message: \"Tag Created Successfully\",\r\n                    //     color: primaryColor.withOpacity(0.7),\r\n                    //     width: 250);\r\n                    setState(() {\r\n                      tags = getTags();\r\n                      addTagFieldController.clear();\r\n                    });\r\n                  },\r\n                  child: Padding(\r\n                    padding: const EdgeInsets.all(10.0),\r\n                    child: Column(\r\n                      children: [\r\n                        Image.asset(\r\n                          'images/hashtag.png',\r\n                          width: 30,\r\n                          height: 30,\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n                ),\r\n                fillColor: boxColor,\r\n                contentPadding: EdgeInsetsDirectional.only(start: 15, top: 15),\r\n                hintText: \"Add new tag ...\",\r\n                hintStyle: const TextStyle(color: Colors.grey, fontSize: 19),\r\n                enabledBorder: OutlineInputBorder(\r\n                  borderSide: BorderSide(color: Colors.grey.shade300),\r\n                  borderRadius: BorderRadius.circular(30),\r\n                ),\r\n                focusedBorder: UnderlineInputBorder(\r\n                  borderRadius: BorderRadius.circular(30),\r\n                  borderSide: BorderSide(color: backGroundColor),\r\n                ),\r\n              ),\r\n            ),\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}