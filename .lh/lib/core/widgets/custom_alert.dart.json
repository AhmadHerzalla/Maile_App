{
    "sourceFile": "lib/core/widgets/custom_alert.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1695387622842,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1695387622842,
            "name": "Commit-0",
            "content": "import 'package:easy_localization/easy_localization.dart';\r\nimport 'package:final_projectt/core/helpers/api_response.dart';\r\nimport 'package:final_projectt/core/services/change_roal_controller.dart';\r\nimport 'package:final_projectt/core/services/delet_user.dart';\r\n\r\nimport 'package:final_projectt/core/services/profile_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/show_alert.dart';\r\n\r\nimport 'package:final_projectt/models/all_user_model.dart';\r\nimport 'package:final_projectt/providers/all_user_provider.dart';\r\nimport 'package:final_projectt/providers/user_role_provider.dart';\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass CustomAlertDialog extends StatefulWidget {\r\n  final String name;\r\n  final String email;\r\n  final String? image;\r\n  final String role;\r\n  final int userId;\r\n  final int roleId;\r\n  final String type;\r\n\r\n  const CustomAlertDialog({\r\n    super.key,\r\n    required this.name,\r\n    required this.email,\r\n    required this.image,\r\n    required this.role,\r\n    required this.userId,\r\n    required this.roleId,\r\n    required this.type,\r\n  });\r\n\r\n  @override\r\n  State<CustomAlertDialog> createState() => _CustomAlertDialogState();\r\n}\r\n\r\nclass _CustomAlertDialogState extends State<CustomAlertDialog> {\r\n  int _value = 0;\r\n  ChangeRoleCotroller changeRoleCotroller = ChangeRoleCotroller();\r\n  DeleteUserCotroller deleteUserCotroller = DeleteUserCotroller();\r\n  @override\r\n  void initState() {\r\n    _value = widget.roleId;\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return AlertDialog(\r\n      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(32.0)),\r\n      titlePadding: const EdgeInsets.all(0),\r\n      contentPadding: const EdgeInsets.symmetric(vertical: 0, horizontal: 16),\r\n      title: Container(\r\n        padding: const EdgeInsets.all(23),\r\n        decoration: const BoxDecoration(\r\n          color: Colors.blueAccent,\r\n          borderRadius: BorderRadius.only(\r\n              topRight: Radius.circular(32), topLeft: Radius.circular(32)),\r\n        ),\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.start,\r\n          mainAxisSize: MainAxisSize.min,\r\n          crossAxisAlignment: CrossAxisAlignment.center,\r\n          children: [\r\n            Padding(\r\n              padding: const EdgeInsets.all(8.0),\r\n              child: Text(\r\n                widget.type == \"edit\"\r\n                    ? \"Change User Rloe\".tr()\r\n                    : \"Delete User\".tr(),\r\n                style: const TextStyle(color: Colors.white),\r\n                textAlign: TextAlign.center,\r\n              ),\r\n            ),\r\n            Container(\r\n              height: 100,\r\n              width: 100,\r\n              clipBehavior: Clip.antiAliasWithSaveLayer,\r\n              decoration: const BoxDecoration(shape: BoxShape.circle),\r\n              child: widget.image != null\r\n                  ? Image.network(\r\n                      'https://palmail.gsgtt.tech/storage/${widget.image}',\r\n                      fit: BoxFit.fill,\r\n                    )\r\n                  : Image.asset('images/user.jpg'),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n      content: Column(\r\n        mainAxisAlignment: MainAxisAlignment.start,\r\n        mainAxisSize: MainAxisSize.min,\r\n        crossAxisAlignment: CrossAxisAlignment.center,\r\n        children: [\r\n          Column(\r\n            mainAxisAlignment: MainAxisAlignment.start,\r\n            mainAxisSize: MainAxisSize.min,\r\n            crossAxisAlignment: CrossAxisAlignment.start,\r\n            children: [\r\n              Text(\"user information\".tr()),\r\n              const SizedBox(\r\n                height: 8,\r\n              ),\r\n              RichText(\r\n                text: TextSpan(children: <TextSpan>[\r\n                  TextSpan(\r\n                      text: \"Name :  \".tr(),\r\n                      style:\r\n                          const TextStyle(color: Colors.black, fontSize: 16)),\r\n                  TextSpan(\r\n                      text: widget.name,\r\n                      style: const TextStyle(\r\n                          color: Colors.blueAccent, fontSize: 16)),\r\n                ]),\r\n              ),\r\n              RichText(\r\n                text: TextSpan(children: <TextSpan>[\r\n                  TextSpan(\r\n                      text: \"Email :  \".tr(),\r\n                      style:\r\n                          const TextStyle(color: Colors.black, fontSize: 16)),\r\n                  TextSpan(\r\n                      text: widget.email,\r\n                      style: const TextStyle(\r\n                          color: Colors.blueAccent, fontSize: 16)),\r\n                ]),\r\n              ),\r\n              RichText(\r\n                text: TextSpan(children: <TextSpan>[\r\n                  TextSpan(\r\n                      text: \"Role :  \".tr(),\r\n                      style:\r\n                          const TextStyle(color: Colors.black, fontSize: 16)),\r\n                  TextSpan(\r\n                      text: widget.role.tr(),\r\n                      style: const TextStyle(\r\n                          color: Colors.blueAccent, fontSize: 16)),\r\n                ]),\r\n              ),\r\n              const SizedBox(\r\n                height: 8,\r\n              ),\r\n              Text(\r\n                widget.type == \"edit\"\r\n                    ? \"Attention: You are about to change the role of this user\"\r\n                        .tr()\r\n                    : \"Attention: You are about to delete of this user\".tr(),\r\n              )\r\n            ],\r\n          ),\r\n          const SizedBox(\r\n            height: 8,\r\n          ),\r\n          widget.type == \"edit\"\r\n              ? Consumer<UserRoleProvider>(\r\n                  builder: (_, userRoleProvider, __) {\r\n                    if (userRoleProvider.userRoledata.status ==\r\n                        Status.LOADING) {\r\n                      return const Center(\r\n                        child: SpinKitPulse(\r\n                          duration: Duration(milliseconds: 1000),\r\n                          color: Colors.grey,\r\n                          size: 40,\r\n                        ),\r\n                      );\r\n                    }\r\n\r\n                    if (userRoleProvider.userRoledata.status ==\r\n                        Status.COMPLETED) {\r\n                      return Wrap(\r\n                        spacing: 5.0,\r\n                        children: List<Widget>.generate(\r\n                          userRoleProvider.userRoledata.data!.roles!.length,\r\n                          (int index) {\r\n                            return ChoiceChip(\r\n                              selectedColor: Colors.blueAccent,\r\n                              label: Text(userRoleProvider\r\n                                  .userRoledata.data!.roles![index].name!\r\n                                  .tr()),\r\n                              selected: _value == index + 1,\r\n                              onSelected: (bool selected) {\r\n                                setState(() {\r\n                                  _value = (selected ? index + 1 : null)!;\r\n                                });\r\n                              },\r\n                            );\r\n                          },\r\n                        ).toList(),\r\n                      );\r\n                    }\r\n\r\n                    return const Text(\" no data fron User role provider\");\r\n                  },\r\n                )\r\n              : const SizedBox(),\r\n        ],\r\n      ),\r\n      actions: <Widget>[\r\n        TextButton(\r\n            onPressed: widget.type == \"edit\"\r\n                ? () async {\r\n                    await changeRoleCotroller.changeRole(\r\n                        user_id: widget.userId, role_id: _value);\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    await Provider.of<AllUserProvider>(context, listen: false)\r\n                        .getusersData();\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    User? myinfo = Provider.of<AllUserProvider>(context,\r\n                            listen: false)\r\n                        .allUserdata\r\n                        .data\r\n                        ?.users\r\n                        ?.firstWhere((element) => element.id == widget.userId);\r\n\r\n                    await updateRoleSharedPreferences(myinfo?.role);\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    showAlert(context,\r\n                        message: 'The role was changed successfully'.tr(),\r\n                        color: primaryColor.withOpacity(0.8),\r\n                        width: 230);\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    Navigator.pop(context);\r\n                  }\r\n                : () async {\r\n                    await deleteUserCotroller.deleteUser(\r\n                        user_id: widget.userId, name: widget.name);\r\n                    // ignore: use_build_context_synchronously\r\n                    await Provider.of<AllUserProvider>(context, listen: false)\r\n                        .getusersData();\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    showAlert(context,\r\n                        message: 'The user was deleted successfully'.tr(),\r\n                        color: primaryColor.withOpacity(0.8),\r\n                        width: 230);\r\n\r\n                    // ignore: use_build_context_synchronously\r\n                    Navigator.pop(context);\r\n                  },\r\n            child: Text(\r\n              \"Confirm\".tr(),\r\n              style: const TextStyle(fontSize: 16),\r\n            )),\r\n        TextButton(\r\n            child: Text(\r\n              'Cancel'.tr(),\r\n              style: const TextStyle(fontSize: 16),\r\n            ),\r\n            onPressed: () {\r\n              Navigator.pop(context);\r\n            }),\r\n      ],\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}