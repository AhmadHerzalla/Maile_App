{
    "sourceFile": "lib/Screens/search_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1695334982174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695334989951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import 'package:final_projectt/core/widgets/filter_bottom_sheet.dart';\r\n import 'package:final_projectt/models/search_model.dart';\r\n import 'package:final_projectt/providers/new_inbox_provider.dart';\r\n import 'package:flutter/material.dart';\r\n+import 'package:flutter_spinkit/flutter_spinkit.dart';\r\n import 'package:provider/provider.dart';\r\n \r\n class SearchScreen extends StatefulWidget {\r\n   final String? text;\r\n"
                },
                {
                    "date": 1695335005057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -148,9 +148,9 @@\n                 ? FutureBuilder(\r\n                     future: searchData,\r\n                     builder: (context, snapshot) {\r\n                       if (snapshot.hasData) {\r\n-                        return snapshot.data!.mails?.length != 0\r\n+                        return snapshot.data!.mails!.isNotEmpty\r\n                             ? ListView.builder(\r\n                                 itemCount: snapshot.data!.mails?.length,\r\n                                 physics: const BouncingScrollPhysics(),\r\n                                 itemBuilder: (context, index) {\r\n@@ -302,13 +302,13 @@\n                       return const Column(\r\n                         mainAxisAlignment: MainAxisAlignment.center,\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                         SpinKitRotatingCircle(\r\n-                    duration: Duration(milliseconds: 1500),\r\n-                    color: Colors.grey,\r\n-                    size: 30,\r\n-                  ),\r\n+                          SpinKitRotatingCircle(\r\n+                            duration: Duration(milliseconds: 1500),\r\n+                            color: Colors.grey,\r\n+                            size: 30,\r\n+                          ),\r\n                         ],\r\n                       );\r\n                     })\r\n                 : const Center()),\r\n"
                },
                {
                    "date": 1695335125103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -302,13 +302,9 @@\n                       return const Column(\r\n                         mainAxisAlignment: MainAxisAlignment.center,\r\n                         crossAxisAlignment: CrossAxisAlignment.center,\r\n                         children: [\r\n-                          SpinKitRotatingCircle(\r\n-                            duration: Duration(milliseconds: 1500),\r\n-                            color: Colors.grey,\r\n-                            size: 30,\r\n-                          ),\r\n+                          ,\r\n                         ],\r\n                       );\r\n                     })\r\n                 : const Center()),\r\n"
                },
                {
                    "date": 1695335138676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,14 +298,10 @@\n                         return Center(\r\n                           child: Text(snapshot.error.toString()),\r\n                         );\r\n                       }\r\n-                      return const Column(\r\n-                        mainAxisAlignment: MainAxisAlignment.center,\r\n-                        crossAxisAlignment: CrossAxisAlignment.center,\r\n-                        children: [\r\n-                          ,\r\n-                        ],\r\n+                      return Center(\r\n+                        \r\n                       );\r\n                     })\r\n                 : const Center()),\r\n       ]),\r\n"
                },
                {
                    "date": 1695335510013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -298,10 +298,14 @@\n                         return Center(\r\n                           child: Text(snapshot.error.toString()),\r\n                         );\r\n                       }\r\n-                      return Center(\r\n-                        \r\n+                      return const Center(\r\n+                        child: SpinKitPulse(\r\n+                  duration: Duration(milliseconds: 1000),\r\n+                  color: Colors.grey,\r\n+                  size: 40,\r\n+                ),\r\n                       );\r\n                     })\r\n                 : const Center()),\r\n       ]),\r\n"
                },
                {
                    "date": 1695335748863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,9 +137,9 @@\n                       });\r\n                 },\r\n                 icon: const Icon(\r\n                   Icons.filter_alt_outlined,\r\n-                  size: 32,\r\n+                  size: 30,\r\n                   color: Color(0xff6589FF),\r\n                 ))\r\n           ],\r\n         ),\r\n"
                },
                {
                    "date": 1695335773742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n             )),\r\n       ),\r\n       body: Column(children: [\r\n         Row(\r\n-          mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n           children: [\r\n             Container(\r\n               margin: const EdgeInsets.all(8),\r\n               width: 325,\r\n"
                },
                {
                    "date": 1695335779525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n             )),\r\n       ),\r\n       body: Column(children: [\r\n         Row(\r\n-          mainAxisAlignment: MainAxisAlignment.space,\r\n+          mainAxisAlignment: MainAxisAlignment.spaceAround,\r\n           children: [\r\n             Container(\r\n               margin: const EdgeInsets.all(8),\r\n               width: 325,\r\n"
                }
            ],
            "date": 1695334982174,
            "name": "Commit-0",
            "content": "import 'package:easy_localization/easy_localization.dart';\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/services/search_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/card.dart';\r\nimport 'package:final_projectt/core/widgets/edit_mail_bottom_sheet.dart';\r\nimport 'package:final_projectt/core/widgets/filter_bottom_sheet.dart';\r\nimport 'package:final_projectt/models/search_model.dart';\r\nimport 'package:final_projectt/providers/new_inbox_provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass SearchScreen extends StatefulWidget {\r\n  final String? text;\r\n  final int? statuId;\r\n  final DateTime? startDate;\r\n  final DateTime? endDate;\r\n  const SearchScreen(\r\n      {super.key, this.statuId, this.startDate, this.endDate, this.text});\r\n\r\n  @override\r\n  State<SearchScreen> createState() => _SearchScreenState();\r\n}\r\n\r\nclass _SearchScreenState extends State<SearchScreen> {\r\n  Future<Search>? searchData;\r\n  //MySearchController mySearchController = MySearchController();\r\n  TextEditingController searchController = TextEditingController();\r\n  //Search? mail;\r\n\r\n  @override\r\n  void initState() {\r\n    if (widget.text != null && widget.text != \"\") {\r\n      searchController.text = widget.text!;\r\n      searchData = MySearchController().fetchSearchData(searchController.text,\r\n          end: widget.endDate != null ? widget.endDate.toString() : \"\",\r\n          start: widget.startDate != null ? widget.startDate.toString() : \"\",\r\n          status_id: widget.statuId != null ? widget.statuId.toString() : \"\");\r\n    }\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: const Color(0xffF7F6FF),\r\n      appBar: AppBar(\r\n        title: Text(\r\n          \"Search\".tr(),\r\n          style: const TextStyle(color: Colors.black),\r\n        ),\r\n        backgroundColor: const Color(0xffF7F6FF),\r\n        elevation: 0,\r\n        centerTitle: true,\r\n        leading: IconButton(\r\n            onPressed: () {\r\n              Navigator.pushReplacement(context,\r\n                  MaterialPageRoute(builder: (context) => const MainPage()));\r\n            },\r\n            icon: const Icon(\r\n              Icons.arrow_back_ios,\r\n              color: Color(0xff6589FF),\r\n            )),\r\n      ),\r\n      body: Column(children: [\r\n        Row(\r\n          mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n          children: [\r\n            Container(\r\n              margin: const EdgeInsets.all(8),\r\n              width: 325,\r\n              child: TextField(\r\n                onChanged: (value) {\r\n                  searchData = MySearchController().fetchSearchData(value,\r\n                      end: widget.endDate != null\r\n                          ? widget.endDate.toString()\r\n                          : \"\",\r\n                      start: widget.startDate != null\r\n                          ? widget.startDate.toString()\r\n                          : \"\",\r\n                      status_id: widget.statuId != null\r\n                          ? widget.statuId.toString()\r\n                          : \"\");\r\n                  setState(() {});\r\n                },\r\n                controller: searchController,\r\n                autofocus: true,\r\n                decoration: InputDecoration(\r\n                  filled: true,\r\n                  prefixIcon: const Icon(\r\n                    Icons.search,\r\n                    color: Colors.grey,\r\n                    size: 24.0,\r\n                  ),\r\n                  suffixIcon: GestureDetector(\r\n                    onTap: () {\r\n                      searchController.clear();\r\n                      setState(() {});\r\n                    },\r\n                    child: Container(\r\n                        margin: const EdgeInsets.all(12),\r\n                        decoration: const BoxDecoration(\r\n                            color: Color(0xffAFAFAF), shape: BoxShape.circle),\r\n                        child: const Icon(\r\n                          Icons.clear,\r\n                          color: Color(0xffE6E6E6),\r\n                          size: 20,\r\n                        )),\r\n                  ),\r\n                  fillColor: const Color(0xffE6E6E6),\r\n                  hintText: \"Search\".tr(),\r\n                  hintStyle: const TextStyle(\r\n                    color: Colors.grey,\r\n                  ),\r\n                  enabledBorder: UnderlineInputBorder(\r\n                    borderSide: BorderSide(color: backGroundColor),\r\n                    borderRadius: BorderRadius.circular(20),\r\n                  ),\r\n                  focusedBorder: UnderlineInputBorder(\r\n                    borderRadius: BorderRadius.circular(20),\r\n                    borderSide: BorderSide(color: backGroundColor),\r\n                  ),\r\n                ),\r\n              ),\r\n            ),\r\n            IconButton(\r\n                onPressed: () {\r\n                  showModalBottomSheet(\r\n                      clipBehavior: Clip.hardEdge,\r\n                      isScrollControlled: true,\r\n                      context: context,\r\n                      builder: (BuildContext context) {\r\n                        return FilterBottomSheet(\r\n                          textSearch: searchController.text,\r\n                        );\r\n                      });\r\n                },\r\n                icon: const Icon(\r\n                  Icons.filter_alt_outlined,\r\n                  size: 32,\r\n                  color: Color(0xff6589FF),\r\n                ))\r\n          ],\r\n        ),\r\n        Expanded(\r\n            child: searchController.text.isNotEmpty\r\n                ? FutureBuilder(\r\n                    future: searchData,\r\n                    builder: (context, snapshot) {\r\n                      if (snapshot.hasData) {\r\n                        return snapshot.data!.mails?.length != 0\r\n                            ? ListView.builder(\r\n                                itemCount: snapshot.data!.mails?.length,\r\n                                physics: const BouncingScrollPhysics(),\r\n                                itemBuilder: (context, index) {\r\n                                  return myCustomCard(\r\n                                      snapshot.data!.mails![index], () {\r\n                                    showModalBottomSheet(\r\n                                      clipBehavior: Clip.hardEdge,\r\n                                      isScrollControlled: true,\r\n                                      context: context,\r\n                                      shape: const RoundedRectangleBorder(\r\n                                          borderRadius: BorderRadius.vertical(\r\n                                        top: Radius.circular(15.0),\r\n                                      )),\r\n                                      builder: (BuildContext context) {\r\n                                        return EditMailBottomSheet(\r\n                                          mail: snapshot.data!.mails![index],\r\n                                        );\r\n                                      },\r\n                                    ).whenComplete(\r\n                                      () {\r\n                                        setState(() {\r\n                                          Provider.of<NewInboxProvider>(context,\r\n                                                  listen: false)\r\n                                              .clearImages();\r\n\r\n                                          Provider.of<NewInboxProvider>(context,\r\n                                                  listen: false)\r\n                                              .activites = [];\r\n\r\n                                          Provider.of<NewInboxProvider>(context,\r\n                                                  listen: false)\r\n                                              .deletedImages = [];\r\n                                        });\r\n                                      },\r\n                                    );\r\n                                  });\r\n                                  // return GestureDetector(\r\n                                  //   onTap: () {},\r\n                                  //   child: Container(\r\n                                  //     margin: const EdgeInsets.symmetric(\r\n                                  //         horizontal: 16, vertical: 8),\r\n                                  //     padding: const EdgeInsets.symmetric(\r\n                                  //         horizontal: 8, vertical: 16),\r\n                                  //     decoration: BoxDecoration(\r\n                                  //       borderRadius: BorderRadius.circular(16),\r\n                                  //       color: boxColor,\r\n                                  //     ),\r\n                                  //     child: Column(\r\n                                  //       crossAxisAlignment:\r\n                                  //           CrossAxisAlignment.start,\r\n                                  //       children: [\r\n                                  //         Row(\r\n                                  //           mainAxisAlignment:\r\n                                  //               MainAxisAlignment.start,\r\n                                  //           children: [\r\n                                  //             Container(\r\n                                  //               margin: const EdgeInsets.only(\r\n                                  //                   right: 8),\r\n                                  //               width: 12,\r\n                                  //               height: 12,\r\n                                  //               decoration: BoxDecoration(\r\n                                  //                   borderRadius: BorderRadius\r\n                                  //                       .circular(6),\r\n                                  //                   color: snapshot\r\n                                  //                               .data!\r\n                                  //                               .mails![index]\r\n                                  //                               .status !=\r\n                                  //                           null\r\n                                  //                       ? Color(int.parse(\r\n                                  //                           snapshot\r\n                                  //                                   .data!\r\n                                  //                                   .mails![\r\n                                  //                                       index]\r\n                                  //                                   .status!\r\n                                  //                                   .color ??\r\n                                  //                               \"\"))\r\n                                  //                       : Colors.white),\r\n                                  //             ),\r\n                                  //             if (snapshot.data!.mails?[index]\r\n                                  //                     .sender !=\r\n                                  //                 null)\r\n                                  //               Text(snapshot\r\n                                  //                       .data!\r\n                                  //                       .mails?[index]\r\n                                  //                       .sender!\r\n                                  //                       .name ??\r\n                                  //                   \"no data\"),\r\n                                  //             const Spacer(),\r\n                                  //             Text(getMonth(snapshot\r\n                                  //                     .data!\r\n                                  //                     .mails?[index]\r\n                                  //                     .createdAt ??\r\n                                  //                 \"\")),\r\n                                  //             const Icon(\r\n                                  //               Icons.arrow_forward_ios,\r\n                                  //               color: Colors.grey,\r\n                                  //             )\r\n                                  //           ],\r\n                                  //         ),\r\n                                  //         Padding(\r\n                                  //           padding: const EdgeInsets.symmetric(\r\n                                  //               horizontal: 24.0),\r\n                                  //           child: Column(\r\n                                  //             crossAxisAlignment:\r\n                                  //                 CrossAxisAlignment.start,\r\n                                  //             children: [\r\n                                  //               Text(snapshot\r\n                                  //                       .data!\r\n                                  //                       .mails?[index]\r\n                                  //                       .subject ??\r\n                                  //                   \"no data\"),\r\n                                  //               Text(\r\n                                  //                 snapshot.data!.mails?[index]\r\n                                  //                         .description ??\r\n                                  //                     \"no data\",\r\n                                  //                 maxLines: 2,\r\n                                  //                 overflow:\r\n                                  //                     TextOverflow.ellipsis,\r\n                                  //               ),\r\n                                  //               const SizedBox(\r\n                                  //                 height: 8,\r\n                                  //               ),\r\n                                  //               Text(\r\n                                  //                 getTag(\r\n                                  //                   snapshot.data!.mails![index]\r\n                                  //                       .tags,\r\n                                  //                 ),\r\n                                  //                 style: const TextStyle(\r\n                                  //                     color: Color(0xff6589FF)),\r\n                                  //               ),\r\n                                  //             ],\r\n                                  //           ),\r\n                                  //         )\r\n                                  //       ],\r\n                                  //     ),\r\n                                  //   ),\r\n                                  // );\r\n                                })\r\n                            : Center(\r\n                                child: Text(\r\n                                    \"There are no emails on this data (${searchController.text})\"),\r\n                              );\r\n                      }\r\n                      if (snapshot.hasError) {\r\n                        return Center(\r\n                          child: Text(snapshot.error.toString()),\r\n                        );\r\n                      }\r\n                      return const Column(\r\n                        mainAxisAlignment: MainAxisAlignment.center,\r\n                        crossAxisAlignment: CrossAxisAlignment.center,\r\n                        children: [\r\n                         SpinKitRotatingCircle(\r\n                    duration: Duration(milliseconds: 1500),\r\n                    color: Colors.grey,\r\n                    size: 30,\r\n                  ),\r\n                        ],\r\n                      );\r\n                    })\r\n                : const Center()),\r\n      ]),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}