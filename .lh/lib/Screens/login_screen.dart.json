{
    "sourceFile": "lib/Screens/login_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1693750468458,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694893417721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,21 @@\n import 'dart:convert';\r\n \r\n+import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/main_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:final_projectt/core/services/auth_controller.dart';\r\n import 'package:final_projectt/core/util/constants/colors.dart';\r\n import 'package:final_projectt/core/widgets/show_alert.dart';\r\n import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:final_projectt/providers/user_provider.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:firebase_core/firebase_core.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:icons_plus/icons_plus.dart';\r\n-import 'package:toggle_switch/toggle_switch.dart';\r\n+import 'package:provider/provider.dart';\r\n+import 'package:google_sign_in/google_sign_in.dart';\r\n \r\n class LoginScreen extends StatefulWidget {\r\n   const LoginScreen({super.key});\r\n \r\n@@ -17,16 +23,34 @@\n   State<LoginScreen> createState() => _LoginScreenState();\r\n }\r\n \r\n class _LoginScreenState extends State<LoginScreen> {\r\n-  bool isToggled = false;\r\n   int initialLabelIndex = 0;\r\n   final _formKey = GlobalKey<FormState>();\r\n   TextEditingController nameController = TextEditingController();\r\n   TextEditingController emailOrUserNameController = TextEditingController();\r\n   TextEditingController passController = TextEditingController();\r\n   TextEditingController confirmPassController = TextEditingController();\r\n+  final FirebaseAuth _auth = FirebaseAuth.instance;\r\n \r\n+  Future<UserCredential> signInWithGoogle() async {\r\n+    // Trigger the authentication flow\r\n+    final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n+\r\n+    // Obtain the auth details from the request\r\n+    final GoogleSignInAuthentication? googleAuth =\r\n+        await googleUser?.authentication;\r\n+\r\n+    // Create a new credential\r\n+    final credential = GoogleAuthProvider.credential(\r\n+      accessToken: googleAuth?.accessToken,\r\n+      idToken: googleAuth?.idToken,\r\n+    );\r\n+\r\n+    // Once signed in, return the UserCredential\r\n+    return await FirebaseAuth.instance.signInWithCredential(credential);\r\n+  }\r\n+\r\n   void submitRegister() {\r\n     if (_formKey.currentState!.validate()) {\r\n       AuthController.register(context,\r\n               name: nameController.text,\r\n@@ -37,11 +61,12 @@\n         showAlert(context,\r\n             message: \"Account Created Successfully,\\n Please Log In\",\r\n             color: Colors.grey,\r\n             width: 300);\r\n+        _formKey.currentState!.reset();\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n-            return LoginScreen();\r\n+            return const LoginScreen();\r\n           },\r\n         ));\r\n       }).catchError((err) async {\r\n         final errorMessagae =\r\n@@ -59,9 +84,13 @@\n         email: emailOrUserNameController.text,\r\n         password: passController.text,\r\n       ).then((response) async {\r\n         SharedPrefsController prefs = SharedPrefsController();\r\n-        await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n+        await prefs.setData(\r\n+            'user', userToJson(UserModel.fromJson(response[1])));\r\n+        Provider.of<StatuseProvider>(context, listen: false).updatestutas();\r\n+        Provider.of<UserProvider>(context, listen: false).getUserData();\r\n+\r\n         Navigator.pushReplacement(context, MaterialPageRoute(\r\n           builder: (context) {\r\n             return const MainPage();\r\n           },\r\n@@ -104,9 +133,9 @@\n                 ),\r\n                 Container(\r\n                   margin: const EdgeInsets.only(top: 220),\r\n                   width: 350,\r\n-                  height: isToggled ? 570 : 470,\r\n+                  height: initialLabelIndex == 1 ? 570 : 470,\r\n                   decoration: BoxDecoration(\r\n                       color: Colors.white,\r\n                       borderRadius: BorderRadius.circular(80)),\r\n                   child: Padding(\r\n@@ -116,46 +145,112 @@\n                       start: 60.0,\r\n                     ),\r\n                     child: Column(\r\n                       children: [\r\n-                        ToggleSwitch(\r\n-                          fontSize: 16,\r\n-                          minWidth: 100.0,\r\n-                          cornerRadius: 20.0,\r\n-                          activeBgColors: [\r\n-                            [Colors.blue[800]!],\r\n-                            [Colors.blue[800]!]\r\n-                          ],\r\n-                          activeFgColor: Colors.white,\r\n-                          inactiveBgColor:\r\n-                              const Color.fromARGB(255, 234, 232, 232),\r\n-                          inactiveFgColor: Colors.blue[800]!,\r\n-                          initialLabelIndex: initialLabelIndex,\r\n-                          totalSwitches: 2,\r\n-                          labels: const ['Log In', 'Sign Up'],\r\n-                          radiusStyle: true,\r\n-                          onToggle: (index) {\r\n-                            setState(() {\r\n-                              isToggled = !isToggled;\r\n-                              initialLabelIndex = index!;\r\n-                            });\r\n-                          },\r\n+                        // ToggleSwitch(\r\n+                        //   fontSize: 16,\r\n+                        //   minWidth: 100.0,\r\n+                        //   cornerRadius: 20.0,\r\n+                        //   activeBgColors: [\r\n+                        //     [Colors.blue[800]!],\r\n+                        //     [Colors.blue[800]!]\r\n+                        //   ],\r\n+                        //   activeFgColor: Colors.white,\r\n+                        //   inactiveBgColor:\r\n+                        //       const Color.fromARGB(255, 234, 232, 232),\r\n+                        //   inactiveFgColor: Colors.blue[800]!,\r\n+                        //   initialLabelIndex: initialLabelIndex,\r\n+                        //   totalSwitches: 2,\r\n+                        //   labels: const ['Log In', 'Sign Up'],\r\n+                        //   radiusStyle: true,\r\n+                        //   onToggle: (index) {\r\n+                        //     setState(() {\r\n+                        //       // isToggled = !isToggled;\r\n+                        //       initialLabelIndex = index!;\r\n+                        //     });\r\n+                        //   },\r\n+                        // ),\r\n+                        Container(\r\n+                          height: 40,\r\n+                          width: 200,\r\n+                          decoration: BoxDecoration(\r\n+                            border: Border.all(color: Colors.grey.shade300),\r\n+                            borderRadius: BorderRadius.circular(22),\r\n+                          ),\r\n+                          child: Row(\r\n+                            children: [\r\n+                              GestureDetector(\r\n+                                onTap: () {\r\n+                                  setState(() {\r\n+                                    initialLabelIndex = 0;\r\n+                                  });\r\n+                                },\r\n+                                child: Container(\r\n+                                  height: 45,\r\n+                                  width: 99,\r\n+                                  decoration: BoxDecoration(\r\n+                                    color: initialLabelIndex == 0\r\n+                                        ? primaryColor\r\n+                                        : Colors.white,\r\n+                                    borderRadius: BorderRadius.circular(22),\r\n+                                  ),\r\n+                                  child: Center(\r\n+                                    child: Text(\r\n+                                      'login'.tr(),\r\n+                                      style: TextStyle(\r\n+                                          color: initialLabelIndex == 0\r\n+                                              ? Colors.white\r\n+                                              : primaryColor,\r\n+                                          fontSize: 16),\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                              GestureDetector(\r\n+                                onTap: () {\r\n+                                  setState(() {\r\n+                                    initialLabelIndex = 1;\r\n+                                  });\r\n+                                },\r\n+                                child: Container(\r\n+                                  height: 45,\r\n+                                  width: 99,\r\n+                                  decoration: BoxDecoration(\r\n+                                    color: initialLabelIndex == 1\r\n+                                        ? primaryColor\r\n+                                        : Colors.white,\r\n+                                    borderRadius: BorderRadius.circular(22),\r\n+                                  ),\r\n+                                  child: Center(\r\n+                                    child: Text(\r\n+                                      'signup'.tr(),\r\n+                                      style: TextStyle(\r\n+                                          color: initialLabelIndex == 1\r\n+                                              ? Colors.white\r\n+                                              : primaryColor,\r\n+                                          fontSize: 16),\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n                         ),\r\n-                        SizedBox(height: 30),\r\n+                        const SizedBox(height: 30),\r\n                         Form(\r\n                           key: _formKey,\r\n                           child: Column(\r\n                             children: [\r\n-                              if (isToggled)\r\n+                              if (initialLabelIndex == 1)\r\n                                 TextFormField(\r\n                                   controller: nameController,\r\n                                   validator: (value) {\r\n                                     if (value == null || value.isEmpty) {\r\n                                       return 'Please enter your name';\r\n                                     }\r\n                                     return null;\r\n                                   },\r\n-                                  decoration: InputDecoration(\r\n+                                  decoration: const InputDecoration(\r\n                                       hintText: 'Enter your name',\r\n                                       hintStyle: TextStyle(\r\n                                           color: Colors.grey,\r\n                                           fontFamily: 'Iphone',\r\n@@ -175,9 +270,9 @@\n                                     return 'Please enter email or username';\r\n                                   }\r\n                                   return null;\r\n                                 },\r\n-                                decoration: InputDecoration(\r\n+                                decoration: const InputDecoration(\r\n                                     hintText: 'Enter email or username',\r\n                                     hintStyle: TextStyle(\r\n                                         color: Colors.grey,\r\n                                         fontFamily: 'Iphone',\r\n@@ -189,9 +284,9 @@\n                                     focusedBorder: UnderlineInputBorder(\r\n                                         borderSide:\r\n                                             BorderSide(color: Colors.grey))),\r\n                               ),\r\n-                              SizedBox(\r\n+                              const SizedBox(\r\n                                 height: 15,\r\n                               ),\r\n                               TextFormField(\r\n                                 controller: passController,\r\n@@ -201,9 +296,9 @@\n                                     return ' Please enter a password  ';\r\n                                   }\r\n                                   return null;\r\n                                 },\r\n-                                decoration: InputDecoration(\r\n+                                decoration: const InputDecoration(\r\n                                     hintText: 'Password',\r\n                                     hintStyle: TextStyle(\r\n                                         color: Colors.grey,\r\n                                         fontFamily: 'Iphone',\r\n@@ -215,12 +310,12 @@\n                                     focusedBorder: UnderlineInputBorder(\r\n                                         borderSide:\r\n                                             BorderSide(color: Colors.grey))),\r\n                               ),\r\n-                              SizedBox(\r\n+                              const SizedBox(\r\n                                 height: 15,\r\n                               ),\r\n-                              if (isToggled)\r\n+                              if (initialLabelIndex == 1)\r\n                                 Column(\r\n                                   children: [\r\n                                     TextFormField(\r\n                                       controller: confirmPassController,\r\n@@ -233,9 +328,9 @@\n                                           return 'Passwords do not match';\r\n                                         }\r\n                                         return null;\r\n                                       },\r\n-                                      decoration: InputDecoration(\r\n+                                      decoration: const InputDecoration(\r\n                                           hintText: 'Confirm Password',\r\n                                           hintStyle: TextStyle(\r\n                                               color: Colors.grey,\r\n                                               fontFamily: 'Iphone',\r\n@@ -247,16 +342,16 @@\n                                           focusedBorder: UnderlineInputBorder(\r\n                                               borderSide: BorderSide(\r\n                                                   color: Colors.grey))),\r\n                                     ),\r\n-                                    SizedBox(\r\n+                                    const SizedBox(\r\n                                       height: 25,\r\n                                     ),\r\n                                   ],\r\n                                 ),\r\n                               TextButton(\r\n                                 onPressed: () {\r\n-                                  if (isToggled) {\r\n+                                  if (initialLabelIndex == 1) {\r\n                                     if (_formKey.currentState!.validate()) {\r\n                                       submitRegister();\r\n                                     }\r\n                                   } else {\r\n@@ -284,40 +379,43 @@\n                                   decoration: BoxDecoration(\r\n                                     color: primaryColor,\r\n                                     borderRadius: BorderRadius.circular(20.0),\r\n                                   ),\r\n-                                  padding: EdgeInsets.symmetric(\r\n+                                  padding: const EdgeInsets.symmetric(\r\n                                       vertical: 16.0, horizontal: 32.0),\r\n                                   child: Text(\r\n-                                    isToggled ? 'Sign Up' : 'Log In',\r\n+                                    initialLabelIndex == 1\r\n+                                        ? 'signup'.tr()\r\n+                                        : 'login'.tr(),\r\n                                     textAlign: TextAlign.center,\r\n-                                    style: TextStyle(\r\n+                                    style: const TextStyle(\r\n                                       color: Colors.white,\r\n                                       fontSize: 16,\r\n                                     ),\r\n                                   ),\r\n                                 ),\r\n                               ),\r\n-                              SizedBox(\r\n+                              const SizedBox(\r\n                                 height: 14,\r\n                               ),\r\n-                              Text(\r\n+                              const Text(\r\n                                 'OR',\r\n                                 textAlign: TextAlign.center,\r\n                                 style: TextStyle(\r\n                                   color: Colors.grey,\r\n                                   fontSize: 14,\r\n                                 ),\r\n                               ),\r\n-                              SizedBox(height: 16),\r\n+                              const SizedBox(height: 16),\r\n                               Row(\r\n                                 mainAxisAlignment:\r\n                                     MainAxisAlignment.spaceEvenly,\r\n                                 children: [\r\n                                   InkWell(\r\n                                     onTap: () {},\r\n                                     child: Container(\r\n-                                      padding: EdgeInsetsDirectional.symmetric(\r\n+                                      padding:\r\n+                                          const EdgeInsetsDirectional.symmetric(\r\n                                         horizontal: 8,\r\n                                         vertical: 8,\r\n                                       ),\r\n                                       decoration: BoxDecoration(\r\n@@ -334,9 +432,9 @@\n                                   ),\r\n                                   InkWell(\r\n                                     onTap: () {},\r\n                                     child: Container(\r\n-                                      padding: EdgeInsets.symmetric(\r\n+                                      padding: const EdgeInsets.symmetric(\r\n                                         horizontal: 8,\r\n                                         vertical: 8,\r\n                                       ),\r\n                                       decoration: BoxDecoration(\r\n@@ -351,11 +449,28 @@\n                                       ),\r\n                                     ),\r\n                                   ),\r\n                                   InkWell(\r\n-                                    onTap: () {},\r\n+                                    onTap: () {\r\n+                                      signInWithGoogle().then((value) {\r\n+                                        nameController.text = value\r\n+                                            .additionalUserInfo!\r\n+                                            .profile?[\"name\"];\r\n+                                        emailOrUserNameController.text =\r\n+                                            value.user!.email!;\r\n+                                      });\r\n+                                      setState(() {\r\n+                                        signInWithGoogle().then((value) {\r\n+                                          nameController.text = value\r\n+                                              .additionalUserInfo!\r\n+                                              .profile?[\"name\"];\r\n+                                          emailOrUserNameController.text =\r\n+                                              value.user!.email!;\r\n+                                        });\r\n+                                      });\r\n+                                    },\r\n                                     child: Container(\r\n-                                      padding: EdgeInsets.symmetric(\r\n+                                      padding: const EdgeInsets.symmetric(\r\n                                         horizontal: 8,\r\n                                         vertical: 8,\r\n                                       ),\r\n                                       decoration: BoxDecoration(\r\n"
                },
                {
                    "date": 1694893442536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,8 @@\n import 'package:final_projectt/models/user_model.dart';\r\n import 'package:final_projectt/providers/status_provider.dart';\r\n import 'package:final_projectt/providers/user_provider.dart';\r\n import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:firebase_core/firebase_core.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:icons_plus/icons_plus.dart';\r\n import 'package:provider/provider.dart';\r\n import 'package:google_sign_in/google_sign_in.dart';\r\n@@ -168,74 +167,74 @@\n                         //       initialLabelIndex = index!;\r\n                         //     });\r\n                         //   },\r\n                         // ),\r\n-                        Container(\r\n-                          height: 40,\r\n-                          width: 200,\r\n-                          decoration: BoxDecoration(\r\n-                            border: Border.all(color: Colors.grey.shade300),\r\n-                            borderRadius: BorderRadius.circular(22),\r\n-                          ),\r\n-                          child: Row(\r\n-                            children: [\r\n-                              GestureDetector(\r\n-                                onTap: () {\r\n-                                  setState(() {\r\n-                                    initialLabelIndex = 0;\r\n-                                  });\r\n-                                },\r\n-                                child: Container(\r\n-                                  height: 45,\r\n-                                  width: 99,\r\n-                                  decoration: BoxDecoration(\r\n-                                    color: initialLabelIndex == 0\r\n-                                        ? primaryColor\r\n-                                        : Colors.white,\r\n-                                    borderRadius: BorderRadius.circular(22),\r\n-                                  ),\r\n-                                  child: Center(\r\n-                                    child: Text(\r\n-                                      'login'.tr(),\r\n-                                      style: TextStyle(\r\n-                                          color: initialLabelIndex == 0\r\n-                                              ? Colors.white\r\n-                                              : primaryColor,\r\n-                                          fontSize: 16),\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                              GestureDetector(\r\n-                                onTap: () {\r\n-                                  setState(() {\r\n-                                    initialLabelIndex = 1;\r\n-                                  });\r\n-                                },\r\n-                                child: Container(\r\n-                                  height: 45,\r\n-                                  width: 99,\r\n-                                  decoration: BoxDecoration(\r\n-                                    color: initialLabelIndex == 1\r\n-                                        ? primaryColor\r\n-                                        : Colors.white,\r\n-                                    borderRadius: BorderRadius.circular(22),\r\n-                                  ),\r\n-                                  child: Center(\r\n-                                    child: Text(\r\n-                                      'signup'.tr(),\r\n-                                      style: TextStyle(\r\n-                                          color: initialLabelIndex == 1\r\n-                                              ? Colors.white\r\n-                                              : primaryColor,\r\n-                                          fontSize: 16),\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                            ],\r\n-                          ),\r\n-                        ),\r\n+                        // Container(\r\n+                        //   height: 40,\r\n+                        //   width: 200,\r\n+                        //   decoration: BoxDecoration(\r\n+                        //     border: Border.all(color: Colors.grey.shade300),\r\n+                        //     borderRadius: BorderRadius.circular(22),\r\n+                        //   ),\r\n+                        //   child: Row(\r\n+                        //     children: [\r\n+                        //       GestureDetector(\r\n+                        //         onTap: () {\r\n+                        //           setState(() {\r\n+                        //             initialLabelIndex = 0;\r\n+                        //           });\r\n+                        //         },\r\n+                        //         child: Container(\r\n+                        //           height: 45,\r\n+                        //           width: 99,\r\n+                        //           decoration: BoxDecoration(\r\n+                        //             color: initialLabelIndex == 0\r\n+                        //                 ? primaryColor\r\n+                        //                 : Colors.white,\r\n+                        //             borderRadius: BorderRadius.circular(22),\r\n+                        //           ),\r\n+                        //           child: Center(\r\n+                        //             child: Text(\r\n+                        //               'login'.tr(),\r\n+                        //               style: TextStyle(\r\n+                        //                   color: initialLabelIndex == 0\r\n+                        //                       ? Colors.white\r\n+                        //                       : primaryColor,\r\n+                        //                   fontSize: 16),\r\n+                        //             ),\r\n+                        //           ),\r\n+                        //         ),\r\n+                        //       ),\r\n+                        //       GestureDetector(\r\n+                        //         onTap: () {\r\n+                        //           setState(() {\r\n+                        //             initialLabelIndex = 1;\r\n+                        //           });\r\n+                        //         },\r\n+                        //         child: Container(\r\n+                        //           height: 45,\r\n+                        //           width: 99,\r\n+                        //           decoration: BoxDecoration(\r\n+                        //             color: initialLabelIndex == 1\r\n+                        //                 ? primaryColor\r\n+                        //                 : Colors.white,\r\n+                        //             borderRadius: BorderRadius.circular(22),\r\n+                        //           ),\r\n+                        //           child: Center(\r\n+                        //             child: Text(\r\n+                        //               'signup'.tr(),\r\n+                        //               style: TextStyle(\r\n+                        //                   color: initialLabelIndex == 1\r\n+                        //                       ? Colors.white\r\n+                        //                       : primaryColor,\r\n+                        //                   fontSize: 16),\r\n+                        //             ),\r\n+                        //           ),\r\n+                        //         ),\r\n+                        //       ),\r\n+                        //     ],\r\n+                        //   ),\r\n+                        // ),\r\n                         const SizedBox(height: 30),\r\n                         Form(\r\n                           key: _formKey,\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1694893454825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,8 +233,9 @@\n                         //       ),\r\n                         //     ],\r\n                         //   ),\r\n                         // ),\r\n+                        \r\n                         const SizedBox(height: 30),\r\n                         Form(\r\n                           key: _formKey,\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1694893463468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import 'dart:convert';\r\n \r\n+import 'package:animated_toggle_switch/animated_toggle_switch.dart';\r\n import 'package:easy_localization/easy_localization.dart';\r\n import 'package:final_projectt/Screens/main_screen.dart';\r\n import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n import 'package:final_projectt/core/services/auth_controller.dart';\r\n@@ -233,9 +234,26 @@\n                         //       ),\r\n                         //     ],\r\n                         //   ),\r\n                         // ),\r\n-                        \r\n+                        AnimatedToggleSwitch<String?>.rolling(\r\n+                    indicatorSize: const Size.fromWidth(200),\r\n+                    allowUnlistedValues: true,\r\n+                    styleAnimationType: AnimationType.onHover,\r\n+                    current: nullableValue,\r\n+                    values: const ['login', 'sign up'],\r\n+                    onChanged: (value) => setState(() => nullableValue = value),\r\n+                    iconBuilder: rollingIconBuilder,\r\n+                    customStyleBuilder: (context, local, global) {\r\n+                      final color = local.isValueListed\r\n+                          ? null\r\n+                          : Theme.of(context).colorScheme.error;\r\n+                      return ToggleStyle(\r\n+                        borderColor: color,\r\n+                        indicatorColor: color,\r\n+                      );\r\n+                    },\r\n+                  )\r\n                         const SizedBox(height: 30),\r\n                         Form(\r\n                           key: _formKey,\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1694893492179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,520 @@\n+import 'dart:convert';\r\n+\r\n+import 'package:animated_toggle_switch/animated_toggle_switch.dart';\r\n+import 'package:easy_localization/easy_localization.dart';\r\n+import 'package:final_projectt/Screens/main_screen.dart';\r\n+import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n+import 'package:final_projectt/core/services/auth_controller.dart';\r\n+import 'package:final_projectt/core/util/constants/colors.dart';\r\n+import 'package:final_projectt/core/widgets/show_alert.dart';\r\n+import 'package:final_projectt/models/user_model.dart';\r\n+import 'package:final_projectt/providers/status_provider.dart';\r\n+import 'package:final_projectt/providers/user_provider.dart';\r\n+import 'package:firebase_auth/firebase_auth.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:icons_plus/icons_plus.dart';\r\n+import 'package:provider/provider.dart';\r\n+import 'package:google_sign_in/google_sign_in.dart';\r\n+\r\n+class LoginScreen extends StatefulWidget {\r\n+  const LoginScreen({super.key});\r\n+\r\n+  @override\r\n+  State<LoginScreen> createState() => _LoginScreenState();\r\n+}\r\n+\r\n+class _LoginScreenState extends State<LoginScreen> {\r\n+  int initialLabelIndex = 0;\r\n+  final _formKey = GlobalKey<FormState>();\r\n+  TextEditingController nameController = TextEditingController();\r\n+  TextEditingController emailOrUserNameController = TextEditingController();\r\n+  TextEditingController passController = TextEditingController();\r\n+  TextEditingController confirmPassController = TextEditingController();\r\n+  final FirebaseAuth _auth = FirebaseAuth.instance;\r\n+String? nullableValue = 'login';\r\n+  Future<UserCredential> signInWithGoogle() async {\r\n+    // Trigger the authentication flow\r\n+    final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n+\r\n+    // Obtain the auth details from the request\r\n+    final GoogleSignInAuthentication? googleAuth =\r\n+        await googleUser?.authentication;\r\n+\r\n+    // Create a new credential\r\n+    final credential = GoogleAuthProvider.credential(\r\n+      accessToken: googleAuth?.accessToken,\r\n+      idToken: googleAuth?.idToken,\r\n+    );\r\n+\r\n+    // Once signed in, return the UserCredential\r\n+    return await FirebaseAuth.instance.signInWithCredential(credential);\r\n+  }\r\n+\r\n+  void submitRegister() {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      AuthController.register(context,\r\n+              name: nameController.text,\r\n+              email: emailOrUserNameController.text,\r\n+              password: passController.text,\r\n+              passwordConfirmation: confirmPassController.text)\r\n+          .then((response) async {\r\n+        showAlert(context,\r\n+            message: \"Account Created Successfully,\\n Please Log In\",\r\n+            color: Colors.grey,\r\n+            width: 300);\r\n+        _formKey.currentState!.reset();\r\n+        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+          builder: (context) {\r\n+            return const LoginScreen();\r\n+          },\r\n+        ));\r\n+      }).catchError((err) async {\r\n+        final errorMessagae =\r\n+            json.decode(err.message)['errors']['email'][0].toString();\r\n+        showAlert(context,\r\n+            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  void submitLogin() {\r\n+    if (_formKey.currentState!.validate()) {\r\n+      AuthController.login(\r\n+        context,\r\n+        email: emailOrUserNameController.text,\r\n+        password: passController.text,\r\n+      ).then((response) async {\r\n+        SharedPrefsController prefs = SharedPrefsController();\r\n+        await prefs.setData(\r\n+            'user', userToJson(UserModel.fromJson(response[1])));\r\n+        Provider.of<StatuseProvider>(context, listen: false).updatestutas();\r\n+        Provider.of<UserProvider>(context, listen: false).getUserData();\r\n+\r\n+        Navigator.pushReplacement(context, MaterialPageRoute(\r\n+          builder: (context) {\r\n+            return const MainPage();\r\n+          },\r\n+        ));\r\n+      }).catchError((err) async {\r\n+        final errorMessagae = json.decode(err.message)['message'].toString();\r\n+        showAlert(context,\r\n+            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n+      });\r\n+    }\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n+        body: GestureDetector(\r\n+          onTap: () {\r\n+            FocusScope.of(context).unfocus();\r\n+          },\r\n+          child: SingleChildScrollView(\r\n+            physics: const BouncingScrollPhysics(),\r\n+            child: Stack(\r\n+              alignment: Alignment.topCenter,\r\n+              children: [\r\n+                Container(\r\n+                  clipBehavior: Clip.antiAliasWithSaveLayer,\r\n+                  width: 400,\r\n+                  height: 400,\r\n+                  decoration: const BoxDecoration(\r\n+                    color: Colors.white,\r\n+                    borderRadius: BorderRadius.only(\r\n+                        bottomLeft: Radius.circular(110),\r\n+                        bottomRight: Radius.circular(200)),\r\n+                  ),\r\n+                  child: Image.asset(\r\n+                    'images/splash.jpg',\r\n+                    fit: BoxFit.cover,\r\n+                  ),\r\n+                ),\r\n+                Container(\r\n+                  margin: const EdgeInsets.only(top: 220),\r\n+                  width: 350,\r\n+                  height: initialLabelIndex == 1 ? 570 : 470,\r\n+                  decoration: BoxDecoration(\r\n+                      color: Colors.white,\r\n+                      borderRadius: BorderRadius.circular(80)),\r\n+                  child: Padding(\r\n+                    padding: const EdgeInsetsDirectional.only(\r\n+                      top: 60.0,\r\n+                      end: 60.0,\r\n+                      start: 60.0,\r\n+                    ),\r\n+                    child: Column(\r\n+                      children: [\r\n+                        // ToggleSwitch(\r\n+                        //   fontSize: 16,\r\n+                        //   minWidth: 100.0,\r\n+                        //   cornerRadius: 20.0,\r\n+                        //   activeBgColors: [\r\n+                        //     [Colors.blue[800]!],\r\n+                        //     [Colors.blue[800]!]\r\n+                        //   ],\r\n+                        //   activeFgColor: Colors.white,\r\n+                        //   inactiveBgColor:\r\n+                        //       const Color.fromARGB(255, 234, 232, 232),\r\n+                        //   inactiveFgColor: Colors.blue[800]!,\r\n+                        //   initialLabelIndex: initialLabelIndex,\r\n+                        //   totalSwitches: 2,\r\n+                        //   labels: const ['Log In', 'Sign Up'],\r\n+                        //   radiusStyle: true,\r\n+                        //   onToggle: (index) {\r\n+                        //     setState(() {\r\n+                        //       // isToggled = !isToggled;\r\n+                        //       initialLabelIndex = index!;\r\n+                        //     });\r\n+                        //   },\r\n+                        // ),\r\n+                        // Container(\r\n+                        //   height: 40,\r\n+                        //   width: 200,\r\n+                        //   decoration: BoxDecoration(\r\n+                        //     border: Border.all(color: Colors.grey.shade300),\r\n+                        //     borderRadius: BorderRadius.circular(22),\r\n+                        //   ),\r\n+                        //   child: Row(\r\n+                        //     children: [\r\n+                        //       GestureDetector(\r\n+                        //         onTap: () {\r\n+                        //           setState(() {\r\n+                        //             initialLabelIndex = 0;\r\n+                        //           });\r\n+                        //         },\r\n+                        //         child: Container(\r\n+                        //           height: 45,\r\n+                        //           width: 99,\r\n+                        //           decoration: BoxDecoration(\r\n+                        //             color: initialLabelIndex == 0\r\n+                        //                 ? primaryColor\r\n+                        //                 : Colors.white,\r\n+                        //             borderRadius: BorderRadius.circular(22),\r\n+                        //           ),\r\n+                        //           child: Center(\r\n+                        //             child: Text(\r\n+                        //               'login'.tr(),\r\n+                        //               style: TextStyle(\r\n+                        //                   color: initialLabelIndex == 0\r\n+                        //                       ? Colors.white\r\n+                        //                       : primaryColor,\r\n+                        //                   fontSize: 16),\r\n+                        //             ),\r\n+                        //           ),\r\n+                        //         ),\r\n+                        //       ),\r\n+                        //       GestureDetector(\r\n+                        //         onTap: () {\r\n+                        //           setState(() {\r\n+                        //             initialLabelIndex = 1;\r\n+                        //           });\r\n+                        //         },\r\n+                        //         child: Container(\r\n+                        //           height: 45,\r\n+                        //           width: 99,\r\n+                        //           decoration: BoxDecoration(\r\n+                        //             color: initialLabelIndex == 1\r\n+                        //                 ? primaryColor\r\n+                        //                 : Colors.white,\r\n+                        //             borderRadius: BorderRadius.circular(22),\r\n+                        //           ),\r\n+                        //           child: Center(\r\n+                        //             child: Text(\r\n+                        //               'signup'.tr(),\r\n+                        //               style: TextStyle(\r\n+                        //                   color: initialLabelIndex == 1\r\n+                        //                       ? Colors.white\r\n+                        //                       : primaryColor,\r\n+                        //                   fontSize: 16),\r\n+                        //             ),\r\n+                        //           ),\r\n+                        //         ),\r\n+                        //       ),\r\n+                        //     ],\r\n+                        //   ),\r\n+                        // ),\r\n+                        AnimatedToggleSwitch<String?>.rolling(\r\n+                    indicatorSize: const Size.fromWidth(200),\r\n+                    allowUnlistedValues: true,\r\n+                    styleAnimationType: AnimationType.onHover,\r\n+                    current: nullableValue,\r\n+                    values: const ['login', 'sign up'],\r\n+                    onChanged: (value) => setState(() => nullableValue = value),\r\n+                    iconBuilder: rollingIconBuilder,\r\n+                    customStyleBuilder: (context, local, global) {\r\n+                      final color = local.isValueListed\r\n+                          ? null\r\n+                          : Theme.of(context).colorScheme.error;\r\n+                      return ToggleStyle(\r\n+                        borderColor: color,\r\n+                        indicatorColor: color,\r\n+                      );\r\n+                    },\r\n+                  )\r\n+                        const SizedBox(height: 30),\r\n+                        Form(\r\n+                          key: _formKey,\r\n+                          child: Column(\r\n+                            children: [\r\n+                              if (initialLabelIndex == 1)\r\n+                                TextFormField(\r\n+                                  controller: nameController,\r\n+                                  validator: (value) {\r\n+                                    if (value == null || value.isEmpty) {\r\n+                                      return 'Please enter your name';\r\n+                                    }\r\n+                                    return null;\r\n+                                  },\r\n+                                  decoration: const InputDecoration(\r\n+                                      hintText: 'Enter your name',\r\n+                                      hintStyle: TextStyle(\r\n+                                          color: Colors.grey,\r\n+                                          fontFamily: 'Iphone',\r\n+                                          fontSize: 14),\r\n+                                      fillColor: Colors.grey,\r\n+                                      enabledBorder: UnderlineInputBorder(\r\n+                                          borderSide:\r\n+                                              BorderSide(color: Colors.grey)),\r\n+                                      focusedBorder: UnderlineInputBorder(\r\n+                                          borderSide:\r\n+                                              BorderSide(color: Colors.grey))),\r\n+                                ),\r\n+                              TextFormField(\r\n+                                controller: emailOrUserNameController,\r\n+                                validator: (value) {\r\n+                                  if (value == null || value.isEmpty) {\r\n+                                    return 'Please enter email or username';\r\n+                                  }\r\n+                                  return null;\r\n+                                },\r\n+                                decoration: const InputDecoration(\r\n+                                    hintText: 'Enter email or username',\r\n+                                    hintStyle: TextStyle(\r\n+                                        color: Colors.grey,\r\n+                                        fontFamily: 'Iphone',\r\n+                                        fontSize: 14),\r\n+                                    fillColor: Colors.grey,\r\n+                                    enabledBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey)),\r\n+                                    focusedBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey))),\r\n+                              ),\r\n+                              const SizedBox(\r\n+                                height: 15,\r\n+                              ),\r\n+                              TextFormField(\r\n+                                controller: passController,\r\n+                                obscureText: true,\r\n+                                validator: (value) {\r\n+                                  if (value == null || value.isEmpty) {\r\n+                                    return ' Please enter a password  ';\r\n+                                  }\r\n+                                  return null;\r\n+                                },\r\n+                                decoration: const InputDecoration(\r\n+                                    hintText: 'Password',\r\n+                                    hintStyle: TextStyle(\r\n+                                        color: Colors.grey,\r\n+                                        fontFamily: 'Iphone',\r\n+                                        fontSize: 14),\r\n+                                    fillColor: Colors.grey,\r\n+                                    enabledBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey)),\r\n+                                    focusedBorder: UnderlineInputBorder(\r\n+                                        borderSide:\r\n+                                            BorderSide(color: Colors.grey))),\r\n+                              ),\r\n+                              const SizedBox(\r\n+                                height: 15,\r\n+                              ),\r\n+                              if (initialLabelIndex == 1)\r\n+                                Column(\r\n+                                  children: [\r\n+                                    TextFormField(\r\n+                                      controller: confirmPassController,\r\n+                                      obscureText: true,\r\n+                                      validator: (value) {\r\n+                                        if (value == null || value.isEmpty) {\r\n+                                          return 'Please confirm your password';\r\n+                                        } else if (value !=\r\n+                                            passController.text) {\r\n+                                          return 'Passwords do not match';\r\n+                                        }\r\n+                                        return null;\r\n+                                      },\r\n+                                      decoration: const InputDecoration(\r\n+                                          hintText: 'Confirm Password',\r\n+                                          hintStyle: TextStyle(\r\n+                                              color: Colors.grey,\r\n+                                              fontFamily: 'Iphone',\r\n+                                              fontSize: 14),\r\n+                                          fillColor: Colors.grey,\r\n+                                          enabledBorder: UnderlineInputBorder(\r\n+                                              borderSide: BorderSide(\r\n+                                                  color: Colors.grey)),\r\n+                                          focusedBorder: UnderlineInputBorder(\r\n+                                              borderSide: BorderSide(\r\n+                                                  color: Colors.grey))),\r\n+                                    ),\r\n+                                    const SizedBox(\r\n+                                      height: 25,\r\n+                                    ),\r\n+                                  ],\r\n+                                ),\r\n+                              TextButton(\r\n+                                onPressed: () {\r\n+                                  if (initialLabelIndex == 1) {\r\n+                                    if (_formKey.currentState!.validate()) {\r\n+                                      submitRegister();\r\n+                                    }\r\n+                                  } else {\r\n+                                    if (_formKey.currentState!.validate()) {\r\n+                                      submitLogin();\r\n+                                    }\r\n+\r\n+                                    // if (Form.of(context).validate()) {\r\n+                                    //   Navigator.push(\r\n+                                    //     context,\r\n+                                    //     MaterialPageRoute(\r\n+                                    //         builder: (context) =>\r\n+                                    //             const HomeScreen()),\r\n+                                    //   );\r\n+                                    // }\r\n+                                  }\r\n+                                },\r\n+                                style: ElevatedButton.styleFrom(\r\n+                                  shape: RoundedRectangleBorder(\r\n+                                    borderRadius: BorderRadius.circular(20.0),\r\n+                                  ),\r\n+                                ),\r\n+                                child: Container(\r\n+                                  width: double.infinity,\r\n+                                  decoration: BoxDecoration(\r\n+                                    color: primaryColor,\r\n+                                    borderRadius: BorderRadius.circular(20.0),\r\n+                                  ),\r\n+                                  padding: const EdgeInsets.symmetric(\r\n+                                      vertical: 16.0, horizontal: 32.0),\r\n+                                  child: Text(\r\n+                                    initialLabelIndex == 1\r\n+                                        ? 'signup'.tr()\r\n+                                        : 'login'.tr(),\r\n+                                    textAlign: TextAlign.center,\r\n+                                    style: const TextStyle(\r\n+                                      color: Colors.white,\r\n+                                      fontSize: 16,\r\n+                                    ),\r\n+                                  ),\r\n+                                ),\r\n+                              ),\r\n+                              const SizedBox(\r\n+                                height: 14,\r\n+                              ),\r\n+                              const Text(\r\n+                                'OR',\r\n+                                textAlign: TextAlign.center,\r\n+                                style: TextStyle(\r\n+                                  color: Colors.grey,\r\n+                                  fontSize: 14,\r\n+                                ),\r\n+                              ),\r\n+                              const SizedBox(height: 16),\r\n+                              Row(\r\n+                                mainAxisAlignment:\r\n+                                    MainAxisAlignment.spaceEvenly,\r\n+                                children: [\r\n+                                  InkWell(\r\n+                                    onTap: () {},\r\n+                                    child: Container(\r\n+                                      padding:\r\n+                                          const EdgeInsetsDirectional.symmetric(\r\n+                                        horizontal: 8,\r\n+                                        vertical: 8,\r\n+                                      ),\r\n+                                      decoration: BoxDecoration(\r\n+                                        borderRadius: BorderRadius.circular(20),\r\n+                                        border: Border.all(\r\n+                                            color: const Color.fromARGB(\r\n+                                                255, 210, 208, 208)),\r\n+                                      ),\r\n+                                      child: Logo(\r\n+                                        Logos.facebook_f,\r\n+                                        size: 24,\r\n+                                      ),\r\n+                                    ),\r\n+                                  ),\r\n+                                  InkWell(\r\n+                                    onTap: () {},\r\n+                                    child: Container(\r\n+                                      padding: const EdgeInsets.symmetric(\r\n+                                        horizontal: 8,\r\n+                                        vertical: 8,\r\n+                                      ),\r\n+                                      decoration: BoxDecoration(\r\n+                                        borderRadius: BorderRadius.circular(20),\r\n+                                        border: Border.all(\r\n+                                            color: const Color.fromARGB(\r\n+                                                255, 210, 208, 208)),\r\n+                                      ),\r\n+                                      child: Logo(\r\n+                                        Logos.twitter,\r\n+                                        size: 24,\r\n+                                      ),\r\n+                                    ),\r\n+                                  ),\r\n+                                  InkWell(\r\n+                                    onTap: () {\r\n+                                      signInWithGoogle().then((value) {\r\n+                                        nameController.text = value\r\n+                                            .additionalUserInfo!\r\n+                                            .profile?[\"name\"];\r\n+                                        emailOrUserNameController.text =\r\n+                                            value.user!.email!;\r\n+                                      });\r\n+                                      setState(() {\r\n+                                        signInWithGoogle().then((value) {\r\n+                                          nameController.text = value\r\n+                                              .additionalUserInfo!\r\n+                                              .profile?[\"name\"];\r\n+                                          emailOrUserNameController.text =\r\n+                                              value.user!.email!;\r\n+                                        });\r\n+                                      });\r\n+                                    },\r\n+                                    child: Container(\r\n+                                      padding: const EdgeInsets.symmetric(\r\n+                                        horizontal: 8,\r\n+                                        vertical: 8,\r\n+                                      ),\r\n+                                      decoration: BoxDecoration(\r\n+                                        borderRadius: BorderRadius.circular(20),\r\n+                                        border: Border.all(\r\n+                                            color: const Color.fromARGB(\r\n+                                                255, 210, 208, 208)),\r\n+                                      ),\r\n+                                      child: Logo(\r\n+                                        Logos.google,\r\n+                                        size: 24,\r\n+                                      ),\r\n+                                    ),\r\n+                                  ),\r\n+                                ],\r\n+                              ),\r\n+                            ],\r\n+                          ),\r\n+                        ),\r\n+                      ],\r\n+                    ),\r\n+                  ),\r\n+                )\r\n+              ],\r\n+            ),\r\n+          ),\r\n+        ));\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1694893520788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,529 +101,14 @@\n             message: errorMessagae, color: Colors.redAccent, width: 300);\r\n       });\r\n     }\r\n   }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n-        body: GestureDetector(\r\n-          onTap: () {\r\n-            FocusScope.of(context).unfocus();\r\n-          },\r\n-          child: SingleChildScrollView(\r\n-            physics: const BouncingScrollPhysics(),\r\n-            child: Stack(\r\n-              alignment: Alignment.topCenter,\r\n-              children: [\r\n-                Container(\r\n-                  clipBehavior: Clip.antiAliasWithSaveLayer,\r\n-                  width: 400,\r\n-                  height: 400,\r\n-                  decoration: const BoxDecoration(\r\n-                    color: Colors.white,\r\n-                    borderRadius: BorderRadius.only(\r\n-                        bottomLeft: Radius.circular(110),\r\n-                        bottomRight: Radius.circular(200)),\r\n-                  ),\r\n-                  child: Image.asset(\r\n-                    'images/splash.jpg',\r\n-                    fit: BoxFit.cover,\r\n-                  ),\r\n-                ),\r\n-                Container(\r\n-                  margin: const EdgeInsets.only(top: 220),\r\n-                  width: 350,\r\n-                  height: initialLabelIndex == 1 ? 570 : 470,\r\n-                  decoration: BoxDecoration(\r\n-                      color: Colors.white,\r\n-                      borderRadius: BorderRadius.circular(80)),\r\n-                  child: Padding(\r\n-                    padding: const EdgeInsetsDirectional.only(\r\n-                      top: 60.0,\r\n-                      end: 60.0,\r\n-                      start: 60.0,\r\n-                    ),\r\n-                    child: Column(\r\n-                      children: [\r\n-                        // ToggleSwitch(\r\n-                        //   fontSize: 16,\r\n-                        //   minWidth: 100.0,\r\n-                        //   cornerRadius: 20.0,\r\n-                        //   activeBgColors: [\r\n-                        //     [Colors.blue[800]!],\r\n-                        //     [Colors.blue[800]!]\r\n-                        //   ],\r\n-                        //   activeFgColor: Colors.white,\r\n-                        //   inactiveBgColor:\r\n-                        //       const Color.fromARGB(255, 234, 232, 232),\r\n-                        //   inactiveFgColor: Colors.blue[800]!,\r\n-                        //   initialLabelIndex: initialLabelIndex,\r\n-                        //   totalSwitches: 2,\r\n-                        //   labels: const ['Log In', 'Sign Up'],\r\n-                        //   radiusStyle: true,\r\n-                        //   onToggle: (index) {\r\n-                        //     setState(() {\r\n-                        //       // isToggled = !isToggled;\r\n-                        //       initialLabelIndex = index!;\r\n-                        //     });\r\n-                        //   },\r\n-                        // ),\r\n-                        // Container(\r\n-                        //   height: 40,\r\n-                        //   width: 200,\r\n-                        //   decoration: BoxDecoration(\r\n-                        //     border: Border.all(color: Colors.grey.shade300),\r\n-                        //     borderRadius: BorderRadius.circular(22),\r\n-                        //   ),\r\n-                        //   child: Row(\r\n-                        //     children: [\r\n-                        //       GestureDetector(\r\n-                        //         onTap: () {\r\n-                        //           setState(() {\r\n-                        //             initialLabelIndex = 0;\r\n-                        //           });\r\n-                        //         },\r\n-                        //         child: Container(\r\n-                        //           height: 45,\r\n-                        //           width: 99,\r\n-                        //           decoration: BoxDecoration(\r\n-                        //             color: initialLabelIndex == 0\r\n-                        //                 ? primaryColor\r\n-                        //                 : Colors.white,\r\n-                        //             borderRadius: BorderRadius.circular(22),\r\n-                        //           ),\r\n-                        //           child: Center(\r\n-                        //             child: Text(\r\n-                        //               'login'.tr(),\r\n-                        //               style: TextStyle(\r\n-                        //                   color: initialLabelIndex == 0\r\n-                        //                       ? Colors.white\r\n-                        //                       : primaryColor,\r\n-                        //                   fontSize: 16),\r\n-                        //             ),\r\n-                        //           ),\r\n-                        //         ),\r\n-                        //       ),\r\n-                        //       GestureDetector(\r\n-                        //         onTap: () {\r\n-                        //           setState(() {\r\n-                        //             initialLabelIndex = 1;\r\n-                        //           });\r\n-                        //         },\r\n-                        //         child: Container(\r\n-                        //           height: 45,\r\n-                        //           width: 99,\r\n-                        //           decoration: BoxDecoration(\r\n-                        //             color: initialLabelIndex == 1\r\n-                        //                 ? primaryColor\r\n-                        //                 : Colors.white,\r\n-                        //             borderRadius: BorderRadius.circular(22),\r\n-                        //           ),\r\n-                        //           child: Center(\r\n-                        //             child: Text(\r\n-                        //               'signup'.tr(),\r\n-                        //               style: TextStyle(\r\n-                        //                   color: initialLabelIndex == 1\r\n-                        //                       ? Colors.white\r\n-                        //                       : primaryColor,\r\n-                        //                   fontSize: 16),\r\n-                        //             ),\r\n-                        //           ),\r\n-                        //         ),\r\n-                        //       ),\r\n-                        //     ],\r\n-                        //   ),\r\n-                        // ),\r\n-                        AnimatedToggleSwitch<String?>.rolling(\r\n-                    indicatorSize: const Size.fromWidth(200),\r\n-                    allowUnlistedValues: true,\r\n-                    styleAnimationType: AnimationType.onHover,\r\n-                    current: nullableValue,\r\n-                    values: const ['login', 'sign up'],\r\n-                    onChanged: (value) => setState(() => nullableValue = value),\r\n-                    iconBuilder: rollingIconBuilder,\r\n-                    customStyleBuilder: (context, local, global) {\r\n-                      final color = local.isValueListed\r\n-                          ? null\r\n-                          : Theme.of(context).colorScheme.error;\r\n-                      return ToggleStyle(\r\n-                        borderColor: color,\r\n-                        indicatorColor: color,\r\n-                      );\r\n-                    },\r\n-                  )\r\n-                        const SizedBox(height: 30),\r\n-                        Form(\r\n-                          key: _formKey,\r\n-                          child: Column(\r\n-                            children: [\r\n-                              if (initialLabelIndex == 1)\r\n-                                TextFormField(\r\n-                                  controller: nameController,\r\n-                                  validator: (value) {\r\n-                                    if (value == null || value.isEmpty) {\r\n-                                      return 'Please enter your name';\r\n-                                    }\r\n-                                    return null;\r\n-                                  },\r\n-                                  decoration: const InputDecoration(\r\n-                                      hintText: 'Enter your name',\r\n-                                      hintStyle: TextStyle(\r\n-                                          color: Colors.grey,\r\n-                                          fontFamily: 'Iphone',\r\n-                                          fontSize: 14),\r\n-                                      fillColor: Colors.grey,\r\n-                                      enabledBorder: UnderlineInputBorder(\r\n-                                          borderSide:\r\n-                                              BorderSide(color: Colors.grey)),\r\n-                                      focusedBorder: UnderlineInputBorder(\r\n-                                          borderSide:\r\n-                                              BorderSide(color: Colors.grey))),\r\n-                                ),\r\n-                              TextFormField(\r\n-                                controller: emailOrUserNameController,\r\n-                                validator: (value) {\r\n-                                  if (value == null || value.isEmpty) {\r\n-                                    return 'Please enter email or username';\r\n-                                  }\r\n-                                  return null;\r\n-                                },\r\n-                                decoration: const InputDecoration(\r\n-                                    hintText: 'Enter email or username',\r\n-                                    hintStyle: TextStyle(\r\n-                                        color: Colors.grey,\r\n-                                        fontFamily: 'Iphone',\r\n-                                        fontSize: 14),\r\n-                                    fillColor: Colors.grey,\r\n-                                    enabledBorder: UnderlineInputBorder(\r\n-                                        borderSide:\r\n-                                            BorderSide(color: Colors.grey)),\r\n-                                    focusedBorder: UnderlineInputBorder(\r\n-                                        borderSide:\r\n-                                            BorderSide(color: Colors.grey))),\r\n-                              ),\r\n-                              const SizedBox(\r\n-                                height: 15,\r\n-                              ),\r\n-                              TextFormField(\r\n-                                controller: passController,\r\n-                                obscureText: true,\r\n-                                validator: (value) {\r\n-                                  if (value == null || value.isEmpty) {\r\n-                                    return ' Please enter a password  ';\r\n-                                  }\r\n-                                  return null;\r\n-                                },\r\n-                                decoration: const InputDecoration(\r\n-                                    hintText: 'Password',\r\n-                                    hintStyle: TextStyle(\r\n-                                        color: Colors.grey,\r\n-                                        fontFamily: 'Iphone',\r\n-                                        fontSize: 14),\r\n-                                    fillColor: Colors.grey,\r\n-                                    enabledBorder: UnderlineInputBorder(\r\n-                                        borderSide:\r\n-                                            BorderSide(color: Colors.grey)),\r\n-                                    focusedBorder: UnderlineInputBorder(\r\n-                                        borderSide:\r\n-                                            BorderSide(color: Colors.grey))),\r\n-                              ),\r\n-                              const SizedBox(\r\n-                                height: 15,\r\n-                              ),\r\n-                              if (initialLabelIndex == 1)\r\n-                                Column(\r\n-                                  children: [\r\n-                                    TextFormField(\r\n-                                      controller: confirmPassController,\r\n-                                      obscureText: true,\r\n-                                      validator: (value) {\r\n-                                        if (value == null || value.isEmpty) {\r\n-                                          return 'Please confirm your password';\r\n-                                        } else if (value !=\r\n-                                            passController.text) {\r\n-                                          return 'Passwords do not match';\r\n-                                        }\r\n-                                        return null;\r\n-                                      },\r\n-                                      decoration: const InputDecoration(\r\n-                                          hintText: 'Confirm Password',\r\n-                                          hintStyle: TextStyle(\r\n-                                              color: Colors.grey,\r\n-                                              fontFamily: 'Iphone',\r\n-                                              fontSize: 14),\r\n-                                          fillColor: Colors.grey,\r\n-                                          enabledBorder: UnderlineInputBorder(\r\n-                                              borderSide: BorderSide(\r\n-                                                  color: Colors.grey)),\r\n-                                          focusedBorder: UnderlineInputBorder(\r\n-                                              borderSide: BorderSide(\r\n-                                                  color: Colors.grey))),\r\n-                                    ),\r\n-                                    const SizedBox(\r\n-                                      height: 25,\r\n-                                    ),\r\n-                                  ],\r\n-                                ),\r\n-                              TextButton(\r\n-                                onPressed: () {\r\n-                                  if (initialLabelIndex == 1) {\r\n-                                    if (_formKey.currentState!.validate()) {\r\n-                                      submitRegister();\r\n-                                    }\r\n-                                  } else {\r\n-                                    if (_formKey.currentState!.validate()) {\r\n-                                      submitLogin();\r\n-                                    }\r\n-\r\n-                                    // if (Form.of(context).validate()) {\r\n-                                    //   Navigator.push(\r\n-                                    //     context,\r\n-                                    //     MaterialPageRoute(\r\n-                                    //         builder: (context) =>\r\n-                                    //             const HomeScreen()),\r\n-                                    //   );\r\n-                                    // }\r\n-                                  }\r\n-                                },\r\n-                                style: ElevatedButton.styleFrom(\r\n-                                  shape: RoundedRectangleBorder(\r\n-                                    borderRadius: BorderRadius.circular(20.0),\r\n-                                  ),\r\n-                                ),\r\n-                                child: Container(\r\n-                                  width: double.infinity,\r\n-                                  decoration: BoxDecoration(\r\n-                                    color: primaryColor,\r\n-                                    borderRadius: BorderRadius.circular(20.0),\r\n-                                  ),\r\n-                                  padding: const EdgeInsets.symmetric(\r\n-                                      vertical: 16.0, horizontal: 32.0),\r\n-                                  child: Text(\r\n-                                    initialLabelIndex == 1\r\n-                                        ? 'signup'.tr()\r\n-                                        : 'login'.tr(),\r\n-                                    textAlign: TextAlign.center,\r\n-                                    style: const TextStyle(\r\n-                                      color: Colors.white,\r\n-                                      fontSize: 16,\r\n-                                    ),\r\n-                                  ),\r\n-                                ),\r\n-                              ),\r\n-                              const SizedBox(\r\n-                                height: 14,\r\n-                              ),\r\n-                              const Text(\r\n-                                'OR',\r\n-                                textAlign: TextAlign.center,\r\n-                                style: TextStyle(\r\n-                                  color: Colors.grey,\r\n-                                  fontSize: 14,\r\n-                                ),\r\n-                              ),\r\n-                              const SizedBox(height: 16),\r\n-                              Row(\r\n-                                mainAxisAlignment:\r\n-                                    MainAxisAlignment.spaceEvenly,\r\n-                                children: [\r\n-                                  InkWell(\r\n-                                    onTap: () {},\r\n-                                    child: Container(\r\n-                                      padding:\r\n-                                          const EdgeInsetsDirectional.symmetric(\r\n-                                        horizontal: 8,\r\n-                                        vertical: 8,\r\n-                                      ),\r\n-                                      decoration: BoxDecoration(\r\n-                                        borderRadius: BorderRadius.circular(20),\r\n-                                        border: Border.all(\r\n-                                            color: const Color.fromARGB(\r\n-                                                255, 210, 208, 208)),\r\n-                                      ),\r\n-                                      child: Logo(\r\n-                                        Logos.facebook_f,\r\n-                                        size: 24,\r\n-                                      ),\r\n-                                    ),\r\n-                                  ),\r\n-                                  InkWell(\r\n-                                    onTap: () {},\r\n-                                    child: Container(\r\n-                                      padding: const EdgeInsets.symmetric(\r\n-                                        horizontal: 8,\r\n-                                        vertical: 8,\r\n-                                      ),\r\n-                                      decoration: BoxDecoration(\r\n-                                        borderRadius: BorderRadius.circular(20),\r\n-                                        border: Border.all(\r\n-                                            color: const Color.fromARGB(\r\n-                                                255, 210, 208, 208)),\r\n-                                      ),\r\n-                                      child: Logo(\r\n-                                        Logos.twitter,\r\n-                                        size: 24,\r\n-                                      ),\r\n-                                    ),\r\n-                                  ),\r\n-                                  InkWell(\r\n-                                    onTap: () {\r\n-                                      signInWithGoogle().then((value) {\r\n-                                        nameController.text = value\r\n-                                            .additionalUserInfo!\r\n-                                            .profile?[\"name\"];\r\n-                                        emailOrUserNameController.text =\r\n-                                            value.user!.email!;\r\n-                                      });\r\n-                                      setState(() {\r\n-                                        signInWithGoogle().then((value) {\r\n-                                          nameController.text = value\r\n-                                              .additionalUserInfo!\r\n-                                              .profile?[\"name\"];\r\n-                                          emailOrUserNameController.text =\r\n-                                              value.user!.email!;\r\n-                                        });\r\n-                                      });\r\n-                                    },\r\n-                                    child: Container(\r\n-                                      padding: const EdgeInsets.symmetric(\r\n-                                        horizontal: 8,\r\n-                                        vertical: 8,\r\n-                                      ),\r\n-                                      decoration: BoxDecoration(\r\n-                                        borderRadius: BorderRadius.circular(20),\r\n-                                        border: Border.all(\r\n-                                            color: const Color.fromARGB(\r\n-                                                255, 210, 208, 208)),\r\n-                                      ),\r\n-                                      child: Logo(\r\n-                                        Logos.google,\r\n-                                        size: 24,\r\n-                                      ),\r\n-                                    ),\r\n-                                  ),\r\n-                                ],\r\n-                              ),\r\n-                            ],\r\n-                          ),\r\n-                        ),\r\n-                      ],\r\n-                    ),\r\n-                  ),\r\n-                )\r\n-              ],\r\n-            ),\r\n-          ),\r\n-        ));\r\n-  }\r\n-}\r\n-import 'dart:convert';\r\n-\r\n-import 'package:animated_toggle_switch/animated_toggle_switch.dart';\r\n-import 'package:easy_localization/easy_localization.dart';\r\n-import 'package:final_projectt/Screens/main_screen.dart';\r\n-import 'package:final_projectt/core/helpers/shared_prefs.dart';\r\n-import 'package:final_projectt/core/services/auth_controller.dart';\r\n-import 'package:final_projectt/core/util/constants/colors.dart';\r\n-import 'package:final_projectt/core/widgets/show_alert.dart';\r\n-import 'package:final_projectt/models/user_model.dart';\r\n-import 'package:final_projectt/providers/status_provider.dart';\r\n-import 'package:final_projectt/providers/user_provider.dart';\r\n-import 'package:firebase_auth/firebase_auth.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:icons_plus/icons_plus.dart';\r\n-import 'package:provider/provider.dart';\r\n-import 'package:google_sign_in/google_sign_in.dart';\r\n-\r\n-class LoginScreen extends StatefulWidget {\r\n-  const LoginScreen({super.key});\r\n-\r\n-  @override\r\n-  State<LoginScreen> createState() => _LoginScreenState();\r\n-}\r\n-\r\n-class _LoginScreenState extends State<LoginScreen> {\r\n-  int initialLabelIndex = 0;\r\n-  final _formKey = GlobalKey<FormState>();\r\n-  TextEditingController nameController = TextEditingController();\r\n-  TextEditingController emailOrUserNameController = TextEditingController();\r\n-  TextEditingController passController = TextEditingController();\r\n-  TextEditingController confirmPassController = TextEditingController();\r\n-  final FirebaseAuth _auth = FirebaseAuth.instance;\r\n-\r\n-  Future<UserCredential> signInWithGoogle() async {\r\n-    // Trigger the authentication flow\r\n-    final GoogleSignInAccount? googleUser = await GoogleSignIn().signIn();\r\n-\r\n-    // Obtain the auth details from the request\r\n-    final GoogleSignInAuthentication? googleAuth =\r\n-        await googleUser?.authentication;\r\n-\r\n-    // Create a new credential\r\n-    final credential = GoogleAuthProvider.credential(\r\n-      accessToken: googleAuth?.accessToken,\r\n-      idToken: googleAuth?.idToken,\r\n+ Widget rollingIconBuilder(String? value, bool isActive) {\r\n+    return Text(\r\n+      value!,\r\n+      style: const TextStyle(fontSize: 18, fontWeight: FontWeight.bold),\r\n     );\r\n-\r\n-    // Once signed in, return the UserCredential\r\n-    return await FirebaseAuth.instance.signInWithCredential(credential);\r\n   }\r\n-\r\n-  void submitRegister() {\r\n-    if (_formKey.currentState!.validate()) {\r\n-      AuthController.register(context,\r\n-              name: nameController.text,\r\n-              email: emailOrUserNameController.text,\r\n-              password: passController.text,\r\n-              passwordConfirmation: confirmPassController.text)\r\n-          .then((response) async {\r\n-        showAlert(context,\r\n-            message: \"Account Created Successfully,\\n Please Log In\",\r\n-            color: Colors.grey,\r\n-            width: 300);\r\n-        _formKey.currentState!.reset();\r\n-        Navigator.pushReplacement(context, MaterialPageRoute(\r\n-          builder: (context) {\r\n-            return const LoginScreen();\r\n-          },\r\n-        ));\r\n-      }).catchError((err) async {\r\n-        final errorMessagae =\r\n-            json.decode(err.message)['errors']['email'][0].toString();\r\n-        showAlert(context,\r\n-            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n-  void submitLogin() {\r\n-    if (_formKey.currentState!.validate()) {\r\n-      AuthController.login(\r\n-        context,\r\n-        email: emailOrUserNameController.text,\r\n-        password: passController.text,\r\n-      ).then((response) async {\r\n-        SharedPrefsController prefs = SharedPrefsController();\r\n-        await prefs.setData(\r\n-            'user', userToJson(UserModel.fromJson(response[1])));\r\n-        Provider.of<StatuseProvider>(context, listen: false).updatestutas();\r\n-        Provider.of<UserProvider>(context, listen: false).getUserData();\r\n-\r\n-        Navigator.pushReplacement(context, MaterialPageRoute(\r\n-          builder: (context) {\r\n-            return const MainPage();\r\n-          },\r\n-        ));\r\n-      }).catchError((err) async {\r\n-        final errorMessagae = json.decode(err.message)['message'].toString();\r\n-        showAlert(context,\r\n-            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n-      });\r\n-    }\r\n-  }\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n         backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n"
                },
                {
                    "date": 1694893529738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -256,9 +256,9 @@\n                         borderColor: color,\r\n                         indicatorColor: color,\r\n                       );\r\n                     },\r\n-                  )\r\n+                  ),\r\n                         const SizedBox(height: 30),\r\n                         Form(\r\n                           key: _formKey,\r\n                           child: Column(\r\n"
                },
                {
                    "date": 1694893554777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,9 @@\n                         //     ],\r\n                         //   ),\r\n                         // ),\r\n                         AnimatedToggleSwitch<String?>.rolling(\r\n-                          indicatorSize: const Size.fromWidth(200),\r\n+                          indicatorSize: const Size.fromWidth(150),\r\n                           allowUnlistedValues: true,\r\n                           styleAnimationType: AnimationType.onHover,\r\n                           current: nullableValue,\r\n                           values: const ['login', 'sign up'],\r\n"
                },
                {
                    "date": 1694893565527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -242,9 +242,9 @@\n                         //     ],\r\n                         //   ),\r\n                         // ),\r\n                         AnimatedToggleSwitch<String?>.rolling(\r\n-                          indicatorSize: const Size.fromWidth(150),\r\n+                          indicatorSize: const Size.fromWidth(100),\r\n                           allowUnlistedValues: true,\r\n                           styleAnimationType: AnimationType.onHover,\r\n                           current: nullableValue,\r\n                           values: const ['login', 'sign up'],\r\n"
                }
            ],
            "date": 1693750468458,
            "name": "Commit-0",
            "content": "import 'dart:convert';\r\n\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/helpers/shared_prefs.dart';\r\nimport 'package:final_projectt/core/services/auth_controller.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/core/widgets/show_alert.dart';\r\nimport 'package:final_projectt/models/user_model.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:icons_plus/icons_plus.dart';\r\nimport 'package:toggle_switch/toggle_switch.dart';\r\n\r\nclass LoginScreen extends StatefulWidget {\r\n  const LoginScreen({super.key});\r\n\r\n  @override\r\n  State<LoginScreen> createState() => _LoginScreenState();\r\n}\r\n\r\nclass _LoginScreenState extends State<LoginScreen> {\r\n  bool isToggled = false;\r\n  int initialLabelIndex = 0;\r\n  final _formKey = GlobalKey<FormState>();\r\n  TextEditingController nameController = TextEditingController();\r\n  TextEditingController emailOrUserNameController = TextEditingController();\r\n  TextEditingController passController = TextEditingController();\r\n  TextEditingController confirmPassController = TextEditingController();\r\n\r\n  void submitRegister() {\r\n    if (_formKey.currentState!.validate()) {\r\n      AuthController.register(context,\r\n              name: nameController.text,\r\n              email: emailOrUserNameController.text,\r\n              password: passController.text,\r\n              passwordConfirmation: confirmPassController.text)\r\n          .then((response) async {\r\n        showAlert(context,\r\n            message: \"Account Created Successfully,\\n Please Log In\",\r\n            color: Colors.grey,\r\n            width: 300);\r\n        Navigator.pushReplacement(context, MaterialPageRoute(\r\n          builder: (context) {\r\n            return LoginScreen();\r\n          },\r\n        ));\r\n      }).catchError((err) async {\r\n        final errorMessagae =\r\n            json.decode(err.message)['errors']['email'][0].toString();\r\n        showAlert(context,\r\n            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n      });\r\n    }\r\n  }\r\n\r\n  void submitLogin() {\r\n    if (_formKey.currentState!.validate()) {\r\n      AuthController.login(\r\n        context,\r\n        email: emailOrUserNameController.text,\r\n        password: passController.text,\r\n      ).then((response) async {\r\n        SharedPrefsController prefs = SharedPrefsController();\r\n        await prefs.setData('user', userToJson(User.fromJson(response[1])));\r\n        Navigator.pushReplacement(context, MaterialPageRoute(\r\n          builder: (context) {\r\n            return const MainPage();\r\n          },\r\n        ));\r\n      }).catchError((err) async {\r\n        final errorMessagae = json.decode(err.message)['message'].toString();\r\n        showAlert(context,\r\n            message: errorMessagae, color: Colors.redAccent, width: 300);\r\n      });\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n        backgroundColor: const Color.fromARGB(255, 234, 229, 229),\r\n        body: GestureDetector(\r\n          onTap: () {\r\n            FocusScope.of(context).unfocus();\r\n          },\r\n          child: SingleChildScrollView(\r\n            physics: const BouncingScrollPhysics(),\r\n            child: Stack(\r\n              alignment: Alignment.topCenter,\r\n              children: [\r\n                Container(\r\n                  clipBehavior: Clip.antiAliasWithSaveLayer,\r\n                  width: 400,\r\n                  height: 400,\r\n                  decoration: const BoxDecoration(\r\n                    color: Colors.white,\r\n                    borderRadius: BorderRadius.only(\r\n                        bottomLeft: Radius.circular(110),\r\n                        bottomRight: Radius.circular(200)),\r\n                  ),\r\n                  child: Image.asset(\r\n                    'images/splash.jpg',\r\n                    fit: BoxFit.cover,\r\n                  ),\r\n                ),\r\n                Container(\r\n                  margin: const EdgeInsets.only(top: 220),\r\n                  width: 350,\r\n                  height: isToggled ? 570 : 470,\r\n                  decoration: BoxDecoration(\r\n                      color: Colors.white,\r\n                      borderRadius: BorderRadius.circular(80)),\r\n                  child: Padding(\r\n                    padding: const EdgeInsetsDirectional.only(\r\n                      top: 60.0,\r\n                      end: 60.0,\r\n                      start: 60.0,\r\n                    ),\r\n                    child: Column(\r\n                      children: [\r\n                        ToggleSwitch(\r\n                          fontSize: 16,\r\n                          minWidth: 100.0,\r\n                          cornerRadius: 20.0,\r\n                          activeBgColors: [\r\n                            [Colors.blue[800]!],\r\n                            [Colors.blue[800]!]\r\n                          ],\r\n                          activeFgColor: Colors.white,\r\n                          inactiveBgColor:\r\n                              const Color.fromARGB(255, 234, 232, 232),\r\n                          inactiveFgColor: Colors.blue[800]!,\r\n                          initialLabelIndex: initialLabelIndex,\r\n                          totalSwitches: 2,\r\n                          labels: const ['Log In', 'Sign Up'],\r\n                          radiusStyle: true,\r\n                          onToggle: (index) {\r\n                            setState(() {\r\n                              isToggled = !isToggled;\r\n                              initialLabelIndex = index!;\r\n                            });\r\n                          },\r\n                        ),\r\n                        SizedBox(height: 30),\r\n                        Form(\r\n                          key: _formKey,\r\n                          child: Column(\r\n                            children: [\r\n                              if (isToggled)\r\n                                TextFormField(\r\n                                  controller: nameController,\r\n                                  validator: (value) {\r\n                                    if (value == null || value.isEmpty) {\r\n                                      return 'Please enter your name';\r\n                                    }\r\n                                    return null;\r\n                                  },\r\n                                  decoration: InputDecoration(\r\n                                      hintText: 'Enter your name',\r\n                                      hintStyle: TextStyle(\r\n                                          color: Colors.grey,\r\n                                          fontFamily: 'Iphone',\r\n                                          fontSize: 14),\r\n                                      fillColor: Colors.grey,\r\n                                      enabledBorder: UnderlineInputBorder(\r\n                                          borderSide:\r\n                                              BorderSide(color: Colors.grey)),\r\n                                      focusedBorder: UnderlineInputBorder(\r\n                                          borderSide:\r\n                                              BorderSide(color: Colors.grey))),\r\n                                ),\r\n                              TextFormField(\r\n                                controller: emailOrUserNameController,\r\n                                validator: (value) {\r\n                                  if (value == null || value.isEmpty) {\r\n                                    return 'Please enter email or username';\r\n                                  }\r\n                                  return null;\r\n                                },\r\n                                decoration: InputDecoration(\r\n                                    hintText: 'Enter email or username',\r\n                                    hintStyle: TextStyle(\r\n                                        color: Colors.grey,\r\n                                        fontFamily: 'Iphone',\r\n                                        fontSize: 14),\r\n                                    fillColor: Colors.grey,\r\n                                    enabledBorder: UnderlineInputBorder(\r\n                                        borderSide:\r\n                                            BorderSide(color: Colors.grey)),\r\n                                    focusedBorder: UnderlineInputBorder(\r\n                                        borderSide:\r\n                                            BorderSide(color: Colors.grey))),\r\n                              ),\r\n                              SizedBox(\r\n                                height: 15,\r\n                              ),\r\n                              TextFormField(\r\n                                controller: passController,\r\n                                obscureText: true,\r\n                                validator: (value) {\r\n                                  if (value == null || value.isEmpty) {\r\n                                    return ' Please enter a password  ';\r\n                                  }\r\n                                  return null;\r\n                                },\r\n                                decoration: InputDecoration(\r\n                                    hintText: 'Password',\r\n                                    hintStyle: TextStyle(\r\n                                        color: Colors.grey,\r\n                                        fontFamily: 'Iphone',\r\n                                        fontSize: 14),\r\n                                    fillColor: Colors.grey,\r\n                                    enabledBorder: UnderlineInputBorder(\r\n                                        borderSide:\r\n                                            BorderSide(color: Colors.grey)),\r\n                                    focusedBorder: UnderlineInputBorder(\r\n                                        borderSide:\r\n                                            BorderSide(color: Colors.grey))),\r\n                              ),\r\n                              SizedBox(\r\n                                height: 15,\r\n                              ),\r\n                              if (isToggled)\r\n                                Column(\r\n                                  children: [\r\n                                    TextFormField(\r\n                                      controller: confirmPassController,\r\n                                      obscureText: true,\r\n                                      validator: (value) {\r\n                                        if (value == null || value.isEmpty) {\r\n                                          return 'Please confirm your password';\r\n                                        } else if (value !=\r\n                                            passController.text) {\r\n                                          return 'Passwords do not match';\r\n                                        }\r\n                                        return null;\r\n                                      },\r\n                                      decoration: InputDecoration(\r\n                                          hintText: 'Confirm Password',\r\n                                          hintStyle: TextStyle(\r\n                                              color: Colors.grey,\r\n                                              fontFamily: 'Iphone',\r\n                                              fontSize: 14),\r\n                                          fillColor: Colors.grey,\r\n                                          enabledBorder: UnderlineInputBorder(\r\n                                              borderSide: BorderSide(\r\n                                                  color: Colors.grey)),\r\n                                          focusedBorder: UnderlineInputBorder(\r\n                                              borderSide: BorderSide(\r\n                                                  color: Colors.grey))),\r\n                                    ),\r\n                                    SizedBox(\r\n                                      height: 25,\r\n                                    ),\r\n                                  ],\r\n                                ),\r\n                              TextButton(\r\n                                onPressed: () {\r\n                                  if (isToggled) {\r\n                                    if (_formKey.currentState!.validate()) {\r\n                                      submitRegister();\r\n                                    }\r\n                                  } else {\r\n                                    if (_formKey.currentState!.validate()) {\r\n                                      submitLogin();\r\n                                    }\r\n\r\n                                    // if (Form.of(context).validate()) {\r\n                                    //   Navigator.push(\r\n                                    //     context,\r\n                                    //     MaterialPageRoute(\r\n                                    //         builder: (context) =>\r\n                                    //             const HomeScreen()),\r\n                                    //   );\r\n                                    // }\r\n                                  }\r\n                                },\r\n                                style: ElevatedButton.styleFrom(\r\n                                  shape: RoundedRectangleBorder(\r\n                                    borderRadius: BorderRadius.circular(20.0),\r\n                                  ),\r\n                                ),\r\n                                child: Container(\r\n                                  width: double.infinity,\r\n                                  decoration: BoxDecoration(\r\n                                    color: primaryColor,\r\n                                    borderRadius: BorderRadius.circular(20.0),\r\n                                  ),\r\n                                  padding: EdgeInsets.symmetric(\r\n                                      vertical: 16.0, horizontal: 32.0),\r\n                                  child: Text(\r\n                                    isToggled ? 'Sign Up' : 'Log In',\r\n                                    textAlign: TextAlign.center,\r\n                                    style: TextStyle(\r\n                                      color: Colors.white,\r\n                                      fontSize: 16,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                              ),\r\n                              SizedBox(\r\n                                height: 14,\r\n                              ),\r\n                              Text(\r\n                                'OR',\r\n                                textAlign: TextAlign.center,\r\n                                style: TextStyle(\r\n                                  color: Colors.grey,\r\n                                  fontSize: 14,\r\n                                ),\r\n                              ),\r\n                              SizedBox(height: 16),\r\n                              Row(\r\n                                mainAxisAlignment:\r\n                                    MainAxisAlignment.spaceEvenly,\r\n                                children: [\r\n                                  InkWell(\r\n                                    onTap: () {},\r\n                                    child: Container(\r\n                                      padding: EdgeInsetsDirectional.symmetric(\r\n                                        horizontal: 8,\r\n                                        vertical: 8,\r\n                                      ),\r\n                                      decoration: BoxDecoration(\r\n                                        borderRadius: BorderRadius.circular(20),\r\n                                        border: Border.all(\r\n                                            color: const Color.fromARGB(\r\n                                                255, 210, 208, 208)),\r\n                                      ),\r\n                                      child: Logo(\r\n                                        Logos.facebook_f,\r\n                                        size: 24,\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                  InkWell(\r\n                                    onTap: () {},\r\n                                    child: Container(\r\n                                      padding: EdgeInsets.symmetric(\r\n                                        horizontal: 8,\r\n                                        vertical: 8,\r\n                                      ),\r\n                                      decoration: BoxDecoration(\r\n                                        borderRadius: BorderRadius.circular(20),\r\n                                        border: Border.all(\r\n                                            color: const Color.fromARGB(\r\n                                                255, 210, 208, 208)),\r\n                                      ),\r\n                                      child: Logo(\r\n                                        Logos.twitter,\r\n                                        size: 24,\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                  InkWell(\r\n                                    onTap: () {},\r\n                                    child: Container(\r\n                                      padding: EdgeInsets.symmetric(\r\n                                        horizontal: 8,\r\n                                        vertical: 8,\r\n                                      ),\r\n                                      decoration: BoxDecoration(\r\n                                        borderRadius: BorderRadius.circular(20),\r\n                                        border: Border.all(\r\n                                            color: const Color.fromARGB(\r\n                                                255, 210, 208, 208)),\r\n                                      ),\r\n                                      child: Logo(\r\n                                        Logos.google,\r\n                                        size: 24,\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                      ],\r\n                    ),\r\n                  ),\r\n                )\r\n              ],\r\n            ),\r\n          ),\r\n        ));\r\n  }\r\n}\r\n"
        }
    ]
}