{
    "sourceFile": "lib/Screens/user_management_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1695405288447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1695405288447,
            "name": "Commit-0",
            "content": "import 'package:easy_localization/easy_localization.dart';\r\nimport 'package:final_projectt/Screens/main_screen.dart';\r\nimport 'package:final_projectt/core/helpers/api_response.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\n\r\nimport 'package:final_projectt/core/widgets/custom_alert.dart';\r\nimport 'package:final_projectt/providers/all_user_provider.dart';\r\nimport 'package:final_projectt/providers/user_provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:flutter_slidable/flutter_slidable.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:shimmer/shimmer.dart';\r\n\r\nclass UserManagementScreen extends StatefulWidget {\r\n  const UserManagementScreen({super.key});\r\n\r\n  @override\r\n  State<UserManagementScreen> createState() => _UserManagementScreenState();\r\n}\r\n\r\nclass _UserManagementScreenState extends State<UserManagementScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: backGroundColor,\r\n      appBar: AppBar(\r\n        backgroundColor: backGroundColor,\r\n        centerTitle: true,\r\n        elevation: 0,\r\n        title: Text(\r\n          \"User Management\".tr(),\r\n          style: const TextStyle(color: Colors.black),\r\n        ),\r\n        leading: IconButton(\r\n          onPressed: () async {\r\n            await Provider.of<UserProvider>(context, listen: false)\r\n                .getUserData();\r\n            // ignore: use_build_context_synchronously\r\n            Navigator.pop(context)\r\n          },\r\n          icon: const Icon(Icons.arrow_back_ios),\r\n          color: Colors.blueAccent,\r\n        ),\r\n      ),\r\n      body: Padding(\r\n        padding: const EdgeInsets.only(top: 24.0),\r\n        child: Consumer<AllUserProvider>(\r\n          builder: (_, allUserProvider, __) {\r\n            if (allUserProvider.allUserdata.status == Status.LOADING) {\r\n              return ListView.builder(\r\n                itemCount: allUserProvider.allUserdata.data?.users?.length,\r\n                shrinkWrap: true,\r\n                itemBuilder: (context, index) {\r\n                  return Shimmer.fromColors(\r\n                    baseColor: Colors.grey[300]!,\r\n                    highlightColor: Colors.grey[100]!,\r\n                    child: Container(\r\n                      margin: const EdgeInsets.all(8),\r\n                      decoration: BoxDecoration(\r\n                          color: Colors.white,\r\n                          borderRadius: BorderRadius.circular(10)),\r\n                      height: 70,\r\n                    ),\r\n                  );\r\n                },\r\n              );\r\n            }\r\n            if (allUserProvider.allUserdata.status == Status.COMPLETED) {\r\n              return ListView.builder(\r\n                  itemCount: allUserProvider.allUserdata.data?.users?.length,\r\n                  shrinkWrap: true,\r\n                  physics: const BouncingScrollPhysics(),\r\n                  itemBuilder: (context, index) {\r\n                    return ListTile(\r\n                      title: Slidable(\r\n                        endActionPane: ActionPane(\r\n                          extentRatio: 0.4,\r\n                          motion: const ScrollMotion(),\r\n                          children: [\r\n                            // const SizedBox(\r\n                            //   width: 16,\r\n                            // ),\r\n                            Container(\r\n                              margin: EdgeInsets.symmetric(horizontal: 8),\r\n                              width: 55,\r\n                              height: 55,\r\n                              child: SlidableAction(\r\n                                padding: const EdgeInsets.all(0),\r\n                                spacing: 3,\r\n                                // An action can be bigger than the others.\r\n\r\n                                borderRadius: BorderRadius.circular(16),\r\n\r\n                                onPressed: (context) {\r\n                                  showDialog(\r\n                                    context: context,\r\n                                    builder: (BuildContext context) {\r\n                                      return CustomAlertDialog(\r\n                                        type: \"edit\",\r\n                                        name: allUserProvider.allUserdata.data!\r\n                                            .users![index].name!,\r\n                                        email: allUserProvider.allUserdata.data!\r\n                                            .users![index].email!,\r\n                                        image: allUserProvider.allUserdata.data!\r\n                                            .users![index].image,\r\n                                        role: allUserProvider.allUserdata.data!\r\n                                            .users![index].role!.name!,\r\n                                        userId: allUserProvider.allUserdata\r\n                                            .data!.users![index].id!,\r\n                                        roleId: allUserProvider.allUserdata\r\n                                            .data!.users![index].role!.id!,\r\n                                      );\r\n                                    },\r\n                                  );\r\n                                },\r\n                                backgroundColor: Colors.amberAccent,\r\n                                foregroundColor: Colors.white,\r\n                                icon: Icons.edit,\r\n                                //    label: 'Edit',\r\n                              ),\r\n                            ),\r\n                            // const SizedBox(\r\n                            //   width: 8,\r\n                            // ),\r\n                            Container(\r\n                              margin: EdgeInsets.symmetric(horizontal: 8),\r\n                              width: 55,\r\n                              height: 55,\r\n                              child: SlidableAction(\r\n                                borderRadius: BorderRadius.circular(16),\r\n                                padding: const EdgeInsets.all(0),\r\n                                spacing: 3,\r\n                                onPressed: (context) {\r\n                                  showDialog(\r\n                                    context: context,\r\n                                    builder: (BuildContext context) {\r\n                                      return CustomAlertDialog(\r\n                                        type: \"delet\",\r\n                                        name: allUserProvider.allUserdata.data!\r\n                                            .users![index].name!,\r\n                                        email: allUserProvider.allUserdata.data!\r\n                                            .users![index].email!,\r\n                                        image: allUserProvider.allUserdata.data!\r\n                                            .users![index].image,\r\n                                        role: allUserProvider.allUserdata.data!\r\n                                            .users![index].role!.name!,\r\n                                        userId: allUserProvider.allUserdata\r\n                                            .data!.users![index].id!,\r\n                                        roleId: allUserProvider.allUserdata\r\n                                            .data!.users![index].role!.id!,\r\n                                      );\r\n                                    },\r\n                                  );\r\n                                },\r\n                                backgroundColor: Colors.red,\r\n                                foregroundColor: Colors.white,\r\n                                icon: Icons.delete,\r\n\r\n                                //  label: 'delete',\r\n                              ),\r\n                            ),\r\n                          ],\r\n                        ),\r\n                        child: Container(\r\n                          padding: const EdgeInsets.symmetric(\r\n                              vertical: 8, horizontal: 4),\r\n                          decoration: BoxDecoration(\r\n                              color: index % 2 == 0\r\n                                  ? Colors.grey[100]\r\n                                  : Colors.grey[200],\r\n                              borderRadius: BorderRadius.circular(16)),\r\n                          child: Row(\r\n                            children: [\r\n                              Container(\r\n                                height: 50,\r\n                                width: 50,\r\n                                clipBehavior: Clip.antiAliasWithSaveLayer,\r\n                                decoration:\r\n                                    const BoxDecoration(shape: BoxShape.circle),\r\n                                child: allUserProvider.allUserdata.data!\r\n                                            .users![index].image !=\r\n                                        null\r\n                                    ? Image.network(\r\n                                        'https://palmail.gsgtt.tech/storage/${allUserProvider.allUserdata.data!.users![index].image!}',\r\n                                        fit: BoxFit.fill,\r\n                                      )\r\n                                    : Image.asset('images/user.jpg'),\r\n                              ),\r\n                              const SizedBox(\r\n                                width: 8,\r\n                              ),\r\n                              Column(\r\n                                mainAxisAlignment: MainAxisAlignment.start,\r\n                                crossAxisAlignment: CrossAxisAlignment.start,\r\n                                children: [\r\n                                  Text(\r\n                                    allUserProvider\r\n                                        .allUserdata.data!.users![index].name!,\r\n                                    style: const TextStyle(\r\n                                        fontWeight: FontWeight.bold),\r\n                                  ),\r\n                                  allUserProvider.allUserdata.data!\r\n                                              .users![index].role !=\r\n                                          null\r\n                                      ? Text(\r\n                                          allUserProvider.allUserdata.data!\r\n                                              .users![index].role!.name!,\r\n                                          style: const TextStyle(\r\n                                              color: Colors.grey),\r\n                                        )\r\n                                      : const SizedBox()\r\n                                ],\r\n                              ),\r\n                            ],\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    );\r\n                  });\r\n            }\r\n\r\n            return const Text(\" no data from All User Provider \");\r\n          },\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Spacer(),\r\n                                // IconButton(\r\n                                //     onPressed: () async {\r\n                                //       showDialog(\r\n                                //         context: context,\r\n                                //         builder: (BuildContext context) {\r\n                                //           return CustomAlertDialog(\r\n                                //             type: \"edit\",\r\n                                //             name: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].name!,\r\n                                //             email: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].email!,\r\n                                //             image: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].image,\r\n                                //             role: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].role!.name!,\r\n                                //             userId: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].id!,\r\n                                //             roleId: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].role!.id!,\r\n                                //           );\r\n                                //         },\r\n                                //       );\r\n                                //     },\r\n                                //     icon: const Icon(Icons.edit)),\r\n                                // IconButton(\r\n                                //     onPressed: () async {\r\n                                //       showDialog(\r\n                                //         context: context,\r\n                                //         builder: (BuildContext context) {\r\n                                //           return CustomAlertDialog(\r\n                                //             type: \"delet\",\r\n                                //             name: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].name!,\r\n                                //             email: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].email!,\r\n                                //             image: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].image,\r\n                                //             role: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].role!.name!,\r\n                                //             userId: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].id!,\r\n                                //             roleId: allUserProvider.allUserdata\r\n                                //                 .data!.users![index].role!.id!,\r\n                                //           );\r\n                                //         },\r\n                                //       );\r\n                                //     },\r\n                                //     icon: const Icon(Icons.delete)),"
        }
    ]
}