{
    "sourceFile": "lib/Screens/profile_page.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1694688787367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1694690744918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   State<ProfileScreen> createState() => _ProfileScreenState();\r\n }\r\n \r\n class _ProfileScreenState extends State<ProfileScreen> {\r\n-  Future<User>\r\n+  Future<User> use\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     double deviceWidth = MediaQuery.of(context).size.width;\r\n     double deviceHeight = MediaQuery.of(context).size.height;\r\n"
                },
                {
                    "date": 1694690750251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n   State<ProfileScreen> createState() => _ProfileScreenState();\r\n }\r\n \r\n class _ProfileScreenState extends State<ProfileScreen> {\r\n-  Future<User> user ; \r\n+  late Future<User> user ; \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     double deviceWidth = MediaQuery.of(context).size.width;\r\n     double deviceHeight = MediaQuery.of(context).size.height;\r\n"
                }
            ],
            "date": 1694688787367,
            "name": "Commit-0",
            "content": "import 'package:final_projectt/core/helpers/api_response.dart';\r\nimport 'package:final_projectt/core/util/constants/colors.dart';\r\nimport 'package:final_projectt/providers/user_provider.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass ProfileScreen extends StatefulWidget {\r\n  const ProfileScreen({super.key});\r\n\r\n  @override\r\n  State<ProfileScreen> createState() => _ProfileScreenState();\r\n}\r\n\r\nclass _ProfileScreenState extends State<ProfileScreen> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    double deviceWidth = MediaQuery.of(context).size.width;\r\n    double deviceHeight = MediaQuery.of(context).size.height;\r\n\r\n    return Scaffold(\r\n      backgroundColor: backGroundColor,\r\n      body: SingleChildScrollView(\r\n        child: Stack(\r\n          alignment: Alignment.topCenter,\r\n          children: [\r\n            Container(\r\n              clipBehavior: Clip.antiAliasWithSaveLayer,\r\n              width: deviceWidth,\r\n              height: deviceHeight * 0.4,\r\n              decoration: BoxDecoration(\r\n                color: primaryColor,\r\n                borderRadius: const BorderRadius.only(\r\n                    bottomLeft: Radius.circular(50),\r\n                    bottomRight: Radius.circular(170)),\r\n              ),\r\n            ),\r\n            Padding(\r\n              padding: const EdgeInsets.symmetric(horizontal: 18, vertical: 38),\r\n              child: Column(\r\n                crossAxisAlignment: CrossAxisAlignment.start,\r\n                children: [\r\n                  Row(\r\n                    mainAxisAlignment: MainAxisAlignment.spaceBetween,\r\n                    children: [\r\n                      GestureDetector(\r\n                        onTap: () {\r\n                          Navigator.pop(context);\r\n                        },\r\n                        child: const Icon(\r\n                          Icons.arrow_back_ios,\r\n                          color: Colors.white,\r\n                        ),\r\n                      ),\r\n                      GestureDetector(\r\n                          onTap: () {},\r\n                          child:\r\n                              const Icon(Icons.edit_note, color: Colors.white))\r\n                    ],\r\n                  ),\r\n                  const SizedBox(\r\n                    height: 20,\r\n                  ),\r\n                  // const Padding(\r\n                  //   padding: EdgeInsets.only(left: 8.0, top: 150),\r\n                  //   child: Column(\r\n                  //     mainAxisAlignment: MainAxisAlignment.center,\r\n                  //     children: [\r\n                  //       Text(\r\n                  //         'Mohammed Hasaballah',\r\n                  //         style: TextStyle(\r\n                  //             fontSize: 18,\r\n                  //             fontWeight: FontWeight.bold,\r\n                  //             color: Colors.white),\r\n                  //       ),\r\n                  //       SizedBox(\r\n                  //         height: 5,\r\n                  //       ),\r\n                  //       Text(\r\n                  //         'mhasabo@gmail.com',\r\n                  //         style: TextStyle(\r\n                  //             color: Color.fromARGB(255, 206, 205, 205),\r\n                  //             fontSize: 14),\r\n                  //       ),\r\n                  //       Text(\r\n                  //         'admin',\r\n                  //         style: TextStyle(\r\n                  //             color: Color.fromARGB(255, 206, 205, 205),\r\n                  //             fontSize: 12),\r\n                  //       )\r\n                  //     ],\r\n                  //   ),\r\n                  // ),\r\n                  Container(\r\n                    margin: const EdgeInsets.only(top: 130, left: 20),\r\n                    child: RichText(\r\n                      text: const TextSpan(\r\n                        children: <TextSpan>[\r\n                          TextSpan(\r\n                            text: 'P',\r\n                            style: TextStyle(\r\n                                fontSize: 100, fontWeight: FontWeight.bold),\r\n                          ),\r\n                          TextSpan(\r\n                            text: 'rofile',\r\n                            style: TextStyle(\r\n                                fontSize: 30, fontStyle: FontStyle.italic),\r\n                          ),\r\n                        ],\r\n                      ),\r\n                    ),\r\n                  ),\r\n                  // const Padding(\r\n                  //   padding: EdgeInsets.only(left: 25.0),\r\n                  //   child: Text(\r\n                  //     'Page',\r\n                  //     style: TextStyle(\r\n                  //         fontSize: 30,\r\n                  //         fontStyle: FontStyle.italic,\r\n                  //         color: Colors.white),\r\n                  //   ),\r\n                  // )\r\n                ],\r\n              ),\r\n            ),\r\n            Consumer<UserProvider>(builder: (_, userProvidor, __) {\r\n              if (userProvidor.data.status == Status.LOADING) {\r\n                return const Center(\r\n                  child: CircularProgressIndicator(),\r\n                );\r\n              }\r\n              if (userProvidor.data.status == Status.COMPLETED) {\r\n                return Container(\r\n                  margin: const EdgeInsets.only(top: 180, left: 180),\r\n                  height: 200,\r\n                  width: 200,\r\n                  clipBehavior: Clip.antiAliasWithSaveLayer,\r\n                  decoration:\r\n                      BoxDecoration(borderRadius: BorderRadius.circular(100)),\r\n                  child: Image.network(\r\n                    'https://palmail.gsgtt.tech/storage/${userProvidor.data.data!.user.image}',\r\n                    fit: BoxFit.cover,\r\n                  ),\r\n                );\r\n              }\r\n              return const Text(\"  no data from user provider \");\r\n            }),\r\n            Consumer<UserProvider>(builder: (_, userProvidor, __) {\r\n              if (userProvidor.data.status == Status.LOADING) {\r\n                return const Center(\r\n                  child: CircularProgressIndicator(),\r\n                );\r\n              }\r\n              if (userProvidor.data.status == Status.COMPLETED) {\r\n                return Container(\r\n                  margin: const EdgeInsets.only(top: 400),\r\n                  child: Column(children: [\r\n                    ListTile(\r\n                      leading: const CircleAvatar(\r\n                        radius: 50,\r\n                        child: Icon(Icons.person),\r\n                      ),\r\n                      title: const Text(\r\n                        'Name:',\r\n                        style: TextStyle(\r\n                            color: Color.fromARGB(255, 134, 134, 134)),\r\n                      ),\r\n                      subtitle: Text(\r\n                        userProvidor.data.data!.user.name,\r\n                        style: const TextStyle(\r\n                            fontSize: 16,\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Colors.black),\r\n                      ),\r\n                    ),\r\n                    ListTile(\r\n                      leading: const CircleAvatar(\r\n                        radius: 50,\r\n                        child: Icon(Icons.email),\r\n                      ),\r\n                      title: const Text(\r\n                        'Email:',\r\n                        style: TextStyle(\r\n                            color: Color.fromARGB(255, 134, 134, 134)),\r\n                      ),\r\n                      subtitle: Text(\r\n                        userProvidor.data.data!.user.email,\r\n                        style: const TextStyle(\r\n                            fontSize: 16,\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Colors.black),\r\n                      ),\r\n                    ),\r\n                    ListTile(\r\n                      leading: const CircleAvatar(\r\n                        radius: 50,\r\n                        child: Icon(\r\n                          Icons.account_box,\r\n                        ),\r\n                      ),\r\n                      title: const Text(\r\n                        'Role:',\r\n                        style: TextStyle(\r\n                            color: Color.fromARGB(255, 134, 134, 134)),\r\n                      ),\r\n                      subtitle: Text(\r\n                        userProvidor.data.data!.user.role!.name,\r\n                        style: const TextStyle(\r\n                            fontSize: 16,\r\n                            fontWeight: FontWeight.bold,\r\n                            color: Colors.black),\r\n                      ),\r\n                    ),\r\n                  ]),\r\n                );\r\n              }\r\n              return const Text(\"  no data from user provider \");\r\n            }),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}